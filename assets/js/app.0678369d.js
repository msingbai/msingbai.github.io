(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,i,a=e[0],l=e[1],c=e[2],p=0,d=[];p<a.length;p++)i=a[p],Object.prototype.hasOwnProperty.call(s,i)&&s[i]&&d.push(s[i][0]),s[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(u&&u(e);d.length;)d.shift()();return o.push.apply(o,c||[]),t()}function t(){for(var n,e=0;e<o.length;e++){for(var t=o[e],r=!0,a=1;a<t.length;a++){var l=t[a];0!==s[l]&&(r=!1)}r&&(o.splice(e--,1),n=i(i.s=t[0]))}return n}var r={},s={8:0},o=[];function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=s[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=s[n]=[e,r]}));e.push(t[2]=r);var o,a=document.createElement("script");a.charset="utf-8",a.timeout=120,i.nc&&a.setAttribute("nonce",i.nc),a.src=function(n){return i.p+"assets/js/"+({9:"vendors~docsearch"}[n]||n)+"."+{1:"459f44db",2:"b5f1636b",3:"424b9c9b",4:"2a819298",5:"d27e7371",6:"37db4b1a",7:"e8babe25",9:"715d43b1",10:"b411da95",11:"70c4c821",12:"fc034411",13:"bf447d09",14:"2110d1ef",15:"a8361dd6",16:"5e587bb0",17:"c50e8f3c",18:"6045c98c",19:"ffae77cb",20:"86ebaf93",21:"72cf51ac",22:"23919162",23:"517c5d3c",24:"a9da4446",25:"53c77f65",26:"66d8631a",27:"115a7249",28:"849a6b6e",29:"daed3500",30:"a5862ca4",31:"5e3c4540",32:"318d83b3",33:"d379353e",34:"9b34b524",35:"24fc424f",36:"26c798dd",37:"fcf0675c",38:"517e57b7",39:"a9e648c3",40:"8a82b0af",41:"24b1b6b5",42:"5e42e841",43:"bd23299e",44:"b2b0fe99",45:"fb893a9b",46:"6ec41810",47:"b1238335",48:"66fc547c",49:"bd4a733f",50:"4c5f00e0",51:"c47876a4",52:"f951f159",53:"292fd804",54:"4e4f4c4b",55:"ac9acb08",56:"6b4556e0",57:"31c074da",58:"39209271",59:"0456f81c",60:"15d8bbb3",61:"b2f9de3c",62:"6dd7f506",63:"0421c167",64:"c9cb8715",65:"12bffbbe",66:"88765122",67:"da4635a3",68:"3c63ba61",69:"1219a0e7",70:"3bf0c89d",71:"4609fbf2",72:"ace2d2ea",73:"e15ac531",74:"d47d3d15",75:"784758d9",76:"0e73a7e0",77:"89347cf2",78:"9c50e302",79:"00d763e1",80:"5b6be473",81:"b2b214ce",82:"249cca3e",83:"b75ea537",84:"17c4e646",85:"5e44bc70",86:"f94349cd",87:"680e7388",88:"1e7d772f",89:"60f3d956",90:"3f4140b9",91:"021a013d",92:"8f4eee93",93:"aab62397",94:"ec6ad21a",95:"7821d592",96:"248f77af",97:"29ac9496",98:"79e86021",99:"53776a77",100:"86c1fa4f",101:"51da8083",102:"6ed4984f",103:"28740fa2",104:"dff20c88",105:"e33ce77b",106:"610b874c",107:"74804a1e",108:"31e50897",109:"bddc8741",110:"88616cd1",111:"02e407d6",112:"00c579cd",113:"58c51772",114:"8cb5a814",115:"f104783a",116:"83652adf",117:"68afb32e",118:"1996006a"}[n]+".js"}(n);var l=new Error;o=function(e){a.onerror=a.onload=null,clearTimeout(c);var t=s[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+o+")",l.name="ChunkLoadError",l.type=r,l.request=o,t[1](l)}s[n]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:a})}),12e4);a.onerror=a.onload=o,document.head.appendChild(a)}return Promise.all(e)},i.m=n,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/",i.oe=function(n){throw console.error(n),n};var a=window.webpackJsonp=window.webpackJsonp||[],l=a.push.bind(a);a.push=e,a=a.slice();for(var c=0;c<a.length;c++)e(a[c]);var u=l;o.push([133,0]),t()}([function(n,e,t){"use strict";function r(n,e,t,r,s,o,i,a){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),s&&s.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):s&&(l=a?function(){s.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:s),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(n,e){return l.call(e),u(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r="object"==typeof document&&document.all;n.exports=void 0===r&&void 0!==r?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var r=t(9),s=String,o=TypeError;n.exports=function(n){if(r(n))return n;throw new o(s(n)+" is not an object")}},function(n,e,t){"use strict";var r=function(n){return n&&n.Math===Math&&n};n.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";var r=t(11),s=t(3),o=t(148),i=t(2),a=t(1),l=t(88),c=t(131),u=t(150),p=t(4),d=t(10),m=t(16),h=t(89).IteratorPrototype,f=t(7),g=t(23),v=m("toStringTag"),b=TypeError,y=s.Iterator,x=g||!a(y)||y.prototype!==h||!p((function(){y({})})),w=function(){if(o(this,h),l(this)===h)throw new b("Abstract class Iterator not directly constructable")},k=function(n,e){f?c(h,n,{configurable:!0,get:function(){return e},set:function(e){if(i(this),this===h)throw new b("You can't redefine this property");d(this,n)?this[n]=e:u(this,n,e)}}):h[n]=e};d(h,v)||k(v,"Iterator"),!x&&d(h,"constructor")&&h.constructor!==Object||k("constructor",w),w.prototype=h,r({global:!0,constructor:!0,forced:x},{Iterator:w})},function(n,e,t){"use strict";var r=t(33),s=Function.prototype,o=s.call,i=r&&s.bind.bind(o,o);n.exports=r?i:function(n){return function(){return o.apply(n,arguments)}}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){"use strict";var r=t(1),s=t(49),o=TypeError;n.exports=function(n){if(r(n))return n;throw new o(s(n)+" is not a function")}},function(n,e,t){"use strict";var r=t(1);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){"use strict";var r=t(6),s=t(31),o=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return o(s(n),e)}},function(n,e,t){"use strict";var r=t(3),s=t(71).f,o=t(24),i=t(46),a=t(51),l=t(85),c=t(147);n.exports=function(n,e){var t,u,p,d,m,h=n.target,f=n.global,g=n.stat;if(t=f?r:g?r[h]||a(h,{}):r[h]&&r[h].prototype)for(u in e){if(d=e[u],p=n.dontCallGetSet?(m=s(t,u))&&m.value:t[u],!c(f?u:h+(g?".":"#")+u,n.forced)&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(n.sham||p&&p.sham)&&o(d,"sham",!0),i(t,u,d,n)}}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){"use strict";var r=t(33),s=Function.prototype.call;n.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},function(n,e,t){var r=t(97),s="object"==typeof self&&self&&self.Object===Object&&self,o=r||s||Function("return this")();n.exports=o},function(n,e,t){"use strict";var r=t(11),s=t(13),o=t(8),i=t(2),a=t(26),l=t(90),c=t(91),u=t(23),p=l((function(){for(var n,e,t=this.iterator,r=this.predicate,o=this.next;;){if(n=i(s(o,t)),this.done=!!n.done)return;if(e=n.value,c(t,r,[e,this.counter++],!0))return e}}));r({target:"Iterator",proto:!0,real:!0,forced:u},{filter:function(n){return i(this),o(n),new p(a(this),{predicate:n})}})},function(n,e,t){"use strict";var r=t(3),s=t(78),o=t(10),i=t(79),a=t(75),l=t(74),c=r.Symbol,u=s("wks"),p=l?c.for||c:c&&c.withoutSetter||i;n.exports=function(n){return o(u,n)||(u[n]=a&&o(c,n)?c[n]:p("Symbol."+n)),u[n]}},function(n,e,t){"use strict";var r=t(11),s=t(45),o=t(8),i=t(2),a=t(26);r({target:"Iterator",proto:!0,real:!0},{forEach:function(n){i(this),o(n);var e=a(this),t=0;s(e,(function(e){n(e,t++)}),{IS_RECORD:!0})}})},function(n,e,t){"use strict";var r=t(7),s=t(80),o=t(82),i=t(2),a=t(72),l=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor;e.f=r?o?function(n,e,t){if(i(n),e=a(e),i(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=u(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(i(n),e=a(e),i(t),s)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(201),s=t(204);n.exports=function(n,e){var t=s(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return o})),t.d(e,"j",(function(){return i})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return u})),t.d(e,"c",(function(){return p})),t.d(e,"f",(function(){return d})),t.d(e,"l",(function(){return m})),t.d(e,"m",(function(){return h})),t.d(e,"d",(function(){return g})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return x}));t(25),t(5),t(15),t(17),t(21);const r=/#.*$/,s=/\.(md|html)$/,o=/\/$/,i=/^[a-z]+:/i;function a(n){return decodeURI(n).replace(r,"").replace(s,"")}function l(n){return i.test(n)}function c(n){return/^mailto:/.test(n)}function u(n){return/^tel:/.test(n)}function p(n){if(l(n))return n;if(!n)return"404";const e=n.match(r),t=e?e[0]:"",s=a(n);return o.test(s)?n:s+".html"+t}function d(n,e){const t=n.hash,s=function(n){const e=n&&n.match(r);if(e)return e[0]}(e);if(s&&t!==s)return!1;return a(n.path)===a(e)}function m(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;const s=e.split("/");t&&s[s.length-1]||s.pop();const o=n.replace(/^\//,"").split("/");for(let n=0;n<o.length;n++){const e=o[n];".."===e?s.pop():"."!==e&&s.push(e)}""!==s[0]&&s.unshift("");return s.join("/")}(e,t));const r=a(e);for(let e=0;e<n.length;e++)if(a(n[e].regularPath)===r)return Object.assign({},n[e],{type:"page",path:p(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function h(n,e,t,r){const{pages:s,themeConfig:o}=t,i=r&&o.locales&&o.locales[r]||o;if("auto"===(n.frontmatter.sidebar||i.sidebar||o.sidebar))return f(n);const a=i.sidebar||o.sidebar;if(a){const{base:t,config:r}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const r in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:e[r]};var t;return{}}(e,a);return"auto"===r?f(n):r?r.map(n=>function n(e,t,r,s=1){if("string"==typeof e)return m(t,e,r);if(Array.isArray(e))return Object.assign(m(t,e[0],r),{title:e[1]});{s>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const o=e.children||[];return 0===o.length&&e.path?Object.assign(m(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:o.map(e=>n(e,t,r,s+1)),collapsable:!1!==e.collapsable}}}(n,s,t)):[]}return[]}function f(n){const e=g(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function g(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return y(e)-y(n)}},function(n,e,t){"use strict";var r=t(11),s=t(156);r({target:"Iterator",proto:!0,real:!0,forced:t(23)},{map:s})},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var r=t(7),s=t(18),o=t(34);n.exports=r?function(n,e,t){return s.f(n,e,o(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";var r=t(11),s=t(31),o=t(32),i=t(180),a=t(182);r({target:"Array",proto:!0,arity:1,forced:t(4)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=s(this),t=o(e),r=arguments.length;a(t+r);for(var l=0;l<r;l++)e[t]=arguments[l],t++;return i(e,t),t}})},function(n,e,t){"use strict";n.exports=function(n){return{iterator:n,next:n.next,done:!1}}},function(n,e,t){var r=t(29),s=t(186),o=t(187),i=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?s(n):o(n)}},function(n,e,t){"use strict";var r=t(6),s=r({}.toString),o=r("".slice);n.exports=function(n){return o(s(n),8,-1)}},function(n,e,t){var r=t(14).Symbol;n.exports=r},function(n){n.exports=JSON.parse('{"name":"vuepress-plugin-vdoing-comment","version":"1.3.0","description":"Comment plugin in vuepress vdoing theme, supports Gitalk, Valine, Artalk...","main":"index.js","scripts":{"test":"echo \\"Error: no test specified\\" && exit 1"},"repository":{"type":"git","url":"git+ssh://git@github.com/terwer/vuepress-plugin-vdoing-comment.git"},"keywords":["vuepress","comment","plugin","vue","gitalk","valine","artalk"],"author":"terwer","license":"MIT","bugs":{"url":"https://github.com/terwer/vuepress-plugin-vdoing-comment/issues"},"homepage":"https://github.com/terwer/vuepress-plugin-vdoing-comment/blob/main/README.md","dependencies":{"ejs":"^3.1.8","gitalk":"^1.5.0","gitalk-fix":"^1.5.2","i":"^0.3.6","npm":"^6.9.0","valine":"^1.3.9","artalk":"^2.8.7"}}')},function(n,e,t){"use strict";var r=t(47),s=Object;n.exports=function(n){return s(r(n))}},function(n,e,t){"use strict";var r=t(145);n.exports=function(n){return r(n.length)}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var r=t(68),s=t(47);n.exports=function(n){return r(s(n))}},function(n,e,t){"use strict";var r=t(3),s=t(1),o=function(n){return s(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?o(r[n]):r[n]&&r[n][e]}},function(n,e,t){"use strict";var r=t(6);n.exports=r({}.isPrototypeOf)},function(n,e,t){"use strict";var r=t(8),s=t(48);n.exports=function(n,e){var t=n[e];return s(t)?void 0:r(t)}},function(n,e,t){var r=t(191),s=t(192),o=t(193),i=t(194),a=t(195);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=s,l.prototype.get=o,l.prototype.has=i,l.prototype.set=a,n.exports=l},function(n,e,t){var r=t(99);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(19)(Object,"create");n.exports=r},function(n,e,t){var r=t(213);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(63);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r,s;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(s="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function s(n,e,t){return n<e?e:n>t?t:n}function o(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=s(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),u=r.speed,p=r.easing;return l.offsetWidth,i((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),a(c,function(n,e,t){var s;return(s="translate3d"===r.positionUsing?{transform:"translate3d("+o(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(n)+"%,0)"}:{"margin-left":o(n)+"%"}).transition="all "+e+"ms "+t,s}(n,u,p)),1===n?(a(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){a(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*s(Math.random()*e,.1,.95)),e=s(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var s,i=e.querySelector(r.barSelector),l=n?"-100":o(t.status||0),u=document.querySelector(r.parent);return a(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(s=e.querySelector(r.spinnerSelector))&&d(s),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),a=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,s=n.length,o=e.charAt(0).toUpperCase()+e.slice(1);s--;)if((r=n[s]+o)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,s,o=arguments;if(2==o.length)for(t in e)void 0!==(s=e[t])&&e.hasOwnProperty(t)&&r(n,t,s);else r(n,o[1],o[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=p(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=s)},function(n,e,t){"use strict";var r=t(132),s=t(13),o=t(2),i=t(49),a=t(163),l=t(32),c=t(37),u=t(164),p=t(93),d=t(55),m=TypeError,h=function(n,e){this.stopped=n,this.result=e},f=h.prototype;n.exports=function(n,e,t){var g,v,b,y,x,w,k,E=t&&t.that,S=!(!t||!t.AS_ENTRIES),_=!(!t||!t.IS_RECORD),T=!(!t||!t.IS_ITERATOR),A=!(!t||!t.INTERRUPTED),C=r(e,E),j=function(n){return g&&d(g,"normal",n),new h(!0,n)},I=function(n){return S?(o(n),A?C(n[0],n[1],j):C(n[0],n[1])):A?C(n,j):C(n)};if(_)g=n.iterator;else if(T)g=n;else{if(!(v=p(n)))throw new m(i(n)+" is not iterable");if(a(v)){for(b=0,y=l(n);y>b;b++)if((x=I(n[b]))&&c(f,x))return x;return new h(!1)}g=u(n,v)}for(w=_?n.next:g.next;!(k=s(w,g)).done;){try{x=I(k.value)}catch(n){d(g,"throw",n)}if("object"==typeof x&&x&&c(f,x))return x}return new h(!1)}},function(n,e,t){"use strict";var r=t(1),s=t(18),o=t(83),i=t(51);n.exports=function(n,e,t,a){a||(a={});var l=a.enumerable,c=void 0!==a.name?a.name:e;if(r(t)&&o(t,c,a),a.global)l?n[e]=t:i(e,t);else{try{a.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:s.f(n,e,{value:t,enumerable:!1,configurable:!a.nonConfigurable,writable:!a.nonWritable})}return n}},function(n,e,t){"use strict";var r=t(48),s=TypeError;n.exports=function(n){if(r(n))throw new s("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var r=String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var r=t(23),s=t(3),o=t(51),i=n.exports=s["__core-js_shared__"]||o("__core-js_shared__",{});(i.versions||(i.versions=[])).push({version:"3.40.0",mode:r?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.40.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";var r=t(3),s=Object.defineProperty;n.exports=function(n,e){try{s(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){"use strict";var r=t(78),s=t(79),o=r("keys");n.exports=function(n){return o[n]||(o[n]=s(n))}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r=t(13),s=t(2),o=t(38);n.exports=function(n,e,t){var i,a;s(n);try{if(!(i=o(n,"return"))){if("throw"===e)throw t;return t}i=r(i,n)}catch(n){a=!0,i=n}if("throw"===e)throw t;if(a)throw i;return s(i),t}},function(n,e,t){var r=t(185),s=t(22),o=Object.prototype,i=o.hasOwnProperty,a=o.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return s(n)&&i.call(n,"callee")&&!a.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(19)(t(14),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(205),s=t(212),o=t(214),i=t(215),a=t(216);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=s,l.prototype.get=o,l.prototype.has=i,l.prototype.set=a,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(12),s=t(63),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!s(n))||(i.test(n)||!o.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(27),s=t(22);n.exports=function(n){return"symbol"==typeof n||s(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.r(e);var r={name:"LastReadingPopup",data:()=>({lastReading:null,show:!1}),computed:{popupConfig(){const n={"/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"确定",cancelButtonText:"取消"},"/zh/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"前往",cancelButtonText:"取消"}};return n[`/${this.$lang.split("-")[0]}/`]||n[this.$localePath]||n},message(){const n=this.popupConfig;return n&&n.message||n["/"].message},sureButtonText(){const n=this.popupConfig;return n&&n.sureButtonText||n["/"].sureButtonText},cancelButtonText(){const n=this.popupConfig;return n&&n.cancelButtonText||n["/"].cancelButtonText}},mounted(){window.ActiveXObject||"ActiveXObject"in window?setTimeout(()=>{window.addEventListener("load",this.init())},1e3):setTimeout(()=>{window.addEventListener("load",this.init)},1e3)},methods:{init(){this.lastReading=JSON.parse(localStorage.getItem("lastReading")),this.lastReading&&(this.$route.path===this.lastReading.path?this.goto():(this.show=!0,setTimeout(this.clean,1e4)))},goto(){this.$route.path!==this.lastReading.path?this.$router.replace(this.lastReading.path).then(()=>{document.documentElement.scrollTop=this.lastReading.scrollTop,this.clean()}):this.$nextTick(()=>{document.documentElement.scrollTop=this.lastReading.scrollTop})},dontgoto(){this.clean()},clean(){this.show=!1,localStorage.removeItem("lastReading")}}},s=(t(279),t(0)),o=Object(s.a)(r,(function(){var n=this,e=n._self._c;return e("transition",{attrs:{name:"sw-update-popup"}},[n.show?e("div",{staticClass:"sw-update-popup"},[n._v("\n    "+n._s(n.message)+"\n\n    "),e("br"),n._v(" "),e("button",{on:{click:n.goto}},[n._v("\n      "+n._s(n.sureButtonText)+"\n    ")]),n._v(" "),e("button",{on:{click:n.dontgoto}},[n._v("\n      "+n._s(n.cancelButtonText)+"\n    ")])]):n._e()])}),[],!1,null,"181714f2",null);e.default=o.exports},function(n,e,t){"use strict";var r=t(11),s=t(45),o=t(8),i=t(2),a=t(26);r({target:"Iterator",proto:!0,real:!0},{some:function(n){i(this),o(n);var e=a(this),t=0;return s(e,(function(e,r){if(n(e,t++))return r()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,a="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=a||l||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,m=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function f(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var a=s.test(n);return a||o.test(n)?i(n.slice(2),a?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,s,o,i,a,l,c=0,u=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,o=s;return r=s=void 0,c=e,i=n.apply(o,t)}function y(n){return c=n,a=setTimeout(w,e),u?b(n):i}function x(n){var t=n-l;return void 0===l||t>=e||t<0||g&&n-c>=o}function w(){var n=m();if(x(n))return k(n);a=setTimeout(w,function(n){var t=e-(n-l);return g?d(t,o-(n-c)):t}(n))}function k(n){return a=void 0,v&&r?b(n):(r=s=void 0,i)}function E(){var n=m(),t=x(n);if(r=arguments,s=this,l=n,t){if(void 0===a)return y(l);if(g)return a=setTimeout(w,e),b(l)}return void 0===a&&(a=setTimeout(w,e)),i}return e=f(e)||0,h(t)&&(u=!!t.leading,o=(g="maxWait"in t)?p(f(t.maxWait)||0,e):o,v="trailing"in t?!!t.trailing:v),E.cancel=function(){void 0!==a&&clearTimeout(a),c=0,r=l=s=a=void 0},E.flush=function(){return void 0===a?i:k(m())},E}},function(n,e,t){"use strict";var r=t(6),s=t(4),o=t(28),i=Object,a=r("".split);n.exports=s((function(){return!i("z").propertyIsEnumerable(0)}))?function(n){return"String"===o(n)?a(n,""):i(n)}:i},function(n,e,t){"use strict";var r,s=t(2),o=t(151),i=t(54),a=t(53),l=t(153),c=t(81),u=t(52),p=u("IE_PROTO"),d=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},f=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;f="undefined"!=typeof document?document.domain&&r?h(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):h(r);for(var t=i.length;t--;)delete f.prototype[i[t]];return f()};a[p]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(d.prototype=s(n),t=new d,d.prototype=null,t[p]=n):t=f(),void 0===e?t:o.f(t,e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){"use strict";var r=t(7),s=t(13),o=t(134),i=t(34),a=t(35),l=t(72),c=t(10),u=t(80),p=Object.getOwnPropertyDescriptor;e.f=r?p:function(n,e){if(n=a(n),e=l(e),u)try{return p(n,e)}catch(n){}if(c(n,e))return i(!s(o.f,n,e),n[e])}},function(n,e,t){"use strict";var r=t(135),s=t(73);n.exports=function(n){var e=r(n,"string");return s(e)?e:e+""}},function(n,e,t){"use strict";var r=t(36),s=t(1),o=t(37),i=t(74),a=Object;n.exports=i?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return s(e)&&o(e.prototype,a(n))}},function(n,e,t){"use strict";var r=t(75);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var r=t(76),s=t(4),o=t(3).String;n.exports=!!Object.getOwnPropertySymbols&&!s((function(){var n=Symbol("symbol detection");return!o(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){"use strict";var r,s,o=t(3),i=t(77),a=o.process,l=o.Deno,c=a&&a.versions||l&&l.version,u=c&&c.v8;u&&(s=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(s=+r[1]),n.exports=s},function(n,e,t){"use strict";var r=t(3).navigator,s=r&&r.userAgent;n.exports=s?String(s):""},function(n,e,t){"use strict";var r=t(50);n.exports=function(n,e){return r[n]||(r[n]=e||{})}},function(n,e,t){"use strict";var r=t(6),s=0,o=Math.random(),i=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+i(++s+o,36)}},function(n,e,t){"use strict";var r=t(7),s=t(4),o=t(81);n.exports=!r&&!s((function(){return 7!==Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var r=t(3),s=t(9),o=r.document,i=s(o)&&s(o.createElement);n.exports=function(n){return i?o.createElement(n):{}}},function(n,e,t){"use strict";var r=t(7),s=t(4);n.exports=r&&s((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var r=t(6),s=t(4),o=t(1),i=t(10),a=t(7),l=t(137).CONFIGURABLE,c=t(138),u=t(84),p=u.enforce,d=u.get,m=String,h=Object.defineProperty,f=r("".slice),g=r("".replace),v=r([].join),b=a&&!s((function(){return 8!==h((function(){}),"length",{value:8}).length})),y=String(String).split("String"),x=n.exports=function(n,e,t){"Symbol("===f(m(e),0,7)&&(e="["+g(m(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!i(n,"name")||l&&n.name!==e)&&(a?h(n,"name",{value:e,configurable:!0}):n.name=e),b&&t&&i(t,"arity")&&n.length!==t.arity&&h(n,"length",{value:t.arity});try{t&&i(t,"constructor")&&t.constructor?a&&h(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=p(n);return i(r,"source")||(r.source=v(y,"string"==typeof e?e:"")),n};Function.prototype.toString=x((function(){return o(this)&&d(this).source||c(this)}),"toString")},function(n,e,t){"use strict";var r,s,o,i=t(139),a=t(3),l=t(9),c=t(24),u=t(10),p=t(50),d=t(52),m=t(53),h=a.TypeError,f=a.WeakMap;if(i||p.state){var g=p.state||(p.state=new f);g.get=g.get,g.has=g.has,g.set=g.set,r=function(n,e){if(g.has(n))throw new h("Object already initialized");return e.facade=n,g.set(n,e),e},s=function(n){return g.get(n)||{}},o=function(n){return g.has(n)}}else{var v=d("state");m[v]=!0,r=function(n,e){if(u(n,v))throw new h("Object already initialized");return e.facade=n,c(n,v,e),e},s=function(n){return u(n,v)?n[v]:{}},o=function(n){return u(n,v)}}n.exports={set:r,get:s,has:o,enforce:function(n){return o(n)?s(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=s(e)).type!==n)throw new h("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var r=t(10),s=t(140),o=t(71),i=t(18);n.exports=function(n,e,t){for(var a=s(e),l=i.f,c=o.f,u=0;u<a.length;u++){var p=a[u];r(n,p)||t&&r(t,p)||l(n,p,c(e,p))}}},function(n,e,t){"use strict";var r=t(6),s=t(10),o=t(35),i=t(142).indexOf,a=t(53),l=r([].push);n.exports=function(n,e){var t,r=o(n),c=0,u=[];for(t in r)!s(a,t)&&s(r,t)&&l(u,t);for(;e.length>c;)s(r,t=e[c++])&&(~i(u,t)||l(u,t));return u}},function(n,e,t){"use strict";var r=t(144);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){"use strict";var r=t(10),s=t(1),o=t(31),i=t(52),a=t(149),l=i("IE_PROTO"),c=Object,u=c.prototype;n.exports=a?c.getPrototypeOf:function(n){var e=o(n);if(r(e,l))return e[l];var t=e.constructor;return s(t)&&e instanceof t?t.prototype:e instanceof c?u:null}},function(n,e,t){"use strict";var r,s,o,i=t(4),a=t(1),l=t(9),c=t(69),u=t(88),p=t(46),d=t(16),m=t(23),h=d("iterator"),f=!1;[].keys&&("next"in(o=[].keys())?(s=u(u(o)))!==Object.prototype&&(r=s):f=!0),!l(r)||i((function(){var n={};return r[h].call(n)!==n}))?r={}:m&&(r=c(r)),a(r[h])||p(r,h,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:f}},function(n,e,t){"use strict";var r=t(13),s=t(69),o=t(24),i=t(154),a=t(16),l=t(84),c=t(38),u=t(89).IteratorPrototype,p=t(155),d=t(55),m=a("toStringTag"),h=l.set,f=function(n){var e=l.getterFor(n?"WrapForValidIterator":"IteratorHelper");return i(s(u),{next:function(){var t=e(this);if(n)return t.nextHandler();if(t.done)return p(void 0,!0);try{var r=t.nextHandler();return t.returnHandlerResult?r:p(r,t.done)}catch(n){throw t.done=!0,n}},return:function(){var t=e(this),s=t.iterator;if(t.done=!0,n){var o=c(s,"return");return o?r(o,s):p(void 0,!0)}if(t.inner)try{d(t.inner.iterator,"normal")}catch(n){return d(s,"throw",n)}return s&&d(s,"normal"),p(void 0,!0)}})},g=f(!0),v=f(!1);o(v,m,"Iterator Helper"),n.exports=function(n,e,t){var r=function(r,s){s?(s.iterator=r.iterator,s.next=r.next):s=r,s.type=e?"WrapForValidIterator":"IteratorHelper",s.returnHandlerResult=!!t,s.nextHandler=n,s.counter=0,s.done=!1,h(this,s)};return r.prototype=e?g:v,r}},function(n,e,t){"use strict";var r=t(2),s=t(55);n.exports=function(n,e,t,o){try{return o?e(r(t)[0],t[1]):e(t)}catch(e){s(n,"throw",e)}}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";var r=t(94),s=t(38),o=t(48),i=t(92),a=t(16)("iterator");n.exports=function(n){if(!o(n))return s(n,a)||s(n,"@@iterator")||i[r(n)]}},function(n,e,t){"use strict";var r=t(165),s=t(1),o=t(28),i=t(16)("toStringTag"),a=Object,l="Arguments"===o(function(){return arguments}());n.exports=r?o:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=a(n),i))?t:l?o(e):"Object"===(r=o(e))&&s(e.callee)?"Arguments":r}},function(n,e,t){"use strict";var r=t(170),s=t(9),o=t(47),i=t(171);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return o(t),i(r),s(t)?(e?n(t,r):t.__proto__=r,t):t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,s=n.length;++t<r;)n[s+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(39),s=t(196),o=t(197),i=t(198),a=t(199),l=t(200);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=s,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(27),s=t(58);n.exports=function(n){if(!s(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(217),s=t(22);n.exports=function n(e,t,o,i,a){return e===t||(null==e||null==t||!s(e)&&!s(t)?e!=e&&t!=t:r(e,t,o,i,n,a))}},function(n,e,t){var r=t(104),s=t(220),o=t(105);n.exports=function(n,e,t,i,a,l){var c=1&t,u=n.length,p=e.length;if(u!=p&&!(c&&p>u))return!1;var d=l.get(n),m=l.get(e);if(d&&m)return d==e&&m==n;var h=-1,f=!0,g=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++h<u;){var v=n[h],b=e[h];if(i)var y=c?i(b,v,h,e,n,l):i(v,b,h,n,e,l);if(void 0!==y){if(y)continue;f=!1;break}if(g){if(!s(e,(function(n,e){if(!o(g,e)&&(v===n||a(v,n,t,i,l)))return g.push(e)}))){f=!1;break}}else if(v!==b&&!a(v,b,t,i,l)){f=!1;break}}return l.delete(n),l.delete(e),f}},function(n,e,t){var r=t(59),s=t(218),o=t(219);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=s,i.prototype.has=o,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(230),s=t(236),o=t(110);n.exports=function(n){return o(n)?r(n):s(n)}},function(n,e,t){(function(n){var r=t(14),s=t(232),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,a=i&&i.exports===o?r.Buffer:void 0,l=(a?a.isBuffer:void 0)||s;n.exports=l}).call(this,t(70)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(233),s=t(234),o=t(235),i=o&&o.isTypedArray,a=i?s(i):r;n.exports=a},function(n,e,t){var r=t(100),s=t(61);n.exports=function(n){return null!=n&&s(n.length)&&!r(n)}},function(n,e,t){var r=t(19)(t(14),"Set");n.exports=r},function(n,e,t){var r=t(58);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(115),s=t(43);n.exports=function(n,e){for(var t=0,o=(e=r(e,n)).length;null!=n&&t<o;)n=n[s(e[t++])];return t&&t==o?n:void 0}},function(n,e,t){var r=t(12),s=t(62),o=t(247),i=t(250);n.exports=function(n,e){return r(n)?n:s(n,e)?[n]:o(i(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(183),s=t(188),o=t(259),i=t(267),a=t(276),l=t(130),c=o((function(n){var e=l(n);return a(e)&&(e=void 0),i(r(n,1,a,!0),s(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,s=r.exec(t);if(!s)return t;var o="",i=0,a=0;for(i=s.index;i<t.length;i++){switch(t.charCodeAt(i)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}a!==i&&(o+=t.substring(a,i)),a=i+1,o+=e}return a!==i?o+t.substring(a,i):o}},function(n,e,t){"use strict";
/**
 * @file Embedded JavaScript templating engine. {@link http://ejs.co}
 * @author Matthew Eernisse <mde@fleegix.org>
 * @author Tiancheng "Timothy" Gu <timothygu99@gmail.com>
 * @project EJS
 * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}
 */var r=t(286),s=t(287),o=t(288),i=!1,a=t(289).version,l=["delimiter","scope","context","debug","compileDebug","client","_with","rmWhitespace","strict","filename","async"],c=l.concat("cache"),u=/^\uFEFF/;function p(n,t){var s,o,i=t.views,a=/^[A-Za-z]+:\\|^\//.exec(n);if(a&&a.length)s=e.resolveInclude(n.replace(/^\/*/,""),t.root||"/",!0);else if(t.filename&&(o=e.resolveInclude(n,t.filename),r.existsSync(o)&&(s=o)),s||Array.isArray(i)&&i.some((function(t){return o=e.resolveInclude(n,t,!0),r.existsSync(o)}))&&(s=o),!s)throw new Error('Could not find the include file "'+t.escapeFunction(n)+'"');return s}function d(n,t){var r,s=n.filename,o=arguments.length>1;if(n.cache){if(!s)throw new Error("cache option requires a filename");if(r=e.cache.get(s))return r;o||(t=h(s).toString().replace(u,""))}else if(!o){if(!s)throw new Error("Internal EJS error: no file name or template provided");t=h(s).toString().replace(u,"")}return r=e.compile(t,n),n.cache&&e.cache.set(s,r),r}function m(n,t,r){var s;if(!r){if("function"==typeof e.promiseImpl)return new e.promiseImpl((function(e,r){try{e(s=d(n)(t))}catch(n){r(n)}}));throw new Error("Please provide a callback function")}try{s=d(n)(t)}catch(n){return r(n)}r(null,s)}function h(n){return e.fileLoader(n)}function f(n,e,t,r,s){var o=e.split("\n"),i=Math.max(r-3,0),a=Math.min(o.length,r+3),l=s(t),c=o.slice(i,a).map((function(n,e){var t=e+i+1;return(t==r?" >> ":"    ")+t+"| "+n})).join("\n");throw n.path=l,n.message=(l||"ejs")+":"+r+"\n"+c+"\n\n"+n.message,n}function g(n){return n.replace(/;(\s*$)/,"$1")}function v(n,t){t=t||{};var r={};this.templateText=n,this.mode=null,this.truncate=!1,this.currentLine=1,this.source="",this.dependencies=[],r.client=t.client||!1,r.escapeFunction=t.escape||t.escapeFunction||o.escapeXML,r.compileDebug=!1!==t.compileDebug,r.debug=!!t.debug,r.filename=t.filename,r.openDelimiter=t.openDelimiter||e.openDelimiter||"<",r.closeDelimiter=t.closeDelimiter||e.closeDelimiter||">",r.delimiter=t.delimiter||e.delimiter||"%",r.strict=t.strict||!1,r.context=t.context,r.cache=t.cache||!1,r.rmWhitespace=t.rmWhitespace,r.root=t.root,r.outputFunctionName=t.outputFunctionName,r.localsName=t.localsName||e.localsName||"locals",r.views=t.views,r.async=t.async,r.destructuredLocals=t.destructuredLocals,r.legacyInclude=void 0===t.legacyInclude||!!t.legacyInclude,r.strict?r._with=!1:r._with=void 0===t._with||t._with,this.opts=r,this.regex=this.createRegex()}e.cache=o.cache,e.fileLoader=r.readFileSync,e.localsName="locals",e.promiseImpl=new Function("return this;")().Promise,e.resolveInclude=function(n,e,t){var r=s.dirname,o=s.extname,i=(0,s.resolve)(t?e:r(e),n);return o(n)||(i+=".ejs"),i},e.compile=function(n,e){return e&&e.scope&&(i||(console.warn("`scope` option is deprecated and will be removed in EJS 3"),i=!0),e.context||(e.context=e.scope),delete e.scope),new v(n,e).compile()},e.render=function(n,e,t){var r=e||{},s=t||{};return 2==arguments.length&&o.shallowCopyFromList(s,r,l),d(s,n)(r)},e.renderFile=function(){var n,e,t,r=Array.prototype.slice.call(arguments),s=r.shift(),i={filename:s};return"function"==typeof arguments[arguments.length-1]&&(n=r.pop()),r.length?(e=r.shift(),r.length?o.shallowCopy(i,r.pop()):(e.settings&&(e.settings.views&&(i.views=e.settings.views),e.settings["view cache"]&&(i.cache=!0),(t=e.settings["view options"])&&o.shallowCopy(i,t)),o.shallowCopyFromList(i,e,c)),i.filename=s):e={},m(i,e,n)},e.Template=v,e.clearCache=function(){e.cache.reset()},v.modes={EVAL:"eval",ESCAPED:"escaped",RAW:"raw",COMMENT:"comment",LITERAL:"literal"},v.prototype={createRegex:function(){var n="(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",e=o.escapeRegExpChars(this.opts.delimiter),t=o.escapeRegExpChars(this.opts.openDelimiter),r=o.escapeRegExpChars(this.opts.closeDelimiter);return n=n.replace(/%/g,e).replace(/</g,t).replace(/>/g,r),new RegExp(n)},compile:function(){var n,e,t,r=this.opts,i="",a="",l=r.escapeFunction;if(!this.source){if(this.generateSource(),i+='  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n',r.outputFunctionName&&(i+="  var "+r.outputFunctionName+" = __append;\n"),r.destructuredLocals&&r.destructuredLocals.length){for(var c="  var __locals = ("+r.localsName+" || {}),\n",u=0;u<r.destructuredLocals.length;u++){var m=r.destructuredLocals[u];u>0&&(c+=",\n  "),c+=m+" = __locals."+m}i+=c+";\n"}!1!==r._with&&(i+="  with ("+r.localsName+" || {}) {\n",a+="  }\n"),a+="  return __output;\n",this.source=i+this.source+a}n=r.compileDebug?"var __line = 1\n  , __lines = "+JSON.stringify(this.templateText)+"\n  , __filename = "+(r.filename?JSON.stringify(r.filename):"undefined")+";\ntry {\n"+this.source+"} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n":this.source,r.client&&(n="escapeFn = escapeFn || "+l.toString()+";\n"+n,r.compileDebug&&(n="rethrow = rethrow || "+f.toString()+";\n"+n)),r.strict&&(n='"use strict";\n'+n),r.debug&&console.log(n),r.compileDebug&&r.filename&&(n=n+"\n//# sourceURL="+r.filename+"\n");try{if(r.async)try{t=new Function("return (async function(){}).constructor;")()}catch(n){throw n instanceof SyntaxError?new Error("This environment does not support async/await"):n}else t=Function;e=new t(r.localsName+", escapeFn, include, rethrow",n)}catch(n){throw n instanceof SyntaxError&&(r.filename&&(n.message+=" in "+r.filename),n.message+=" while compiling ejs\n\n",n.message+="If the above error is not helpful, you may want to try EJS-Lint:\n",n.message+="https://github.com/RyanZim/EJS-Lint",r.async||(n.message+="\n",n.message+="Or, if you meant to create an async function, pass `async: true` as an option.")),n}var h=r.client?e:function(n){return e.apply(r.context,[n||{},l,function(e,t){var s=o.shallowCopy({},n);return t&&(s=o.shallowCopy(s,t)),function(n,e){var t=o.shallowCopy({},e);return t.filename=p(n,t),d(t)}(e,r)(s)},f])};if(h.dependencies=this.dependencies,r.filename&&"function"==typeof Object.defineProperty){var g=r.filename,v=s.basename(g,s.extname(g));try{Object.defineProperty(h,"name",{value:v,writable:!1,enumerable:!1,configurable:!0})}catch(n){}}return h},generateSource:function(){var n=this.opts;n.rmWhitespace&&(this.templateText=this.templateText.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),this.templateText=this.templateText.replace(/[ \t]*<%_/gm,"<%_").replace(/_%>[ \t]*/gm,"_%>");var t=this,r=this.parseTemplateText(),s=this.opts.delimiter,i=this.opts.openDelimiter,a=this.opts.closeDelimiter;r&&r.length&&r.forEach((function(l,c){var d,m,f,g,b,y;if(0===l.indexOf(i+s)&&0!==l.indexOf(i+s+s)&&(m=r[c+2])!=s+a&&m!="-"+s+a&&m!="_"+s+a)throw new Error('Could not find matching close tag for "'+l+'".');if(n.legacyInclude&&(f=l.match(/^\s*include\s+(\S+)/))&&(d=r[c-1])&&(d==i+s||d==i+s+"-"||d==i+s+"_"))return g=o.shallowCopy({},t.opts),b=function(n,e){var t,r,s=o.shallowCopy({},e);r=h(t=p(n,s)).toString().replace(u,""),s.filename=t;var i=new v(r,s);return i.generateSource(),{source:i.source,filename:t,template:r}}(f[1],g),y=t.opts.compileDebug?"    ; (function(){\n      var __line = 1\n      , __lines = "+JSON.stringify(b.template)+"\n      , __filename = "+JSON.stringify(b.filename)+";\n      try {\n"+b.source+"      } catch (e) {\n        rethrow(e, __lines, __filename, __line, escapeFn);\n      }\n    ; }).call(this)\n":"    ; (function(){\n"+b.source+"    ; }).call(this)\n",t.source+=y,void t.dependencies.push(e.resolveInclude(f[1],g.filename));t.scanLine(l)}))},parseTemplateText:function(){for(var n,e=this.templateText,t=this.regex,r=t.exec(e),s=[];r;)0!==(n=r.index)&&(s.push(e.substring(0,n)),e=e.slice(n)),s.push(r[0]),e=e.slice(r[0].length),r=t.exec(e);return e&&s.push(e),s},_addOutput:function(n){if(this.truncate&&(n=n.replace(/^(?:\r\n|\r|\n)/,""),this.truncate=!1),!n)return n;n=(n=(n=(n=n.replace(/\\/g,"\\\\")).replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/"/g,'\\"'),this.source+='    ; __append("'+n+'")\n'},scanLine:function(n){var e,t=this.opts.delimiter,r=this.opts.openDelimiter,s=this.opts.closeDelimiter;switch(e=n.split("\n").length-1,n){case r+t:case r+t+"_":this.mode=v.modes.EVAL;break;case r+t+"=":this.mode=v.modes.ESCAPED;break;case r+t+"-":this.mode=v.modes.RAW;break;case r+t+"#":this.mode=v.modes.COMMENT;break;case r+t+t:this.mode=v.modes.LITERAL,this.source+='    ; __append("'+n.replace(r+t+t,r+t)+'")\n';break;case t+t+s:this.mode=v.modes.LITERAL,this.source+='    ; __append("'+n.replace(t+t+s,t+s)+'")\n';break;case t+s:case"-"+t+s:case"_"+t+s:this.mode==v.modes.LITERAL&&this._addOutput(n),this.mode=null,this.truncate=0===n.indexOf("-")||0===n.indexOf("_");break;default:if(this.mode){switch(this.mode){case v.modes.EVAL:case v.modes.ESCAPED:case v.modes.RAW:n.lastIndexOf("//")>n.lastIndexOf("\n")&&(n+="\n")}switch(this.mode){case v.modes.EVAL:this.source+="    ; "+n+"\n";break;case v.modes.ESCAPED:this.source+="    ; __append(escapeFn("+g(n)+"))\n";break;case v.modes.RAW:this.source+="    ; __append("+g(n)+")\n";break;case v.modes.COMMENT:break;case v.modes.LITERAL:this._addOutput(n)}}else this._addOutput(n)}this.opts.compileDebug&&e&&(this.currentLine+=e,this.source+="    ; __line = "+this.currentLine+"\n")}},e.escapeXML=o.escapeXML,e.__express=e.renderFile,e.VERSION=a,e.name="ejs","undefined"!=typeof window&&(window.ejs=e)},function(n,e,t){var r;"undefined"!=typeof self&&self,r=function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return n[r].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:r})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=7)}([function(n,e,t){n.exports=!t(6)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e){n.exports=function(n,e,t,r,s){var o,i=n=n||{},a=typeof n.default;"object"!==a&&"function"!==a||(o=n,i=n.default);var l,c="function"==typeof i?i.options:i;if(e&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns),r&&(c._scopeId=r),s?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),t&&t.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(s)},c._ssrRegister=l):t&&(l=t),l){var u=c.functional,p=u?c.render:c.beforeCreate;u?c.render=function(n,e){return l.call(e),p(n,e)}:c.beforeCreate=p?[].concat(p,l):[l]}return{esModule:o,exports:i,options:c}}},function(n,e){var t=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(n,e){var t=n.exports={version:"2.5.7"};"number"==typeof __e&&(__e=t)},function(n,e,t){var r=t(23),s=t(24),o=t(26),i=Object.defineProperty;e.f=t(0)?Object.defineProperty:function(n,e,t){if(r(n),e=o(e,!0),r(t),s)try{return i(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[e]=t.value),n}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r,s,o;s=[e,t(8),t(11)],void 0===(o="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Tabs=n.Tab=void 0;var r=o(e),s=o(t);function o(n){return n&&n.__esModule?n:{default:n}}n.default={install:function(n){n.component("tab",r.default),n.component("tabs",s.default)}},n.Tab=r.default,n.Tabs=s.default})?r.apply(e,s):r)||(n.exports=o)},function(n,e,t){var r=t(2)(t(9),t(10),null,null,null);n.exports=r.exports},function(n,e,t){var r,s,o;s=[e],void 0===(o="function"==typeof(r=function(n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{id:{default:null},name:{required:!0},prefix:{default:""},suffix:{default:""},isDisabled:{default:!1}},data:function(){return{isActive:!1,isVisible:!0}},computed:{header:function(){return this.prefix+this.name+this.suffix},computedId:function(){return this.id?this.id:this.name.toLowerCase().replace(/ /g,"-")},hash:function(){return this.isDisabled?"#":"#"+this.computedId}}}})?r.apply(e,s):r)||(n.exports=o)},function(n,e){n.exports={render:function(){var n=this.$createElement;return(this._self._c||n)("section",{directives:[{name:"show",rawName:"v-show",value:this.isActive,expression:"isActive"}],staticClass:"tabs-component-panel",attrs:{"aria-hidden":!this.isActive,id:this.computedId,role:"tabpanel"}},[this._t("default")],2)},staticRenderFns:[]}},function(n,e,t){var r=t(2)(t(12),t(29),null,null,null);n.exports=r.exports},function(n,e,t){var r,s,o;s=[e,t(13)],void 0===(o="function"==typeof(r=function(n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,r=(t=e)&&t.__esModule?t:{default:t};n.default={props:{cacheLifetime:{default:5},options:{type:Object,required:!1,default:function(){return{useUrlFragment:!0,defaultTabHash:null}}}},data:function(){return{tabs:[],activeTabHash:"",activeTabIndex:0,lastActiveTabHash:""}},computed:{storageKey:function(){return"vue-tabs-component.cache."+window.location.host+window.location.pathname}},created:function(){this.tabs=this.$children},mounted:function(){var n=this;if(window.addEventListener("hashchange",(function(){return n.selectTab(window.location.hash)})),this.findTab(window.location.hash))this.selectTab(window.location.hash);else{var e=r.default.get(this.storageKey);this.findTab(e)?this.selectTab(e):null!==this.options.defaultTabHash&&this.findTab("#"+this.options.defaultTabHash)?this.selectTab("#"+this.options.defaultTabHash):this.tabs.length&&this.selectTab(this.tabs[0].hash)}},methods:{findTab:function(n){return this.tabs.find((function(e){return e.hash===n}))},selectTab:function(n,e){e&&!this.options.useUrlFragment&&e.preventDefault();var t=this.findTab(n);t&&(t.isDisabled?e.preventDefault():this.lastActiveTabHash!==t.hash?(this.tabs.forEach((function(n){n.isActive=n.hash===t.hash})),this.$emit("changed",{tab:t}),this.activeTabHash=t.hash,this.activeTabIndex=this.getTabIndex(n),this.lastActiveTabHash=this.activeTabHash=t.hash,r.default.set(this.storageKey,t.hash,this.cacheLifetime)):this.$emit("clicked",{tab:t}))},setTabVisible:function(n,e){var t=this.findTab(n);t&&(t.isVisible=e,t.isActive&&(t.isActive=e,this.tabs.every((function(n,e,t){return!n.isVisible||(n.isActive=!0,!1)}))))},getTabIndex:function(n){var e=this.findTab(n);return this.tabs.indexOf(e)},getTabHash:function(n){var e=this,t=this.tabs.find((function(t){return e.tabs.indexOf(t)===n}));if(t)return t.hash},getActiveTab:function(){return this.findTab(this.activeTabHash)},getActiveTabIndex:function(){return this.getTabIndex(this.activeTabHash)}}}})?r.apply(e,s):r)||(n.exports=o)},function(n,e,t){var r,s,o;s=[e,t(14),t(15)],void 0===(o="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=o(e),s=o(t);function o(n){return n&&n.__esModule?n:{default:n}}var i=function(){function n(){(0,r.default)(this,n)}return(0,s.default)(n,[{key:"get",value:function(n){var e=JSON.parse(localStorage.getItem(n));return e?new Date(e.expires)<new Date?(localStorage.removeItem(n),null):e.value:null}},{key:"set",value:function(n,e,t){var r=(new Date).getTime(),s=new Date(r+6e4*t);localStorage.setItem(n,JSON.stringify({value:e,expires:s}))}}]),n}();n.default=new i})?r.apply(e,s):r)||(n.exports=o)},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}},function(n,e,t){"use strict";e.__esModule=!0;var r,s=t(16),o=(r=s)&&r.__esModule?r:{default:r};e.default=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,o.default)(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}()},function(n,e,t){n.exports={default:t(17),__esModule:!0}},function(n,e,t){t(18);var r=t(4).Object;n.exports=function(n,e,t){return r.defineProperty(n,e,t)}},function(n,e,t){var r=t(19);r(r.S+r.F*!t(0),"Object",{defineProperty:t(5).f})},function(n,e,t){var r=t(3),s=t(4),o=t(20),i=t(22),a=t(28),l=function(n,e,t){var c,u,p,d=n&l.F,m=n&l.G,h=n&l.S,f=n&l.P,g=n&l.B,v=n&l.W,b=m?s:s[e]||(s[e]={}),y=b.prototype,x=m?r:h?r[e]:(r[e]||{}).prototype;for(c in m&&(t=e),t)(u=!d&&x&&void 0!==x[c])&&a(b,c)||(p=u?x[c]:t[c],b[c]=m&&"function"!=typeof x[c]?t[c]:g&&u?o(p,r):v&&x[c]==p?function(n){var e=function(e,t,r){if(this instanceof n){switch(arguments.length){case 0:return new n;case 1:return new n(e);case 2:return new n(e,t)}return new n(e,t,r)}return n.apply(this,arguments)};return e.prototype=n.prototype,e}(p):f&&"function"==typeof p?o(Function.call,p):p,f&&((b.virtual||(b.virtual={}))[c]=p,n&l.R&&y&&!y[c]&&i(y,c,p)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,n.exports=l},function(n,e,t){var r=t(21);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,s){return n.call(e,t,r,s)}}return function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},function(n,e,t){var r=t(5),s=t(27);n.exports=t(0)?function(n,e,t){return r.f(n,e,s(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(1);n.exports=function(n){if(!r(n))throw TypeError(n+" is not an object!");return n}},function(n,e,t){n.exports=!t(0)&&!t(6)((function(){return 7!=Object.defineProperty(t(25)("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(1),s=t(3).document,o=r(s)&&r(s.createElement);n.exports=function(n){return o?s.createElement(n):{}}},function(n,e,t){var r=t(1);n.exports=function(n,e){if(!r(n))return n;var t,s;if(e&&"function"==typeof(t=n.toString)&&!r(s=t.call(n)))return s;if("function"==typeof(t=n.valueOf)&&!r(s=t.call(n)))return s;if(!e&&"function"==typeof(t=n.toString)&&!r(s=t.call(n)))return s;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e){n.exports={render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"tabs-component"},[t("ul",{staticClass:"tabs-component-tabs",attrs:{role:"tablist"}},n._l(n.tabs,(function(e,r){return t("li",{directives:[{name:"show",rawName:"v-show",value:e.isVisible,expression:"tab.isVisible"}],key:r,staticClass:"tabs-component-tab",class:{"is-active":e.isActive,"is-disabled":e.isDisabled},attrs:{role:"presentation"}},[t("a",{staticClass:"tabs-component-tab-a",attrs:{"aria-controls":e.hash,"aria-selected":e.isActive,href:e.hash,role:"tab"},domProps:{innerHTML:n._s(e.header)},on:{click:function(t){n.selectTab(e.hash,t)}}})])}))),n._v(" "),t("div",{staticClass:"tabs-component-panels"},[n._t("default")],2)])},staticRenderFns:[]}}])},n.exports=r()},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},s=(t(282),t(0)),o=Object(s.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=o.exports},function(n,e,t){"use strict";t.r(e);t(5),t(15),t(17),t(21);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},s=(t(283),t(0)),o=Object(s.a)(r,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,r){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=o.exports},function(n,e,t){"use strict";var r=t(94),s=String;n.exports=function(n){if("Symbol"===r(n))throw new TypeError("Cannot convert a Symbol value to a string");return s(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var r=t(83),s=t(18);n.exports=function(n,e,t){return t.get&&r(t.get,e,{getter:!0}),t.set&&r(t.set,e,{setter:!0}),s.f(n,e,t)}},function(n,e,t){"use strict";var r=t(162),s=t(8),o=t(33),i=r(r.bind);n.exports=function(n,e){return s(n),void 0===e?n:o?i(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){n.exports=t(294)},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,s=Object.getOwnPropertyDescriptor,o=s&&!r.call({1:2},1);e.f=o?function(n){var e=s(this,n);return!!e&&e.enumerable}:r},function(n,e,t){"use strict";var r=t(13),s=t(9),o=t(73),i=t(38),a=t(136),l=t(16),c=TypeError,u=l("toPrimitive");n.exports=function(n,e){if(!s(n)||o(n))return n;var t,l=i(n,u);if(l){if(void 0===e&&(e="default"),t=r(l,n,e),!s(t)||o(t))return t;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),a(n,e)}},function(n,e,t){"use strict";var r=t(13),s=t(1),o=t(9),i=TypeError;n.exports=function(n,e){var t,a;if("string"===e&&s(t=n.toString)&&!o(a=r(t,n)))return a;if(s(t=n.valueOf)&&!o(a=r(t,n)))return a;if("string"!==e&&s(t=n.toString)&&!o(a=r(t,n)))return a;throw new i("Can't convert object to primitive value")}},function(n,e,t){"use strict";var r=t(7),s=t(10),o=Function.prototype,i=r&&Object.getOwnPropertyDescriptor,a=s(o,"name"),l=a&&"something"===function(){}.name,c=a&&(!r||r&&i(o,"name").configurable);n.exports={EXISTS:a,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var r=t(6),s=t(1),o=t(50),i=r(Function.toString);s(o.inspectSource)||(o.inspectSource=function(n){return i(n)}),n.exports=o.inspectSource},function(n,e,t){"use strict";var r=t(3),s=t(1),o=r.WeakMap;n.exports=s(o)&&/native code/.test(String(o))},function(n,e,t){"use strict";var r=t(36),s=t(6),o=t(141),i=t(146),a=t(2),l=s([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=o.f(a(n)),t=i.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var r=t(86),s=t(54).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,s)}},function(n,e,t){"use strict";var r=t(35),s=t(143),o=t(32),i=function(n){return function(e,t,i){var a=r(e),l=o(a);if(0===l)return!n&&-1;var c,u=s(i,l);if(n&&t!=t){for(;l>u;)if((c=a[u++])!=c)return!0}else for(;l>u;u++)if((n||u in a)&&a[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){"use strict";var r=t(87),s=Math.max,o=Math.min;n.exports=function(n,e){var t=r(n);return t<0?s(t+e,0):o(t,e)}},function(n,e,t){"use strict";var r=Math.ceil,s=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?s:r)(e)}},function(n,e,t){"use strict";var r=t(87),s=Math.min;n.exports=function(n){var e=r(n);return e>0?s(e,9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var r=t(4),s=t(1),o=/#|\.prototype\./,i=function(n,e){var t=l[a(n)];return t===u||t!==c&&(s(e)?r(e):!!e)},a=i.normalize=function(n){return String(n).replace(o,".").toLowerCase()},l=i.data={},c=i.NATIVE="N",u=i.POLYFILL="P";n.exports=i},function(n,e,t){"use strict";var r=t(37),s=TypeError;n.exports=function(n,e){if(r(e,n))return n;throw new s("Incorrect invocation")}},function(n,e,t){"use strict";var r=t(4);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){"use strict";var r=t(7),s=t(18),o=t(34);n.exports=function(n,e,t){r?s.f(n,e,o(0,t)):n[e]=t}},function(n,e,t){"use strict";var r=t(7),s=t(82),o=t(18),i=t(2),a=t(35),l=t(152);e.f=r&&!s?Object.defineProperties:function(n,e){i(n);for(var t,r=a(e),s=l(e),c=s.length,u=0;c>u;)o.f(n,t=s[u++],r[t]);return n}},function(n,e,t){"use strict";var r=t(86),s=t(54);n.exports=Object.keys||function(n){return r(n,s)}},function(n,e,t){"use strict";var r=t(36);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(46);n.exports=function(n,e,t){for(var s in e)r(n,s,e[s],t);return n}},function(n,e,t){"use strict";n.exports=function(n,e){return{value:n,done:e}}},function(n,e,t){"use strict";var r=t(13),s=t(8),o=t(2),i=t(26),a=t(90),l=t(91),c=a((function(){var n=this.iterator,e=o(r(this.next,n));if(!(this.done=!!e.done))return l(n,this.mapper,[e.value,this.counter++],!0)}));n.exports=function(n){return o(this),s(n),new c(i(this),{mapper:n})}},function(n,e,t){"use strict";var r=t(11),s=t(158).left,o=t(159),i=t(76);r({target:"Array",proto:!0,forced:!t(160)&&i>79&&i<83||!o("reduce")},{reduce:function(n){var e=arguments.length;return s(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(8),s=t(31),o=t(68),i=t(32),a=TypeError,l="Reduce of empty array with no initial value",c=function(n){return function(e,t,c,u){var p=s(e),d=o(p),m=i(p);if(r(t),0===m&&c<2)throw new a(l);var h=n?m-1:0,f=n?-1:1;if(c<2)for(;;){if(h in d){u=d[h],h+=f;break}if(h+=f,n?h<0:m<=h)throw new a(l)}for(;n?h>=0:m>h;h+=f)h in d&&(u=t(u,d[h],h,p));return u}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){"use strict";var r=t(4);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var r=t(161);n.exports="NODE"===r},function(n,e,t){"use strict";var r=t(3),s=t(77),o=t(28),i=function(n){return s.slice(0,n.length)===n};n.exports=i("Bun/")?"BUN":i("Cloudflare-Workers")?"CLOUDFLARE":i("Deno/")?"DENO":i("Node.js/")?"NODE":r.Bun&&"string"==typeof Bun.version?"BUN":r.Deno&&"object"==typeof Deno.version?"DENO":"process"===o(r.process)?"NODE":r.window&&r.document?"BROWSER":"REST"},function(n,e,t){"use strict";var r=t(28),s=t(6);n.exports=function(n){if("Function"===r(n))return s(n)}},function(n,e,t){"use strict";var r=t(16),s=t(92),o=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(s.Array===n||i[o]===n)}},function(n,e,t){"use strict";var r=t(13),s=t(8),o=t(2),i=t(49),a=t(93),l=TypeError;n.exports=function(n,e){var t=arguments.length<2?a(n):e;if(s(t))return o(r(t,n));throw new l(i(n)+" is not iterable")}},function(n,e,t){"use strict";var r={};r[t(16)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){"use strict";var r=t(11),s=t(45),o=t(8),i=t(2),a=t(26),l=TypeError;r({target:"Iterator",proto:!0,real:!0},{reduce:function(n){i(this),o(n);var e=a(this),t=arguments.length<2,r=t?void 0:arguments[1],c=0;if(s(e,(function(e){t?(t=!1,r=e):r=n(r,e,c),c++}),{IS_RECORD:!0}),t)throw new l("Reduce of empty iterator with no initial value");return r}})},function(n,e,t){"use strict";var r=t(11),s=t(3),o=t(168),i=t(169),a=s.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=i(n,e,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},u=function(n,e){if(a&&a[n]){var t={};t[n]=i("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return o(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return o(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return o(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return o(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return o(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return o(n,this,arguments)}})),c("URIError",(function(n){return function(e){return o(n,this,arguments)}})),u("CompileError",(function(n){return function(e){return o(n,this,arguments)}})),u("LinkError",(function(n){return function(e){return o(n,this,arguments)}})),u("RuntimeError",(function(n){return function(e){return o(n,this,arguments)}}))},function(n,e,t){"use strict";var r=t(33),s=Function.prototype,o=s.apply,i=s.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?i.bind(o):function(){return i.apply(o,arguments)})},function(n,e,t){"use strict";var r=t(36),s=t(10),o=t(24),i=t(37),a=t(95),l=t(85),c=t(173),u=t(174),p=t(175),d=t(176),m=t(177),h=t(7),f=t(23);n.exports=function(n,e,t,g){var v=g?2:1,b=n.split("."),y=b[b.length-1],x=r.apply(null,b);if(x){var w=x.prototype;if(!f&&s(w,"cause")&&delete w.cause,!t)return x;var k=r("Error"),E=e((function(n,e){var t=p(g?e:n,void 0),r=g?new x(n):new x;return void 0!==t&&o(r,"message",t),m(r,E,r.stack,2),this&&i(w,this)&&u(r,this,E),arguments.length>v&&d(r,arguments[v]),r}));if(E.prototype=w,"Error"!==y?a?a(E,k):l(E,k,{name:!0}):h&&"stackTraceLimit"in x&&(c(E,x,"stackTraceLimit"),c(E,x,"prepareStackTrace")),l(E,x),!f)try{w.name!==y&&o(w,"name",y),w.constructor=E}catch(n){}return E}}},function(n,e,t){"use strict";var r=t(6),s=t(8);n.exports=function(n,e,t){try{return r(s(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var r=t(172),s=String,o=TypeError;n.exports=function(n){if(r(n))return n;throw new o("Can't set "+s(n)+" as a prototype")}},function(n,e,t){"use strict";var r=t(9);n.exports=function(n){return r(n)||null===n}},function(n,e,t){"use strict";var r=t(18).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var r=t(1),s=t(9),o=t(95);n.exports=function(n,e,t){var i,a;return o&&r(i=e.constructor)&&i!==t&&s(a=i.prototype)&&a!==t.prototype&&o(n,a),n}},function(n,e,t){"use strict";var r=t(129);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){"use strict";var r=t(9),s=t(24);n.exports=function(n,e){r(e)&&"cause"in e&&s(n,"cause",e.cause)}},function(n,e,t){"use strict";var r=t(24),s=t(178),o=t(179),i=Error.captureStackTrace;n.exports=function(n,e,t,a){o&&(i?i(n,e):r(n,"stack",s(t,a)))}},function(n,e,t){"use strict";var r=t(6),s=Error,o=r("".replace),i=String(new s("zxcasd").stack),a=/\n\s*at [^:]*:[^\n]*/,l=a.test(i);n.exports=function(n,e){if(l&&"string"==typeof n&&!s.prepareStackTrace)for(;e--;)n=o(n,a,"");return n}},function(n,e,t){"use strict";var r=t(4),s=t(34);n.exports=!r((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",s(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(7),s=t(181),o=TypeError,i=Object.getOwnPropertyDescriptor,a=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=a?function(n,e){if(s(n)&&!i(n,"length").writable)throw new o("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var r=t(28);n.exports=Array.isArray||function(n){return"Array"===r(n)}},function(n,e,t){"use strict";var r=TypeError;n.exports=function(n){if(n>9007199254740991)throw r("Maximum allowed index exceeded");return n}},function(n,e,t){var r=t(96),s=t(184);n.exports=function n(e,t,o,i,a){var l=-1,c=e.length;for(o||(o=s),a||(a=[]);++l<c;){var u=e[l];t>0&&o(u)?t>1?n(u,t-1,o,i,a):r(a,u):i||(a[a.length]=u)}return a}},function(n,e,t){var r=t(29),s=t(56),o=t(12),i=r?r.isConcatSpreadable:void 0;n.exports=function(n){return o(n)||s(n)||!!(i&&n&&n[i])}},function(n,e,t){var r=t(27),s=t(22);n.exports=function(n){return s(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(29),s=Object.prototype,o=s.hasOwnProperty,i=s.toString,a=r?r.toStringTag:void 0;n.exports=function(n){var e=o.call(n,a),t=n[a];try{n[a]=void 0;var r=!0}catch(n){}var s=i.call(n);return r&&(e?n[a]=t:delete n[a]),s}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(189),s=t(245),o=t(64),i=t(12),a=t(256);n.exports=function(n){return"function"==typeof n?n:null==n?o:"object"==typeof n?i(n)?s(n[0],n[1]):r(n):a(n)}},function(n,e,t){var r=t(190),s=t(244),o=t(113);n.exports=function(n){var e=s(n);return 1==e.length&&e[0][2]?o(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(98),s=t(102);n.exports=function(n,e,t,o){var i=t.length,a=i,l=!o;if(null==n)return!a;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<a;){var u=(c=t[i])[0],p=n[u],d=c[1];if(l&&c[2]){if(void 0===p&&!(u in n))return!1}else{var m=new r;if(o)var h=o(p,d,u,n,e,m);if(!(void 0===h?s(d,p,3,o,m):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(40),s=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():s.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(40);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(40);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(40);n.exports=function(n,e){var t=this.__data__,s=r(t,n);return s<0?(++this.size,t.push([n,e])):t[s][1]=e,this}},function(n,e,t){var r=t(39);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(39),s=t(57),o=t(59);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var i=t.__data__;if(!s||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new o(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(100),s=t(202),o=t(58),i=t(101),a=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,p=c.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!o(n)||s(n))&&(r(n)?d:a).test(i(n))}},function(n,e,t){var r,s=t(203),o=(r=/[^.]+$/.exec(s&&s.keys&&s.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!o&&o in n}},function(n,e,t){var r=t(14)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(206),s=t(39),o=t(57);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||s),string:new r}}},function(n,e,t){var r=t(207),s=t(208),o=t(209),i=t(210),a=t(211);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=s,l.prototype.get=o,l.prototype.has=i,l.prototype.set=a,n.exports=l},function(n,e,t){var r=t(41);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(41),s=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return s.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(41),s=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:s.call(e,n)}},function(n,e,t){var r=t(41);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(42);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(42);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(42);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(42);n.exports=function(n,e){var t=r(this,n),s=t.size;return t.set(n,e),this.size+=t.size==s?0:1,this}},function(n,e,t){var r=t(98),s=t(103),o=t(221),i=t(224),a=t(240),l=t(12),c=t(107),u=t(109),p="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,h,f){var g=l(n),v=l(e),b=g?"[object Array]":a(n),y=v?"[object Array]":a(e),x=(b="[object Arguments]"==b?p:b)==p,w=(y="[object Arguments]"==y?p:y)==p,k=b==y;if(k&&c(n)){if(!c(e))return!1;g=!0,x=!1}if(k&&!x)return f||(f=new r),g||u(n)?s(n,e,t,m,h,f):o(n,e,b,t,m,h,f);if(!(1&t)){var E=x&&d.call(n,"__wrapped__"),S=w&&d.call(e,"__wrapped__");if(E||S){var _=E?n.value():n,T=S?e.value():e;return f||(f=new r),h(_,T,t,m,f)}}return!!k&&(f||(f=new r),i(n,e,t,m,h,f))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(29),s=t(222),o=t(99),i=t(103),a=t(223),l=t(60),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,p,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new s(n),new s(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=a;case"[object Set]":var h=1&r;if(m||(m=l),n.size!=e.size&&!h)return!1;var f=d.get(n);if(f)return f==e;r|=2,d.set(n,e);var g=i(m(n),m(e),r,c,p,d);return d.delete(n),g;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(14).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(225),s=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,o,i,a){var l=1&t,c=r(n),u=c.length;if(u!=r(e).length&&!l)return!1;for(var p=u;p--;){var d=c[p];if(!(l?d in e:s.call(e,d)))return!1}var m=a.get(n),h=a.get(e);if(m&&h)return m==e&&h==n;var f=!0;a.set(n,e),a.set(e,n);for(var g=l;++p<u;){var v=n[d=c[p]],b=e[d];if(o)var y=l?o(b,v,d,e,n,a):o(v,b,d,n,e,a);if(!(void 0===y?v===b||i(v,b,t,o,a):y)){f=!1;break}g||(g="constructor"==d)}if(f&&!g){var x=n.constructor,w=e.constructor;x==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(f=!1)}return a.delete(n),a.delete(e),f}},function(n,e,t){var r=t(226),s=t(227),o=t(106);n.exports=function(n){return r(n,o,s)}},function(n,e,t){var r=t(96),s=t(12);n.exports=function(n,e,t){var o=e(n);return s(n)?o:r(o,t(n))}},function(n,e,t){var r=t(228),s=t(229),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,a=i?function(n){return null==n?[]:(n=Object(n),r(i(n),(function(e){return o.call(n,e)})))}:s;n.exports=a},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,s=0,o=[];++t<r;){var i=n[t];e(i,t,n)&&(o[s++]=i)}return o}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(231),s=t(56),o=t(12),i=t(107),a=t(108),l=t(109),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=o(n),u=!t&&s(n),p=!t&&!u&&i(n),d=!t&&!u&&!p&&l(n),m=t||u||p||d,h=m?r(n.length,String):[],f=h.length;for(var g in n)!e&&!c.call(n,g)||m&&("length"==g||p&&("offset"==g||"parent"==g)||d&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||a(g,f))||h.push(g);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(27),s=t(61),o=t(22),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return o(n)&&s(n.length)&&!!i[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(97),s=e&&!e.nodeType&&e,o=s&&"object"==typeof n&&n&&!n.nodeType&&n,i=o&&o.exports===s&&r.process,a=function(){try{var n=o&&o.require&&o.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=a}).call(this,t(70)(n))},function(n,e,t){var r=t(237),s=t(238),o=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return s(n);var e=[];for(var t in Object(n))o.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(239)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(241),s=t(57),o=t(242),i=t(111),a=t(243),l=t(27),c=t(101),u=c(r),p=c(s),d=c(o),m=c(i),h=c(a),f=l;(r&&"[object DataView]"!=f(new r(new ArrayBuffer(1)))||s&&"[object Map]"!=f(new s)||o&&"[object Promise]"!=f(o.resolve())||i&&"[object Set]"!=f(new i)||a&&"[object WeakMap]"!=f(new a))&&(f=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=f},function(n,e,t){var r=t(19)(t(14),"DataView");n.exports=r},function(n,e,t){var r=t(19)(t(14),"Promise");n.exports=r},function(n,e,t){var r=t(19)(t(14),"WeakMap");n.exports=r},function(n,e,t){var r=t(112),s=t(106);n.exports=function(n){for(var e=s(n),t=e.length;t--;){var o=e[t],i=n[o];e[t]=[o,i,r(i)]}return e}},function(n,e,t){var r=t(102),s=t(246),o=t(253),i=t(62),a=t(112),l=t(113),c=t(43);n.exports=function(n,e){return i(n)&&a(e)?l(c(n),e):function(t){var i=s(t,n);return void 0===i&&i===e?o(t,n):r(e,i,3)}}},function(n,e,t){var r=t(114);n.exports=function(n,e,t){var s=null==n?void 0:r(n,e);return void 0===s?t:s}},function(n,e,t){var r=t(248),s=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(s,(function(n,t,r,s){e.push(r?s.replace(o,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var r=t(249);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(59);function s(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,s=e?e.apply(this,r):r[0],o=t.cache;if(o.has(s))return o.get(s);var i=n.apply(this,r);return t.cache=o.set(s,i)||o,i};return t.cache=new(s.Cache||r),t}s.Cache=r,n.exports=s},function(n,e,t){var r=t(251);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(29),s=t(252),o=t(12),i=t(63),a=r?r.prototype:void 0,l=a?a.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(o(e))return s(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,s=Array(r);++t<r;)s[t]=e(n[t],t,n);return s}},function(n,e,t){var r=t(254),s=t(255);n.exports=function(n,e){return null!=n&&s(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(115),s=t(56),o=t(12),i=t(108),a=t(61),l=t(43);n.exports=function(n,e,t){for(var c=-1,u=(e=r(e,n)).length,p=!1;++c<u;){var d=l(e[c]);if(!(p=null!=n&&t(n,d)))break;n=n[d]}return p||++c!=u?p:!!(u=null==n?0:n.length)&&a(u)&&i(d,u)&&(o(n)||s(n))}},function(n,e,t){var r=t(257),s=t(258),o=t(62),i=t(43);n.exports=function(n){return o(n)?r(i(n)):s(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(114);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(64),s=t(260),o=t(262);n.exports=function(n,e){return o(s(n,e,r),n+"")}},function(n,e,t){var r=t(261),s=Math.max;n.exports=function(n,e,t){return e=s(void 0===e?n.length-1:e,0),function(){for(var o=arguments,i=-1,a=s(o.length-e,0),l=Array(a);++i<a;)l[i]=o[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=o[i];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(263),s=t(266)(r);n.exports=s},function(n,e,t){var r=t(264),s=t(265),o=t(64),i=s?function(n,e){return s(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:o;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(19),s=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=s},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var s=t(),o=16-(s-r);if(r=s,o>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(104),s=t(268),o=t(273),i=t(105),a=t(274),l=t(60);n.exports=function(n,e,t){var c=-1,u=s,p=n.length,d=!0,m=[],h=m;if(t)d=!1,u=o;else if(p>=200){var f=e?null:a(n);if(f)return l(f);d=!1,u=i,h=new r}else h=e?[]:m;n:for(;++c<p;){var g=n[c],v=e?e(g):g;if(g=t||0!==g?g:0,d&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue n;e&&h.push(v),m.push(g)}else u(h,v,t)||(h!==m&&h.push(v),m.push(g))}return m}},function(n,e,t){var r=t(269);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(270),s=t(271),o=t(272);n.exports=function(n,e,t){return e==e?o(n,e,t):r(n,s,t)}},function(n,e){n.exports=function(n,e,t,r){for(var s=n.length,o=t+(r?1:-1);r?o--:++o<s;)if(e(n[o],o,n))return o;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,s=n.length;++r<s;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,s=null==n?0:n.length;++r<s;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(111),s=t(275),o=t(60),i=r&&1/o(new r([,-0]))[1]==1/0?function(n){return new r(n)}:s;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(110),s=t(22);n.exports=function(n){return s(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(116)},function(n,e,t){},function(n,e,t){
/*!
  * vue-script2 v2.1.0
  * (c) 2016-2019 Greg Slepak
  * @license MIT License
  */
n.exports=function(){"use strict";var n={installed:!1,p:Promise.resolve(),version:"2.1.0",loaded:{},install(t){if(!n.installed){var r=["unload"].concat(["src","type","async","integrity","text","crossorigin"]);t.component("script2",{props:r,render(n){return n("div",{style:"display:none"},this.$slots.default)},mounted(){var t=this.$el.parentElement;if(this.src){var s=e.omitBy(e.pick(this,r),e.isUndefined);s.parent=t;var o=()=>n.load(this.src,s).then(()=>this.$emit("loaded"),n=>this.$emit("error",n));e.isUndefined(this.async)||"false"===this.async?n.p=n.p.then(o):o()}else n.p=n.p.then(()=>{var n=document.createElement("script"),e=this.$el.innerHTML;e=e.replace(/&lt;/gi,"<").replace(/&gt;/gi,">").replace(/&amp;/gi,"&"),n.type="text/javascript",n.appendChild(document.createTextNode(e)),t.appendChild(n),this.$emit("loaded")});this.$nextTick(()=>{this.$el.parentElement.removeChild(this.$el)})},destroyed(){this.unload&&(new Function(this.unload)(),delete n.loaded[this.src])}}),n.installed=!0}},load(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{parent:document.head};return n.loaded[t]||(n.loaded[t]=new Promise((n,s)=>{var o=document.createElement("script");e.defaults2(o,e.omit(r,["unload","parent"]),{type:"text/javascript"}),o.async=!1,o.src=t,r.crossorigin&&(o.crossOrigin=r.crossorigin),o.onload=()=>n(t),o.onerror=()=>s(new Error(t)),r.parent.appendChild(o)})),n.loaded[t]}},e={isUndefined:n=>void 0===n,pick(n,e){var t={};return e.forEach(e=>{t[e]=n[e]}),t},omit(n,e){var t={};return Object.keys(n).forEach(r=>{-1===e.indexOf(r)&&(t[r]=n[r])}),t},omitBy(n,e){var t={};return Object.keys(n).forEach(r=>{e(n[r])||(t[r]=n[r])}),t},defaults2(n){for(var t=arguments.length,r=new Array(t>1?t-1:0),s=1;s<t;s++)r[s-1]=arguments[s];r.forEach(t=>{Object.keys(t).forEach(r=>{(e.isUndefined(n[r])||""===n[r])&&(n[r]=t[r])})})}};return n}()},function(n,e,t){"use strict";t(117)},function(n,e,t){"use strict";t(118)},function(n,e,t){},function(n,e,t){},function(n,e){},function(n,e){function t(n,e){for(var t=0,r=n.length-1;r>=0;r--){var s=n[r];"."===s?n.splice(r,1):".."===s?(n.splice(r,1),t++):t&&(n.splice(r,1),t--)}if(e)for(;t--;t)n.unshift("..");return n}function r(n,e){if(n.filter)return n.filter(e);for(var t=[],r=0;r<n.length;r++)e(n[r],r,n)&&t.push(n[r]);return t}e.resolve=function(){for(var n="",e=!1,s=arguments.length-1;s>=-1&&!e;s--){var o=s>=0?arguments[s]:process.cwd();if("string"!=typeof o)throw new TypeError("Arguments to path.resolve must be strings");o&&(n=o+"/"+n,e="/"===o.charAt(0))}return(e?"/":"")+(n=t(r(n.split("/"),(function(n){return!!n})),!e).join("/"))||"."},e.normalize=function(n){var o=e.isAbsolute(n),i="/"===s(n,-1);return(n=t(r(n.split("/"),(function(n){return!!n})),!o).join("/"))||o||(n="."),n&&i&&(n+="/"),(o?"/":"")+n},e.isAbsolute=function(n){return"/"===n.charAt(0)},e.join=function(){var n=Array.prototype.slice.call(arguments,0);return e.normalize(r(n,(function(n,e){if("string"!=typeof n)throw new TypeError("Arguments to path.join must be strings");return n})).join("/"))},e.relative=function(n,t){function r(n){for(var e=0;e<n.length&&""===n[e];e++);for(var t=n.length-1;t>=0&&""===n[t];t--);return e>t?[]:n.slice(e,t-e+1)}n=e.resolve(n).substr(1),t=e.resolve(t).substr(1);for(var s=r(n.split("/")),o=r(t.split("/")),i=Math.min(s.length,o.length),a=i,l=0;l<i;l++)if(s[l]!==o[l]){a=l;break}var c=[];for(l=a;l<s.length;l++)c.push("..");return(c=c.concat(o.slice(a))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(n){if("string"!=typeof n&&(n+=""),0===n.length)return".";for(var e=n.charCodeAt(0),t=47===e,r=-1,s=!0,o=n.length-1;o>=1;--o)if(47===(e=n.charCodeAt(o))){if(!s){r=o;break}}else s=!1;return-1===r?t?"/":".":t&&1===r?"/":n.slice(0,r)},e.basename=function(n,e){var t=function(n){"string"!=typeof n&&(n+="");var e,t=0,r=-1,s=!0;for(e=n.length-1;e>=0;--e)if(47===n.charCodeAt(e)){if(!s){t=e+1;break}}else-1===r&&(s=!1,r=e+1);return-1===r?"":n.slice(t,r)}(n);return e&&t.substr(-1*e.length)===e&&(t=t.substr(0,t.length-e.length)),t},e.extname=function(n){"string"!=typeof n&&(n+="");for(var e=-1,t=0,r=-1,s=!0,o=0,i=n.length-1;i>=0;--i){var a=n.charCodeAt(i);if(47!==a)-1===r&&(s=!1,r=i+1),46===a?-1===e?e=i:1!==o&&(o=1):-1!==e&&(o=-1);else if(!s){t=i+1;break}}return-1===e||-1===r||0===o||1===o&&e===r-1&&e===t+1?"":n.slice(e,r)};var s="b"==="ab".substr(-1)?function(n,e,t){return n.substr(e,t)}:function(n,e,t){return e<0&&(e=n.length+e),n.substr(e,t)}},function(n,e,t){"use strict";var r=/[|\\{}()[\]^$+*?.]/g;e.escapeRegExpChars=function(n){return n?String(n).replace(r,"\\$&"):""};var s={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},o=/[&<>'"]/g;function i(n){return s[n]||n}e.escapeXML=function(n){return null==n?"":String(n).replace(o,i)},e.escapeXML.toString=function(){return Function.prototype.toString.call(this)+';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'},e.shallowCopy=function(n,e){for(var t in e=e||{})n[t]=e[t];return n},e.shallowCopyFromList=function(n,e,t){for(var r=0;r<t.length;r++){var s=t[r];void 0!==e[s]&&(n[s]=e[s])}return n},e.cache={_data:{},set:function(n,e){this._data[n]=e},get:function(n){return this._data[n]},remove:function(n){delete this._data[n]},reset:function(){this._data={}}}},function(n){n.exports=JSON.parse('{"name":"ejs","description":"Embedded JavaScript templates","keywords":["template","engine","ejs"],"version":"2.7.4","author":"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)","license":"Apache-2.0","main":"./lib/ejs.js","repository":{"type":"git","url":"git://github.com/mde/ejs.git"},"bugs":"https://github.com/mde/ejs/issues","homepage":"https://github.com/mde/ejs","dependencies":{},"devDependencies":{"browserify":"^13.1.1","eslint":"^4.14.0","git-directory-deploy":"^1.5.1","jake":"^10.3.1","jsdoc":"^3.4.0","lru-cache":"^4.0.1","mocha":"^5.0.5","uglify-js":"^3.3.16"},"engines":{"node":">=0.10.0"},"scripts":{"test":"mocha","postinstall":"node ./postinstall.js"}}')},function(n,e,t){"use strict";t(119)},function(n,e,t){"use strict";t(120)},function(n,e,t){"use strict";t(121)},function(n,e,t){"use strict";t(122)},function(n,e,t){"use strict";t.r(e);t(5),t(15),t(21);var r=Object.freeze({}),s=Array.isArray;function o(n){return null==n}function i(n){return null!=n}function a(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function u(n){return null!==n&&"object"==typeof n}var p=Object.prototype.toString;function d(n){return"[object Object]"===p.call(n)}function m(n){return"[object RegExp]"===p.call(n)}function h(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function f(n){return i(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function g(n){return null==n?"":Array.isArray(n)||d(n)&&n.toString===p?JSON.stringify(n,v,2):String(n)}function v(n,e){return e&&e.__v_isRef?e.value:e}function b(n){var e=parseFloat(n);return isNaN(e)?n:e}function y(n,e){for(var t=Object.create(null),r=n.split(","),s=0;s<r.length;s++)t[r[s]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}y("slot,component",!0);var x=y("key,ref,slot,slot-scope,is");function w(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var r=n.indexOf(e);if(r>-1)return n.splice(r,1)}}var k=Object.prototype.hasOwnProperty;function E(n,e){return k.call(n,e)}function S(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var _=/-(\w)/g,T=S((function(n){return n.replace(_,(function(n,e){return e?e.toUpperCase():""}))})),A=S((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),C=/\B([A-Z])/g,j=S((function(n){return n.replace(C,"-$1").toLowerCase()}));var I=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function P(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function B(n,e){for(var t in e)n[t]=e[t];return n}function O(n){for(var e={},t=0;t<n.length;t++)n[t]&&B(e,n[t]);return e}function q(n,e,t){}var L=function(n,e,t){return!1},R=function(n){return n};function M(n,e){if(n===e)return!0;var t=u(n),r=u(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var s=Array.isArray(n),o=Array.isArray(e);if(s&&o)return n.length===e.length&&n.every((function(n,t){return M(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(s||o)return!1;var i=Object.keys(n),a=Object.keys(e);return i.length===a.length&&i.every((function(t){return M(n[t],e[t])}))}catch(n){return!1}}function U(n,e){for(var t=0;t<n.length;t++)if(M(n[t],e))return t;return-1}function z(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function D(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var $=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],N={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:L,isReservedAttr:L,isUnknownElement:L,getTagNamespace:q,parsePlatformTagName:R,mustUseProp:L,async:!0,_lifecycleHooks:F},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function V(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function W(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var J=new RegExp("[^".concat(H.source,".$_\\d]"));var G="__proto__"in{},Z="undefined"!=typeof window,Q=Z&&window.navigator.userAgent.toLowerCase(),K=Q&&/msie|trident/.test(Q),X=Q&&Q.indexOf("msie 9.0")>0,Y=Q&&Q.indexOf("edge/")>0;Q&&Q.indexOf("android");var nn=Q&&/iphone|ipad|ipod|ios/.test(Q);Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q);var en,tn=Q&&Q.match(/firefox\/(\d+)/),rn={}.watch,sn=!1;if(Z)try{var on={};Object.defineProperty(on,"passive",{get:function(){sn=!0}}),window.addEventListener("test-passive",null,on)}catch(n){}var an=function(){return void 0===en&&(en=!Z&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),en},ln=Z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function cn(n){return"function"==typeof n&&/native code/.test(n.toString())}var un,pn="undefined"!=typeof Symbol&&cn(Symbol)&&"undefined"!=typeof Reflect&&cn(Reflect.ownKeys);un="undefined"!=typeof Set&&cn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var dn=null;function mn(n){void 0===n&&(n=null),n||dn&&dn._scope.off(),dn=n,n&&n._scope.on()}var hn=function(){function n(n,e,t,r,s,o,i,a){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=s,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=a,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),fn=function(n){void 0===n&&(n="");var e=new hn;return e.text=n,e.isComment=!0,e};function gn(n){return new hn(void 0,void 0,void 0,String(n))}function vn(n){var e=new hn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var bn=0,yn=[],xn=function(){function n(){this._pending=!1,this.id=bn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,yn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,r=e.length;t<r;t++){0,e[t].update()}},n}();xn.target=null;var wn=[];function kn(n){wn.push(n),xn.target=n}function En(){wn.pop(),xn.target=wn[wn.length-1]}var Sn=Array.prototype,_n=Object.create(Sn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=Sn[n];W(_n,n,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var s,o=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":s=t;break;case"splice":s=t.slice(2)}return s&&i.observeArray(s),i.dep.notify(),o}))}));var Tn=Object.getOwnPropertyNames(_n),An={},Cn=!0;function jn(n){Cn=n}var In={notify:q,depend:q,addSub:q,removeSub:q},Pn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?In:new xn,this.vmCount=0,W(n,"__ob__",this),s(n)){if(!t)if(G)n.__proto__=_n;else for(var r=0,o=Tn.length;r<o;r++){W(n,a=Tn[r],_n[a])}e||this.observeArray(n)}else{var i=Object.keys(n);for(r=0;r<i.length;r++){var a;On(n,a=i[r],An,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Bn(n[e],!1,this.mock)},n}();function Bn(n,e,t){return n&&E(n,"__ob__")&&n.__ob__ instanceof Pn?n.__ob__:!Cn||!t&&an()||!s(n)&&!d(n)||!Object.isExtensible(n)||n.__v_skip||Dn(n)||n instanceof hn?void 0:new Pn(n,e,t)}function On(n,e,t,r,o,i,a){void 0===a&&(a=!1);var l=new xn,c=Object.getOwnPropertyDescriptor(n,e);if(!c||!1!==c.configurable){var u=c&&c.get,p=c&&c.set;u&&!p||t!==An&&2!==arguments.length||(t=n[e]);var d=o?t&&t.__ob__:Bn(t,!1,i);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=u?u.call(n):t;return xn.target&&(l.depend(),d&&(d.dep.depend(),s(e)&&Rn(e))),Dn(e)&&!o?e.value:e},set:function(e){var r=u?u.call(n):t;if(D(r,e)){if(p)p.call(n,e);else{if(u)return;if(!o&&Dn(r)&&!Dn(e))return void(r.value=e);t=e}d=o?e&&e.__ob__:Bn(e,!1,i),l.notify()}}}),l}}function qn(n,e,t){if(!zn(n)){var r=n.__ob__;return s(n)&&h(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),r&&!r.shallow&&r.mock&&Bn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||r&&r.vmCount?t:r?(On(r.value,e,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(n[e]=t,t)}}function Ln(n,e){if(s(n)&&h(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||zn(n)||E(n,e)&&(delete n[e],t&&t.dep.notify())}}function Rn(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),s(e)&&Rn(e)}function Mn(n){return Un(n,!0),W(n,"__v_isShallow",!0),n}function Un(n,e){if(!zn(n)){Bn(n,e,an());0}}function zn(n){return!(!n||!n.__v_isReadonly)}function Dn(n){return!(!n||!0!==n.__v_isRef)}function $n(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Dn(n))return n.value;var r=n&&n.__ob__;return r&&r.dep.depend(),n},set:function(n){var r=e[t];Dn(r)&&!Dn(n)?r.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Fn;var Nn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Fn,!n&&Fn&&(this.index=(Fn.scopes||(Fn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Fn;try{return Fn=this,n()}finally{Fn=e}}else 0},n.prototype.on=function(){Fn=this},n.prototype.off=function(){Fn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Hn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Vn=S((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function Wn(n,e){function t(){var n=t.fns;if(!s(n))return Ce(n,null,arguments,e,"v-on handler");for(var r=n.slice(),o=0;o<r.length;o++)Ce(r[o],null,arguments,e,"v-on handler")}return t.fns=n,t}function Jn(n,e,t,r,s,i){var l,c,u,p;for(l in n)c=n[l],u=e[l],p=Vn(l),o(c)||(o(u)?(o(c.fns)&&(c=n[l]=Wn(c,i)),a(p.once)&&(c=n[l]=s(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,n[l]=u));for(l in e)o(n[l])&&r((p=Vn(l)).name,e[l],p.capture)}function Gn(n,e,t){var r;n instanceof hn&&(n=n.data.hook||(n.data.hook={}));var s=n[e];function l(){t.apply(this,arguments),w(r.fns,l)}o(s)?r=Wn([l]):i(s.fns)&&a(s.merged)?(r=s).fns.push(l):r=Wn([s,l]),r.merged=!0,n[e]=r}function Zn(n,e,t,r,s){if(i(e)){if(E(e,t))return n[t]=e[t],s||delete e[t],!0;if(E(e,r))return n[t]=e[r],s||delete e[r],!0}return!1}function Qn(n){return l(n)?[gn(n)]:s(n)?function n(e,t){var r,c,u,p,d=[];for(r=0;r<e.length;r++)o(c=e[r])||"boolean"==typeof c||(u=d.length-1,p=d[u],s(c)?c.length>0&&(Kn((c=n(c,"".concat(t||"","_").concat(r)))[0])&&Kn(p)&&(d[u]=gn(p.text+c[0].text),c.shift()),d.push.apply(d,c)):l(c)?Kn(p)?d[u]=gn(p.text+c):""!==c&&d.push(gn(c)):Kn(c)&&Kn(p)?d[u]=gn(p.text+c.text):(a(e._isVList)&&i(c.tag)&&o(c.key)&&i(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),d.push(c)));return d}(n):void 0}function Kn(n){return i(n)&&i(n.text)&&!1===n.isComment}function Xn(n,e){var t,r,o,a,l=null;if(s(n)||"string"==typeof n)for(l=new Array(n.length),t=0,r=n.length;t<r;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(u(n))if(pn&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)l.push(e(p.value,l.length)),p=c.next()}else for(o=Object.keys(n),l=new Array(o.length),t=0,r=o.length;t<r;t++)a=o[t],l[t]=e(n[a],a,t);return i(l)||(l=[]),l._isVList=!0,l}function Yn(n,e,t,r){var s,o=this.$scopedSlots[n];o?(t=t||{},r&&(t=B(B({},r),t)),s=o(t)||(c(e)?e():e)):s=this.$slots[n]||(c(e)?e():e);var i=t&&t.slot;return i?this.$createElement("template",{slot:i},s):s}function ne(n){return Pt(this.$options,"filters",n,!0)||R}function ee(n,e){return s(n)?-1===n.indexOf(e):n!==e}function te(n,e,t,r,s){var o=N.keyCodes[e]||t;return s&&r&&!N.keyCodes[e]?ee(s,r):o?ee(o,n):r?j(r)!==e:void 0===n}function re(n,e,t,r,o){if(t)if(u(t)){s(t)&&(t=O(t));var i=void 0,a=function(s){if("class"===s||"style"===s||x(s))i=n;else{var a=n.attrs&&n.attrs.type;i=r||N.mustUseProp(e,a,s)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=T(s),c=j(s);l in i||c in i||(i[s]=t[s],o&&((n.on||(n.on={}))["update:".concat(s)]=function(n){t[s]=n}))};for(var l in t)a(l)}else;return n}function se(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||ie(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),r}function oe(n,e,t){return ie(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ie(n,e,t){if(s(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&ae(n[r],"".concat(e,"_").concat(r),t);else ae(n,e,t)}function ae(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function le(n,e){if(e)if(d(e)){var t=n.on=n.on?B({},n.on):{};for(var r in e){var s=t[r],o=e[r];t[r]=s?[].concat(s,o):o}}else;return n}function ce(n,e,t,r){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var i=n[o];s(i)?ce(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return r&&(e.$key=r),e}function ue(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function pe(n,e){return"string"==typeof n?e+n:n}function de(n){n._o=oe,n._n=b,n._s=g,n._l=Xn,n._t=Yn,n._q=M,n._i=U,n._m=se,n._f=ne,n._k=te,n._b=re,n._v=gn,n._e=fn,n._u=ce,n._g=le,n._d=ue,n._p=pe}function me(n,e){if(!n||!n.length)return{};for(var t={},r=0,s=n.length;r<s;r++){var o=n[r],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==e&&o.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(o);else{var a=i.slot,l=t[a]||(t[a]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function fe(n){return n.isComment&&n.asyncFactory}function ge(n,e,t,s){var o,i=Object.keys(t).length>0,a=e?!!e.$stable:!i,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&s&&s!==r&&l===s.$key&&!i&&!s.$hasNormal)return s;for(var c in o={},e)e[c]&&"$"!==c[0]&&(o[c]=ve(n,t,c,e[c]))}else o={};for(var u in t)u in o||(o[u]=be(t,u));return e&&Object.isExtensible(e)&&(e._normalized=o),W(o,"$stable",a),W(o,"$key",l),W(o,"$hasNormal",i),o}function ve(n,e,t,r){var o=function(){var e=dn;mn(n);var t=arguments.length?r.apply(null,arguments):r({}),o=(t=t&&"object"==typeof t&&!s(t)?[t]:Qn(t))&&t[0];return mn(e),t&&(!o||1===t.length&&o.isComment&&!fe(o))?void 0:t};return r.proxy&&Object.defineProperty(e,t,{get:o,enumerable:!0,configurable:!0}),o}function be(n,e){return function(){return n[e]}}function ye(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};W(e,"_v_attr_proxy",!0),xe(e,n.$attrs,r,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||xe(n._listenersProxy={},n.$listeners,r,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||ke(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:I(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return $n(n,e,t)}))}}}function xe(n,e,t,r,s){var o=!1;for(var i in e)i in n?e[i]!==t[i]&&(o=!0):(o=!0,we(n,i,r,s));for(var i in n)i in e||(o=!0,delete n[i]);return o}function we(n,e,t,r){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[r][e]}})}function ke(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var Ee=null;function Se(n,e){return(n.__esModule||pn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),u(n)?e.extend(n):n}function _e(n){if(s(n))for(var e=0;e<n.length;e++){var t=n[e];if(i(t)&&(i(t.componentOptions)||fe(t)))return t}}function Te(n,e,t,r,p,d){return(s(t)||l(t))&&(p=r,r=t,t=void 0),a(d)&&(p=2),function(n,e,t,r,l){if(i(t)&&i(t.__ob__))return fn();i(t)&&i(t.is)&&(e=t.is);if(!e)return fn();0;s(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Qn(r):1===l&&(r=function(n){for(var e=0;e<n.length;e++)if(s(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var p,d;if("string"==typeof e){var m=void 0;d=n.$vnode&&n.$vnode.ns||N.getTagNamespace(e),p=N.isReservedTag(e)?new hn(N.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!i(m=Pt(n.$options,"components",e))?new hn(e,t,r,void 0,void 0,n):wt(m,t,n,r,e)}else p=wt(e,t,n,r);return s(p)?p:i(p)?(i(d)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(i(e.children))for(var s=0,l=e.children.length;s<l;s++){var c=e.children[s];i(c.tag)&&(o(c.ns)||a(r)&&"svg"!==c.tag)&&n(c,t,r)}}(p,d),i(t)&&function(n){u(n.style)&&Ne(n.style);u(n.class)&&Ne(n.class)}(t),p):fn()}(n,e,t,r,p)}function Ae(n,e,t){kn();try{if(e)for(var r=e;r=r.$parent;){var s=r.$options.errorCaptured;if(s)for(var o=0;o<s.length;o++)try{if(!1===s[o].call(r,n,e,t))return}catch(n){je(n,r,"errorCaptured hook")}}je(n,e,t)}finally{En()}}function Ce(n,e,t,r,s){var o;try{(o=t?n.apply(e,t):n.call(e))&&!o._isVue&&f(o)&&!o._handled&&(o.catch((function(n){return Ae(n,r,s+" (Promise/async)")})),o._handled=!0)}catch(n){Ae(n,r,s)}return o}function je(n,e,t){if(N.errorHandler)try{return N.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Ie(e,null,"config.errorHandler")}Ie(n,e,t)}function Ie(n,e,t){if(!Z||"undefined"==typeof console)throw n;console.error(n)}var Pe,Be=!1,Oe=[],qe=!1;function Le(){qe=!1;var n=Oe.slice(0);Oe.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&cn(Promise)){var Re=Promise.resolve();Pe=function(){Re.then(Le),nn&&setTimeout(q)},Be=!0}else if(K||"undefined"==typeof MutationObserver||!cn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Pe="undefined"!=typeof setImmediate&&cn(setImmediate)?function(){setImmediate(Le)}:function(){setTimeout(Le,0)};else{var Me=1,Ue=new MutationObserver(Le),ze=document.createTextNode(String(Me));Ue.observe(ze,{characterData:!0}),Pe=function(){Me=(Me+1)%2,ze.data=String(Me)},Be=!0}function De(n,e){var t;if(Oe.push((function(){if(n)try{n.call(e)}catch(n){Ae(n,e,"nextTick")}else t&&t(e)})),qe||(qe=!0,Pe()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function $e(n){return function(e,t){if(void 0===t&&(t=dn),t)return function(n,e,t){var r=n.$options;r[e]=At(r[e],t)}(t,n,e)}}$e("beforeMount"),$e("mounted"),$e("beforeUpdate"),$e("updated"),$e("beforeDestroy"),$e("destroyed"),$e("activated"),$e("deactivated"),$e("serverPrefetch"),$e("renderTracked"),$e("renderTriggered"),$e("errorCaptured");var Fe=new un;function Ne(n){return function n(e,t){var r,o,i=s(e);if(!i&&!u(e)||e.__v_skip||Object.isFrozen(e)||e instanceof hn)return;if(e.__ob__){var a=e.__ob__.dep.id;if(t.has(a))return;t.add(a)}if(i)for(r=e.length;r--;)n(e[r],t);else if(Dn(e))n(e.value,t);else for(o=Object.keys(e),r=o.length;r--;)n(e[o[r]],t)}(n,Fe),Fe.clear(),n}var He,Ve=0,We=function(){function n(n,e,t,r,s){var o,i;o=this,void 0===(i=Fn&&!Fn._vm?Fn:n?n._scope:void 0)&&(i=Fn),i&&i.active&&i.effects.push(o),(this.vm=n)&&s&&(n._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ve,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new un,this.newDepIds=new un,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!J.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=q)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;kn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Ae(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Ne(n),En(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():mt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||u(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ce(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Je(n,e){He.$on(n,e)}function Ge(n,e){He.$off(n,e)}function Ze(n,e){var t=He;return function r(){var s=e.apply(null,arguments);null!==s&&t.$off(n,r)}}function Qe(n,e,t){He=n,Jn(e,t||{},Je,Ge,Ze,n),He=void 0}var Ke=null;function Xe(n){var e=Ke;return Ke=n,function(){Ke=e}}function Ye(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ye(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e,t,r){void 0===r&&(r=!0),kn();var s=dn,o=Fn;r&&mn(n);var i=n.$options[e],a="".concat(e," hook");if(i)for(var l=0,c=i.length;l<c;l++)Ce(i[l],n,t||null,n,a);n._hasHookEvent&&n.$emit("hook:"+e),r&&(mn(s),o&&o.on()),En()}var tt=[],rt=[],st={},ot=!1,it=!1,at=0;var lt=0,ct=Date.now;if(Z&&!K){var ut=window.performance;ut&&"function"==typeof ut.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return ut.now()})}var pt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function dt(){var n,e;for(lt=ct(),it=!0,tt.sort(pt),at=0;at<tt.length;at++)(n=tt[at]).before&&n.before(),e=n.id,st[e]=null,n.run();var t=rt.slice(),r=tt.slice();at=tt.length=rt.length=0,st={},ot=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&et(r,"updated")}}(r),function(){for(var n=0;n<yn.length;n++){var e=yn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}yn.length=0}(),ln&&N.devtools&&ln.emit("flush")}function mt(n){var e=n.id;if(null==st[e]&&(n!==xn.target||!n.noRecurse)){if(st[e]=!0,it){for(var t=tt.length-1;t>at&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);ot||(ot=!0,De(dt))}}function ht(n,e){if(n){for(var t=Object.create(null),r=pn?Reflect.ownKeys(n):Object.keys(n),s=0;s<r.length;s++){var o=r[s];if("__ob__"!==o){var i=n[o].from;if(i in e._provided)t[o]=e._provided[i];else if("default"in n[o]){var a=n[o].default;t[o]=c(a)?a.call(e):a}else 0}}return t}}function ft(n,e,t,o,i){var l,c=this,u=i.options;E(o,"_uid")?(l=Object.create(o))._original=o:(l=o,o=o._original);var p=a(u._compiled),d=!p;this.data=n,this.props=e,this.children=t,this.parent=o,this.listeners=n.on||r,this.injections=ht(u.inject,o),this.slots=function(){return c.$slots||ge(o,n.scopedSlots,c.$slots=me(t,o)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ge(o,n.scopedSlots,this.slots())}}),p&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=ge(o,n.scopedSlots,this.$slots)),u._scopeId?this._c=function(n,e,t,r){var i=Te(l,n,e,t,r,d);return i&&!s(i)&&(i.fnScopeId=u._scopeId,i.fnContext=o),i}:this._c=function(n,e,t,r){return Te(l,n,e,t,r,d)}}function gt(n,e,t,r,s){var o=vn(n);return o.fnContext=t,o.fnOptions=r,e.slot&&((o.data||(o.data={})).slot=e.slot),o}function vt(n,e){for(var t in e)n[T(t)]=e[t]}function bt(n){return n.name||n.__name||n._componentTag}de(ft.prototype);var yt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;yt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;i(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ke)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,s,o){var i=s.data.scopedSlots,a=n.$scopedSlots,l=!!(i&&!i.$stable||a!==r&&!a.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),c=!!(o||n.$options._renderChildren||l),u=n.$vnode;n.$options._parentVnode=s,n.$vnode=s,n._vnode&&(n._vnode.parent=s),n.$options._renderChildren=o;var p=s.data.attrs||r;n._attrsProxy&&xe(n._attrsProxy,p,u.data&&u.data.attrs||r,n,"$attrs")&&(c=!0),n.$attrs=p,t=t||r;var d=n.$options._parentListeners;if(n._listenersProxy&&xe(n._listenersProxy,t,d||r,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Qe(n,t,d),e&&n.$options.props){jn(!1);for(var m=n._props,h=n.$options._propKeys||[],f=0;f<h.length;f++){var g=h[f],v=n.$options.props;m[g]=Bt(g,v,e,n)}jn(!0),n.$options.propsData=e}c&&(n.$slots=me(o,s.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,et(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,rt.push(e)):nt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Ye(e))||e._inactive)){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);et(e,"deactivated")}}(e,!0):e.$destroy())}},xt=Object.keys(yt);function wt(n,e,t,l,c){if(!o(n)){var p=t.$options._base;if(u(n)&&(n=p.extend(n)),"function"==typeof n){var d;if(o(n.cid)&&void 0===(n=function(n,e){if(a(n.error)&&i(n.errorComp))return n.errorComp;if(i(n.resolved))return n.resolved;var t=Ee;if(t&&i(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),a(n.loading)&&i(n.loadingComp))return n.loadingComp;if(t&&!i(n.owners)){var r=n.owners=[t],s=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return w(r,t)}));var p=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},d=z((function(t){n.resolved=Se(t,e),s?r.length=0:p(!0)})),m=z((function(e){i(n.errorComp)&&(n.error=!0,p(!0))})),h=n(d,m);return u(h)&&(f(h)?o(n.resolved)&&h.then(d,m):f(h.component)&&(h.component.then(d,m),i(h.error)&&(n.errorComp=Se(h.error,e)),i(h.loading)&&(n.loadingComp=Se(h.loading,e),0===h.delay?n.loading=!0:l=setTimeout((function(){l=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,p(!1))}),h.delay||200)),i(h.timeout)&&(c=setTimeout((function(){c=null,o(n.resolved)&&m(null)}),h.timeout)))),s=!1,n.loading?n.loadingComp:n.resolved}}(d=n,p)))return function(n,e,t,r,s){var o=fn();return o.asyncFactory=n,o.asyncMeta={data:e,context:t,children:r,tag:s},o}(d,e,t,l,c);e=e||{},Wt(n),i(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),a=o[r],l=e.model.callback;i(a)?(s(a)?-1===a.indexOf(l):a!==l)&&(o[r]=[l].concat(a)):o[r]=l}(n.options,e);var m=function(n,e,t){var r=e.options.props;if(!o(r)){var s={},a=n.attrs,l=n.props;if(i(a)||i(l))for(var c in r){var u=j(c);Zn(s,l,c,u,!0)||Zn(s,a,c,u,!1)}return s}}(e,n);if(a(n.options.functional))return function(n,e,t,o,a){var l=n.options,c={},u=l.props;if(i(u))for(var p in u)c[p]=Bt(p,u,e||r);else i(t.attrs)&&vt(c,t.attrs),i(t.props)&&vt(c,t.props);var d=new ft(t,c,a,o,n),m=l.render.call(null,d._c,d);if(m instanceof hn)return gt(m,t,d.parent,l,d);if(s(m)){for(var h=Qn(m)||[],f=new Array(h.length),g=0;g<h.length;g++)f[g]=gt(h[g],t,d.parent,l,d);return f}}(n,m,e,t,l);var h=e.on;if(e.on=e.nativeOn,a(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<xt.length;t++){var r=xt[t],s=e[r],o=yt[r];s===o||s&&s._merged||(e[r]=s?kt(o,s):o)}}(e);var v=bt(n.options)||c;return new hn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:m,listeners:h,tag:c,children:l},d)}}}function kt(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}var Et=q,St=N.optionMergeStrategies;function _t(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var r,s,o,i=pn?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++)"__ob__"!==(r=i[a])&&(s=n[r],o=e[r],t&&E(n,r)?s!==o&&d(s)&&d(o)&&_t(s,o):qn(n,r,o));return n}function Tt(n,e,t){return t?function(){var r=c(e)?e.call(t,t):e,s=c(n)?n.call(t,t):n;return r?_t(r,s):s}:e?n?function(){return _t(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function At(n,e){var t=e?n?n.concat(e):s(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ct(n,e,t,r){var s=Object.create(n||null);return e?B(s,e):s}St.data=function(n,e,t){return t?Tt(n,e,t):e&&"function"!=typeof e?n:Tt(n,e)},F.forEach((function(n){St[n]=At})),$.forEach((function(n){St[n+"s"]=Ct})),St.watch=function(n,e,t,r){if(n===rn&&(n=void 0),e===rn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var i in B(o,n),e){var a=o[i],l=e[i];a&&!s(a)&&(a=[a]),o[i]=a?a.concat(l):s(l)?l:[l]}return o},St.props=St.methods=St.inject=St.computed=function(n,e,t,r){if(!n)return e;var s=Object.create(null);return B(s,n),e&&B(s,e),s},St.provide=function(n,e){return n?function(){var t=Object.create(null);return _t(t,c(n)?n.call(this):n),e&&_t(t,c(e)?e.call(this):e,!1),t}:e};var jt=function(n,e){return void 0===e?n:e};function It(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var r,o,i={};if(s(t))for(r=t.length;r--;)"string"==typeof(o=t[r])&&(i[T(o)]={type:null});else if(d(t))for(var a in t)o=t[a],i[T(a)]=d(o)?o:{type:o};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(s(t))for(var o=0;o<t.length;o++)r[t[o]]={from:t[o]};else if(d(t))for(var i in t){var a=t[i];r[i]=d(a)?B({from:i},a):{from:a}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];c(r)&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=It(n,e.extends,t)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)n=It(n,e.mixins[r],t);var i,a={};for(i in n)l(i);for(i in e)E(n,i)||l(i);function l(r){var s=St[r]||jt;a[r]=s(n[r],e[r],t,r)}return a}function Pt(n,e,t,r){if("string"==typeof t){var s=n[e];if(E(s,t))return s[t];var o=T(t);if(E(s,o))return s[o];var i=A(o);return E(s,i)?s[i]:s[t]||s[o]||s[i]}}function Bt(n,e,t,r){var s=e[n],o=!E(t,n),i=t[n],a=Rt(Boolean,s.type);if(a>-1)if(o&&!E(s,"default"))i=!1;else if(""===i||i===j(n)){var l=Rt(String,s.type);(l<0||a<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!E(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(r)&&"Function"!==qt(e.type)?r.call(n):r}(r,s,n);var u=Cn;jn(!0),Bn(i),jn(u)}return i}var Ot=/^\s*function (\w+)/;function qt(n){var e=n&&n.toString().match(Ot);return e?e[1]:""}function Lt(n,e){return qt(n)===qt(e)}function Rt(n,e){if(!s(e))return Lt(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Lt(e[t],n))return t;return-1}var Mt={enumerable:!0,configurable:!0,get:q,set:q};function Ut(n,e,t){Mt.get=function(){return this[e][t]},Mt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Mt)}function zt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props=Mn({}),s=n.$options._propKeys=[];n.$parent&&jn(!1);var o=function(o){s.push(o);var i=Bt(o,e,t,n);On(r,o,i,void 0,!0),o in n||Ut(n,"_props",o)};for(var i in e)o(i);jn(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var r=n._setupContext=ye(n);mn(n),kn();var s=Ce(t,null,[n._props||Mn({}),r],n,"setup");if(En(),mn(),c(s))e.render=s;else if(u(s))if(n._setupState=s,s.__sfc){var o=n._setupProxy={};for(var i in s)"__sfc"!==i&&$n(o,s,i)}else for(var i in s)V(i)||$n(n,s,i);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?q:I(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;d(e=n._data=c(e)?function(n,e){kn();try{return n.call(e,e)}catch(n){return Ae(n,e,"data()"),{}}finally{En()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,s=(n.$options.methods,t.length);for(;s--;){var o=t[s];0,r&&E(r,o)||V(o)||Ut(n,"_data",o)}var i=Bn(e);i&&i.vmCount++}(n);else{var t=Bn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=an();for(var s in e){var o=e[s],i=c(o)?o:o.get;0,r||(t[s]=new We(n,i||q,q,Dt)),s in n||$t(n,s,o)}}(n,e.computed),e.watch&&e.watch!==rn&&function(n,e){for(var t in e){var r=e[t];if(s(r))for(var o=0;o<r.length;o++)Ht(n,t,r[o]);else Ht(n,t,r)}}(n,e.watch)}var Dt={lazy:!0};function $t(n,e,t){var r=!an();c(t)?(Mt.get=r?Ft(e):Nt(t),Mt.set=q):(Mt.get=t.get?r&&!1!==t.cache?Ft(e):Nt(t.get):q,Mt.set=t.set||q),Object.defineProperty(n,e,Mt)}function Ft(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),xn.target&&e.depend(),e.value}}function Nt(n){return function(){return n.call(this,this)}}function Ht(n,e,t,r){return d(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Vt=0;function Wt(n){var e=n.options;if(n.super){var t=Wt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var s in t)t[s]!==r[s]&&(e||(e={}),e[s]=t[s]);return e}(n);r&&B(n.extendOptions,r),(e=n.options=It(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Jt(n){this._init(n)}function Gt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,s=n._Ctor||(n._Ctor={});if(s[r])return s[r];var o=bt(n)||bt(t.options);var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=It(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)Ut(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)$t(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,$.forEach((function(n){i[n]=t[n]})),o&&(i.options.components[o]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=B({},i.options),s[r]=i,i}}function Zt(n){return n&&(bt(n.Ctor.options)||n.tag)}function Qt(n,e){return s(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!m(n)&&n.test(e)}function Kt(n,e){var t=n.cache,r=n.keys,s=n._vnode,o=n.$vnode;for(var i in t){var a=t[i];if(a){var l=a.name;l&&!e(l)&&Xt(t,i,r,s)}}o.componentOptions.children=void 0}function Xt(n,e,t,r){var s=n[e];!s||r&&s.tag===r.tag||s.componentInstance.$destroy(),n[e]=null,w(t,e)}Jt.prototype._init=function(n){var e=this;e._uid=Vt++,e._isVue=!0,e.__v_skip=!0,e._scope=new Nn(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var s=r.componentOptions;t.propsData=s.propsData,t._parentListeners=s.listeners,t._renderChildren=s.children,t._componentTag=s.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=It(Wt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Qe(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,s=t&&t.context;n.$slots=me(e._renderChildren,s),n.$scopedSlots=t?ge(n.$parent,t.data.scopedSlots,n.$slots):r,n._c=function(e,t,r,s){return Te(n,e,t,r,s,!1)},n.$createElement=function(e,t,r,s){return Te(n,e,t,r,s,!0)};var o=t&&t.data;On(n,"$attrs",o&&o.attrs||r,null,!0),On(n,"$listeners",e._parentListeners||r,null,!0)}(e),et(e,"beforeCreate",void 0,!1),function(n){var e=ht(n.$options.inject,n);e&&(jn(!1),Object.keys(e).forEach((function(t){On(n,t,e[t])})),jn(!0))}(e),zt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!u(t))return;for(var r=Hn(n),s=pn?Reflect.ownKeys(t):Object.keys(t),o=0;o<s.length;o++){var i=s[o];Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(t,i))}}}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=qn,n.prototype.$delete=Ln,n.prototype.$watch=function(n,e,t){if(d(e))return Ht(this,n,e,t);(t=t||{}).user=!0;var r=new We(this,n,e,t);if(t.immediate){var s='callback for immediate watcher "'.concat(r.expression,'"');kn(),Ce(e,this,[r.value],this,s),En()}return function(){r.teardown()}}}(Jt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(s(n))for(var o=0,i=n.length;o<i;o++)r.$on(n[o],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(s(n)){for(var r=0,o=n.length;r<o;r++)t.$off(n[r],e);return t}var i,a=t._events[n];if(!a)return t;if(!e)return t._events[n]=null,t;for(var l=a.length;l--;)if((i=a[l])===e||i.fn===e){a.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?P(t):t;for(var r=P(arguments,1),s='event handler for "'.concat(n,'"'),o=0,i=t.length;o<i;o++)Ce(t[o],e,r,e,s)}return e}}(Jt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,s=t._vnode,o=Xe(t);t._vnode=n,t.$el=s?t.__patch__(s,n):t.__patch__(t.$el,n,e,!1),o(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var i=t;i&&i.$vnode&&i.$parent&&i.$vnode===i.$parent._vnode;)i.$parent.$el=i.$el,i=i.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||w(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Jt),function(n){de(n.prototype),n.prototype.$nextTick=function(n){return De(n,this)},n.prototype._render=function(){var n=this,e=n.$options,t=e.render,r=e._parentVnode;r&&n._isMounted&&(n.$scopedSlots=ge(n.$parent,r.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&ke(n._slotsProxy,n.$scopedSlots)),n.$vnode=r;var o,i=dn,a=Ee;try{mn(n),Ee=n,o=t.call(n._renderProxy,n.$createElement)}catch(e){Ae(e,n,"render"),o=n._vnode}finally{Ee=a,mn(i)}return s(o)&&1===o.length&&(o=o[0]),o instanceof hn||(o=fn()),o.parent=r,o}}(Jt);var Yt=[String,RegExp,Array],nr={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Yt,exclude:Yt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var s=t.tag,o=t.componentInstance,i=t.componentOptions;n[r]={name:Zt(i),tag:s,componentInstance:o},e.push(r),this.max&&e.length>parseInt(this.max)&&Xt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Xt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Kt(n,(function(n){return Qt(e,n)}))})),this.$watch("exclude",(function(e){Kt(n,(function(n){return!Qt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=_e(n),t=e&&e.componentOptions;if(t){var r=Zt(t),s=this.include,o=this.exclude;if(s&&(!r||!Qt(s,r))||o&&r&&Qt(o,r))return e;var i=this.cache,a=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,w(a,l),a.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return N}};Object.defineProperty(n,"config",e),n.util={warn:Et,extend:B,mergeOptions:It,defineReactive:On},n.set=qn,n.delete=Ln,n.nextTick=De,n.observable=function(n){return Bn(n),n},n.options=Object.create(null),$.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,B(n.options.components,nr),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=P(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=It(this.options,n),this}}(n),Gt(n),function(n){$.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&d(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Jt),Object.defineProperty(Jt.prototype,"$isServer",{get:an}),Object.defineProperty(Jt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Jt,"FunctionalRenderContext",{value:ft}),Jt.version="2.7.16";var er=y("style,class"),tr=y("input,textarea,option,select,progress"),rr=y("contenteditable,draggable,spellcheck"),sr=y("events,caret,typing,plaintext-only"),or=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ir="http://www.w3.org/1999/xlink",ar=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},lr=function(n){return ar(n)?n.slice(6,n.length):""},cr=function(n){return null==n||!1===n};function ur(n){for(var e=n.data,t=n,r=n;i(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=pr(r.data,e));for(;i(t=t.parent);)t&&t.data&&(e=pr(e,t.data));return function(n,e){if(i(n)||i(e))return dr(n,mr(e));return""}(e.staticClass,e.class)}function pr(n,e){return{staticClass:dr(n.staticClass,e.staticClass),class:i(n.class)?[n.class,e.class]:e.class}}function dr(n,e){return n?e?n+" "+e:n:e||""}function mr(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,s=n.length;r<s;r++)i(e=mr(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):u(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var hr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},fr=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),gr=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),vr=function(n){return fr(n)||gr(n)};var br=Object.create(null);var yr=y("text,number,password,search,email,tel,url");var xr=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(hr[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),wr={create:function(n,e){kr(e)},update:function(n,e){n.data.ref!==e.data.ref&&(kr(n,!0),kr(e))},destroy:function(n){kr(n,!0)}};function kr(n,e){var t=n.data.ref;if(i(t)){var r=n.context,o=n.componentInstance||n.elm,a=e?null:o,l=e?void 0:o;if(c(t))Ce(t,r,[a],r,"template ref function");else{var u=n.data.refInFor,p="string"==typeof t||"number"==typeof t,d=Dn(t),m=r.$refs;if(p||d)if(u){var h=p?m[t]:t.value;e?s(h)&&w(h,o):s(h)?h.includes(o)||h.push(o):p?(m[t]=[o],Er(r,t,m[t])):t.value=[o]}else if(p){if(e&&m[t]!==o)return;m[t]=l,Er(r,t,a)}else if(d){if(e&&t.value!==o)return;t.value=a}else 0}}}function Er(n,e,t){var r=n._setupState;r&&E(r,e)&&(Dn(r[e])?r[e].value=t:r[e]=t)}var Sr=new hn("",{},[]),_r=["create","activate","update","remove","destroy"];function Tr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&i(n.data)===i(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=i(t=n.data)&&i(t=t.attrs)&&t.type,s=i(t=e.data)&&i(t=t.attrs)&&t.type;return r===s||yr(r)&&yr(s)}(n,e)||a(n.isAsyncPlaceholder)&&o(e.asyncFactory.error))}function Ar(n,e,t){var r,s,o={};for(r=e;r<=t;++r)i(s=n[r].key)&&(o[s]=r);return o}var Cr={create:jr,update:jr,destroy:function(n){jr(n,Sr)}};function jr(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,s,o=n===Sr,i=e===Sr,a=Pr(n.data.directives,n.context),l=Pr(e.data.directives,e.context),c=[],u=[];for(t in l)r=a[t],s=l[t],r?(s.oldValue=r.value,s.oldArg=r.arg,Or(s,"update",e,n),s.def&&s.def.componentUpdated&&u.push(s)):(Or(s,"bind",e,n),s.def&&s.def.inserted&&c.push(s));if(c.length){var p=function(){for(var t=0;t<c.length;t++)Or(c[t],"inserted",e,n)};o?Gn(e,"insert",p):p()}u.length&&Gn(e,"postpatch",(function(){for(var t=0;t<u.length;t++)Or(u[t],"componentUpdated",e,n)}));if(!o)for(t in a)l[t]||Or(a[t],"unbind",n,n,i)}(n,e)}var Ir=Object.create(null);function Pr(n,e){var t,r,s=Object.create(null);if(!n)return s;for(t=0;t<n.length;t++){if((r=n[t]).modifiers||(r.modifiers=Ir),s[Br(r)]=r,e._setupState&&e._setupState.__sfc){var o=r.def||Pt(e,"_setupState","v-"+r.name);r.def="function"==typeof o?{bind:o,update:o}:o}r.def=r.def||Pt(e.$options,"directives",r.name)}return s}function Br(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Or(n,e,t,r,s){var o=n.def&&n.def[e];if(o)try{o(t.elm,n,t,r,s)}catch(r){Ae(r,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var qr=[wr,Cr];function Lr(n,e){var t=e.componentOptions;if(!(i(t)&&!1===t.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(e.data.attrs))){var r,s,l=e.elm,c=n.data.attrs||{},u=e.data.attrs||{};for(r in(i(u.__ob__)||a(u._v_attr_proxy))&&(u=e.data.attrs=B({},u)),u)s=u[r],c[r]!==s&&Rr(l,r,s,e.data.pre);for(r in(K||Y)&&u.value!==c.value&&Rr(l,"value",u.value),c)o(u[r])&&(ar(r)?l.removeAttributeNS(ir,lr(r)):rr(r)||l.removeAttribute(r))}}function Rr(n,e,t,r){r||n.tagName.indexOf("-")>-1?Mr(n,e,t):or(e)?cr(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):rr(e)?n.setAttribute(e,function(n,e){return cr(e)||"false"===e?"false":"contenteditable"===n&&sr(e)?e:"true"}(e,t)):ar(e)?cr(t)?n.removeAttributeNS(ir,lr(e)):n.setAttributeNS(ir,e,t):Mr(n,e,t)}function Mr(n,e,t){if(cr(t))n.removeAttribute(e);else{if(K&&!X&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var Ur={create:Lr,update:Lr};function zr(n,e){var t=e.elm,r=e.data,s=n.data;if(!(o(r.staticClass)&&o(r.class)&&(o(s)||o(s.staticClass)&&o(s.class)))){var a=ur(e),l=t._transitionClasses;i(l)&&(a=dr(a,mr(l))),a!==t._prevClass&&(t.setAttribute("class",a),t._prevClass=a)}}var Dr,$r={create:zr,update:zr};function Fr(n,e,t){var r=Dr;return function s(){var o=e.apply(null,arguments);null!==o&&Vr(n,s,t,r)}}var Nr=Be&&!(tn&&Number(tn[1])<=53);function Hr(n,e,t,r){if(Nr){var s=lt,o=e;e=o._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=s||n.timeStamp<=0||n.target.ownerDocument!==document)return o.apply(this,arguments)}}Dr.addEventListener(n,e,sn?{capture:t,passive:r}:t)}function Vr(n,e,t,r){(r||Dr).removeEventListener(n,e._wrapper||e,t)}function Wr(n,e){if(!o(n.data.on)||!o(e.data.on)){var t=e.data.on||{},r=n.data.on||{};Dr=e.elm||n.elm,function(n){if(i(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}i(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Jn(t,r,Hr,Vr,Fr,e.context),Dr=void 0}}var Jr,Gr={create:Wr,update:Wr,destroy:function(n){return Wr(n,Sr)}};function Zr(n,e){if(!o(n.data.domProps)||!o(e.data.domProps)){var t,r,s=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(i(c.__ob__)||a(c._v_attr_proxy))&&(c=e.data.domProps=B({},c)),l)t in c||(s[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===l[t])continue;1===s.childNodes.length&&s.removeChild(s.childNodes[0])}if("value"===t&&"PROGRESS"!==s.tagName){s._value=r;var u=o(r)?"":String(r);Qr(s,u)&&(s.value=u)}else if("innerHTML"===t&&gr(s.tagName)&&o(s.innerHTML)){(Jr=Jr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var p=Jr.firstChild;s.firstChild;)s.removeChild(s.firstChild);for(;p.firstChild;)s.appendChild(p.firstChild)}else if(r!==l[t])try{s[t]=r}catch(n){}}}}function Qr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(i(r)){if(r.number)return b(t)!==b(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Kr={create:Zr,update:Zr},Xr=S((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Yr(n){var e=ns(n.style);return n.staticStyle?B(n.staticStyle,e):e}function ns(n){return Array.isArray(n)?O(n):"string"==typeof n?Xr(n):n}var es,ts=/^--/,rs=/\s*!important$/,ss=function(n,e,t){if(ts.test(e))n.style.setProperty(e,t);else if(rs.test(t))n.style.setProperty(j(e),t.replace(rs,""),"important");else{var r=is(e);if(Array.isArray(t))for(var s=0,o=t.length;s<o;s++)n.style[r]=t[s];else n.style[r]=t}},os=["Webkit","Moz","ms"],is=S((function(n){if(es=es||document.createElement("div").style,"filter"!==(n=T(n))&&n in es)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<os.length;t++){var r=os[t]+e;if(r in es)return r}}));function as(n,e){var t=e.data,r=n.data;if(!(o(t.staticStyle)&&o(t.style)&&o(r.staticStyle)&&o(r.style))){var s,a,l=e.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},p=c||u,d=ns(e.data.style)||{};e.data.normalizedStyle=i(d.__ob__)?B({},d):d;var m=function(n,e){var t,r={};if(e)for(var s=n;s.componentInstance;)(s=s.componentInstance._vnode)&&s.data&&(t=Yr(s.data))&&B(r,t);(t=Yr(n.data))&&B(r,t);for(var o=n;o=o.parent;)o.data&&(t=Yr(o.data))&&B(r,t);return r}(e,!0);for(a in p)o(m[a])&&ss(l,a,"");for(a in m)s=m[a],ss(l,a,null==s?"":s)}}var ls={create:as,update:as},cs=/\s+/;function us(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(cs).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function ps(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(cs).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function ds(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&B(e,ms(n.name||"v")),B(e,n),e}return"string"==typeof n?ms(n):void 0}}var ms=S((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),hs=Z&&!X,fs="transition",gs="transitionend",vs="animation",bs="animationend";hs&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(fs="WebkitTransition",gs="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(vs="WebkitAnimation",bs="webkitAnimationEnd"));var ys=Z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function xs(n){ys((function(){ys(n)}))}function ws(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),us(n,e))}function ks(n,e){n._transitionClasses&&w(n._transitionClasses,e),ps(n,e)}function Es(n,e,t){var r=_s(n,e),s=r.type,o=r.timeout,i=r.propCount;if(!s)return t();var a="transition"===s?gs:bs,l=0,c=function(){n.removeEventListener(a,u),t()},u=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),o+1),n.addEventListener(a,u)}var Ss=/\b(transform|all)(,|$)/;function _s(n,e){var t,r=window.getComputedStyle(n),s=(r[fs+"Delay"]||"").split(", "),o=(r[fs+"Duration"]||"").split(", "),i=Ts(s,o),a=(r[vs+"Delay"]||"").split(", "),l=(r[vs+"Duration"]||"").split(", "),c=Ts(a,l),u=0,p=0;return"transition"===e?i>0&&(t="transition",u=i,p=o.length):"animation"===e?c>0&&(t="animation",u=c,p=l.length):p=(t=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?o.length:l.length:0,{type:t,timeout:u,propCount:p,hasTransform:"transition"===t&&Ss.test(r[fs+"Property"])}}function Ts(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return As(e)+As(n[t])})))}function As(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Cs(n,e){var t=n.elm;i(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=ds(n.data.transition);if(!o(r)&&!i(t._enterCb)&&1===t.nodeType){for(var s=r.css,a=r.type,l=r.enterClass,p=r.enterToClass,d=r.enterActiveClass,m=r.appearClass,h=r.appearToClass,f=r.appearActiveClass,g=r.beforeEnter,v=r.enter,y=r.afterEnter,x=r.enterCancelled,w=r.beforeAppear,k=r.appear,E=r.afterAppear,S=r.appearCancelled,_=r.duration,T=Ke,A=Ke.$vnode;A&&A.parent;)T=A.context,A=A.parent;var C=!T._isMounted||!n.isRootInsert;if(!C||k||""===k){var j=C&&m?m:l,I=C&&f?f:d,P=C&&h?h:p,B=C&&w||g,O=C&&c(k)?k:v,q=C&&E||y,L=C&&S||x,R=b(u(_)?_.enter:_);0;var M=!1!==s&&!X,U=Ps(O),D=t._enterCb=z((function(){M&&(ks(t,P),ks(t,I)),D.cancelled?(M&&ks(t,j),L&&L(t)):q&&q(t),t._enterCb=null}));n.data.show||Gn(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),O&&O(t,D)})),B&&B(t),M&&(ws(t,j),ws(t,I),xs((function(){ks(t,j),D.cancelled||(ws(t,P),U||(Is(R)?setTimeout(D,R):Es(t,a,D)))}))),n.data.show&&(e&&e(),O&&O(t,D)),M||U||D()}}}function js(n,e){var t=n.elm;i(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=ds(n.data.transition);if(o(r)||1!==t.nodeType)return e();if(!i(t._leaveCb)){var s=r.css,a=r.type,l=r.leaveClass,c=r.leaveToClass,p=r.leaveActiveClass,d=r.beforeLeave,m=r.leave,h=r.afterLeave,f=r.leaveCancelled,g=r.delayLeave,v=r.duration,y=!1!==s&&!X,x=Ps(m),w=b(u(v)?v.leave:v);0;var k=t._leaveCb=z((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(ks(t,c),ks(t,p)),k.cancelled?(y&&ks(t,l),f&&f(t)):(e(),h&&h(t)),t._leaveCb=null}));g?g(E):E()}function E(){k.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),y&&(ws(t,l),ws(t,p),xs((function(){ks(t,l),k.cancelled||(ws(t,c),x||(Is(w)?setTimeout(k,w):Es(t,a,k)))}))),m&&m(t,k),y||x||k())}}function Is(n){return"number"==typeof n&&!isNaN(n)}function Ps(n){if(o(n))return!1;var e=n.fns;return i(e)?Ps(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Bs(n,e){!0!==e.data.show&&Cs(e)}var Os=function(n){var e,t,r={},c=n.modules,u=n.nodeOps;for(e=0;e<_r.length;++e)for(r[_r[e]]=[],t=0;t<c.length;++t)i(c[t][_r[e]])&&r[_r[e]].push(c[t][_r[e]]);function p(n){var e=u.parentNode(n);i(e)&&u.removeChild(e,n)}function d(n,e,t,s,o,l,c){if(i(n.elm)&&i(l)&&(n=l[c]=vn(n)),n.isRootInsert=!o,!function(n,e,t,s){var o=n.data;if(i(o)){var l=i(n.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(n,!1),i(n.componentInstance))return m(n,e),h(t,n.elm,s),a(l)&&function(n,e,t,s){var o,a=n;for(;a.componentInstance;)if(a=a.componentInstance._vnode,i(o=a.data)&&i(o=o.transition)){for(o=0;o<r.activate.length;++o)r.activate[o](Sr,a);e.push(a);break}h(t,n.elm,s)}(n,e,t,s),!0}}(n,e,t,s)){var p=n.data,d=n.children,g=n.tag;i(g)?(n.elm=n.ns?u.createElementNS(n.ns,g):u.createElement(g,n),b(n),f(n,d,e),i(p)&&v(n,e),h(t,n.elm,s)):a(n.isComment)?(n.elm=u.createComment(n.text),h(t,n.elm,s)):(n.elm=u.createTextNode(n.text),h(t,n.elm,s))}}function m(n,e){i(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(v(n,e),b(n)):(kr(n),e.push(n))}function h(n,e,t){i(n)&&(i(t)?u.parentNode(t)===n&&u.insertBefore(n,e,t):u.appendChild(n,e))}function f(n,e,t){if(s(e)){0;for(var r=0;r<e.length;++r)d(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&u.appendChild(n.elm,u.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return i(n.tag)}function v(n,t){for(var s=0;s<r.create.length;++s)r.create[s](Sr,n);i(e=n.data.hook)&&(i(e.create)&&e.create(Sr,n),i(e.insert)&&t.push(n))}function b(n){var e;if(i(e=n.fnScopeId))u.setStyleScope(n.elm,e);else for(var t=n;t;)i(e=t.context)&&i(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e),t=t.parent;i(e=Ke)&&e!==n.context&&e!==n.fnContext&&i(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e)}function x(n,e,t,r,s,o){for(;r<=s;++r)d(t[r],o,n,e,!1,t,r)}function w(n){var e,t,s=n.data;if(i(s))for(i(e=s.hook)&&i(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(i(e=n.children))for(t=0;t<n.children.length;++t)w(n.children[t])}function k(n,e,t){for(;e<=t;++e){var r=n[e];i(r)&&(i(r.tag)?(E(r),w(r)):p(r.elm))}}function E(n,e){if(i(e)||i(n.data)){var t,s=r.remove.length+1;for(i(e)?e.listeners+=s:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,s),i(t=n.componentInstance)&&i(t=t._vnode)&&i(t.data)&&E(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);i(t=n.data.hook)&&i(t=t.remove)?t(n,e):e()}else p(n.elm)}function S(n,e,t,r){for(var s=t;s<r;s++){var o=e[s];if(i(o)&&Tr(n,o))return s}}function _(n,e,t,s,l,c){if(n!==e){i(e.elm)&&i(s)&&(e=s[l]=vn(e));var p=e.elm=n.elm;if(a(n.isAsyncPlaceholder))i(e.asyncFactory.resolved)?C(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(a(e.isStatic)&&a(n.isStatic)&&e.key===n.key&&(a(e.isCloned)||a(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,h=e.data;i(h)&&i(m=h.hook)&&i(m=m.prepatch)&&m(n,e);var f=n.children,v=e.children;if(i(h)&&g(e)){for(m=0;m<r.update.length;++m)r.update[m](n,e);i(m=h.hook)&&i(m=m.update)&&m(n,e)}o(e.text)?i(f)&&i(v)?f!==v&&function(n,e,t,r,s){var a,l,c,p=0,m=0,h=e.length-1,f=e[0],g=e[h],v=t.length-1,b=t[0],y=t[v],w=!s;for(0;p<=h&&m<=v;)o(f)?f=e[++p]:o(g)?g=e[--h]:Tr(f,b)?(_(f,b,r,t,m),f=e[++p],b=t[++m]):Tr(g,y)?(_(g,y,r,t,v),g=e[--h],y=t[--v]):Tr(f,y)?(_(f,y,r,t,v),w&&u.insertBefore(n,f.elm,u.nextSibling(g.elm)),f=e[++p],y=t[--v]):Tr(g,b)?(_(g,b,r,t,m),w&&u.insertBefore(n,g.elm,f.elm),g=e[--h],b=t[++m]):(o(a)&&(a=Ar(e,p,h)),o(l=i(b.key)?a[b.key]:S(b,e,p,h))?d(b,r,n,f.elm,!1,t,m):Tr(c=e[l],b)?(_(c,b,r,t,m),e[l]=void 0,w&&u.insertBefore(n,c.elm,f.elm)):d(b,r,n,f.elm,!1,t,m),b=t[++m]);p>h?x(n,o(t[v+1])?null:t[v+1].elm,t,m,v,r):m>v&&k(e,p,h)}(p,f,v,t,c):i(v)?(i(n.text)&&u.setTextContent(p,""),x(p,null,v,0,v.length-1,t)):i(f)?k(f,0,f.length-1):i(n.text)&&u.setTextContent(p,""):n.text!==e.text&&u.setTextContent(p,e.text),i(h)&&i(m=h.hook)&&i(m=m.postpatch)&&m(n,e)}}}function T(n,e,t){if(a(t)&&i(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var A=y("attrs,class,staticClass,staticStyle,key");function C(n,e,t,r){var s,o=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,a(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(l)&&(i(s=l.hook)&&i(s=s.init)&&s(e,!0),i(s=e.componentInstance)))return m(e,t),!0;if(i(o)){if(i(c))if(n.hasChildNodes())if(i(s=l)&&i(s=s.domProps)&&i(s=s.innerHTML)){if(s!==n.innerHTML)return!1}else{for(var u=!0,p=n.firstChild,d=0;d<c.length;d++){if(!p||!C(p,c[d],t,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else f(e,c,t);if(i(l)){var h=!1;for(var g in l)if(!A(g)){h=!0,v(e,t);break}!h&&l.class&&Ne(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,s){if(!o(e)){var l,c=!1,p=[];if(o(n))c=!0,d(e,p);else{var m=i(n.nodeType);if(!m&&Tr(n,e))_(n,e,p,null,null,s);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),a(t)&&C(n,e,p))return T(e,p,!0),n;l=n,n=new hn(u.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,f=u.parentNode(h);if(d(e,p,h._leaveCb?null:f,u.nextSibling(h)),i(e.parent))for(var v=e.parent,b=g(e);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=e.elm,b){for(var x=0;x<r.create.length;++x)r.create[x](Sr,v);var E=v.data.hook.insert;if(E.merged)for(var S=E.fns.slice(1),A=0;A<S.length;A++)S[A]()}else kr(v);v=v.parent}i(f)?k([n],0,0):i(n.tag)&&w(n)}}return T(e,p,c),e.elm}i(n)&&w(n)}}({nodeOps:xr,modules:[Ur,$r,Gr,Kr,ls,Z?{create:Bs,activate:Bs,remove:function(n,e){!0!==n.data.show?js(n,e):e()}}:{}].concat(qr)});X&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&$s(n,"input")}));var qs={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?Gn(t,"postpatch",(function(){qs.componentUpdated(n,e,t)})):Ls(n,e,t.context),n._vOptions=[].map.call(n.options,Us)):("textarea"===t.tag||yr(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",zs),n.addEventListener("compositionend",Ds),n.addEventListener("change",Ds),X&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Ls(n,e,t.context);var r=n._vOptions,s=n._vOptions=[].map.call(n.options,Us);if(s.some((function(n,e){return!M(n,r[e])})))(n.multiple?e.value.some((function(n){return Ms(n,s)})):e.value!==e.oldValue&&Ms(e.value,s))&&$s(n,"change")}}};function Ls(n,e,t){Rs(n,e,t),(K||Y)&&setTimeout((function(){Rs(n,e,t)}),0)}function Rs(n,e,t){var r=e.value,s=n.multiple;if(!s||Array.isArray(r)){for(var o,i,a=0,l=n.options.length;a<l;a++)if(i=n.options[a],s)o=U(r,Us(i))>-1,i.selected!==o&&(i.selected=o);else if(M(Us(i),r))return void(n.selectedIndex!==a&&(n.selectedIndex=a));s||(n.selectedIndex=-1)}}function Ms(n,e){return e.every((function(e){return!M(e,n)}))}function Us(n){return"_value"in n?n._value:n.value}function zs(n){n.target.composing=!0}function Ds(n){n.target.composing&&(n.target.composing=!1,$s(n.target,"input"))}function $s(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Fs(n){return!n.componentInstance||n.data&&n.data.transition?n:Fs(n.componentInstance._vnode)}var Ns={model:qs,show:{bind:function(n,e,t){var r=e.value,s=(t=Fs(t)).data&&t.data.transition,o=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&s?(t.data.show=!0,Cs(t,(function(){n.style.display=o}))):n.style.display=r?o:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=Fs(t)).data&&t.data.transition?(t.data.show=!0,r?Cs(t,(function(){n.style.display=n.__vOriginalDisplay})):js(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,s){s||(n.style.display=n.__vOriginalDisplay)}}},Hs={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Vs(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Vs(_e(e.children)):n}function Ws(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var s=t._parentListeners;for(var r in s)e[T(r)]=s[r];return e}function Js(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Gs=function(n){return n.tag||fe(n)},Zs=function(n){return"show"===n.name},Qs={name:"transition",props:Hs,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Gs)).length){0;var r=this.mode;0;var s=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return s;var o=Vs(s);if(!o)return s;if(this._leaving)return Js(n,s);var i="__transition-".concat(this._uid,"-");o.key=null==o.key?o.isComment?i+"comment":i+o.tag:l(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var a=(o.data||(o.data={})).transition=Ws(this),c=this._vnode,u=Vs(c);if(o.data.directives&&o.data.directives.some(Zs)&&(o.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(o,u)&&!fe(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=B({},a);if("out-in"===r)return this._leaving=!0,Gn(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Js(n,s);if("in-out"===r){if(fe(o))return c;var d,m=function(){d()};Gn(a,"afterEnter",m),Gn(a,"enterCancelled",m),Gn(p,"delayLeave",(function(n){d=n}))}}return s}}},Ks=B({tag:String,moveClass:String},Hs);function Xs(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Ys(n){n.data.newPos=n.elm.getBoundingClientRect()}function no(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,s=e.top-t.top;if(r||s){n.data.moved=!0;var o=n.elm.style;o.transform=o.WebkitTransform="translate(".concat(r,"px,").concat(s,"px)"),o.transitionDuration="0s"}}delete Ks.mode;var eo={Transition:Qs,TransitionGroup:{props:Ks,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var s=Xe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,s(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,s=this.$slots.default||[],o=this.children=[],i=Ws(this),a=0;a<s.length;a++){if((u=s[a]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))o.push(u),t[u.key]=u,(u.data||(u.data={})).transition=i;else;}if(r){var l=[],c=[];for(a=0;a<r.length;a++){var u;(u=r[a]).data.transition=i,u.data.pos=u.elm.getBoundingClientRect(),t[u.key]?l.push(u):c.push(u)}this.kept=n(e,null,l),this.removed=c}return n(e,null,o)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Xs),n.forEach(Ys),n.forEach(no),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;ws(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(gs,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(gs,n),t._moveCb=null,ks(t,e))})}})))},methods:{hasMove:function(n,e){if(!hs)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){ps(t,n)})),us(t,e),t.style.display="none",this.$el.appendChild(t);var r=_s(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function to(n,e){for(var t in e)n[t]=e[t];return n}Jt.config.mustUseProp=function(n,e,t){return"value"===t&&tr(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Jt.config.isReservedTag=vr,Jt.config.isReservedAttr=er,Jt.config.getTagNamespace=function(n){return gr(n)?"svg":"math"===n?"math":void 0},Jt.config.isUnknownElement=function(n){if(!Z)return!0;if(vr(n))return!1;if(n=n.toLowerCase(),null!=br[n])return br[n];var e=document.createElement(n);return n.indexOf("-")>-1?br[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:br[n]=/HTMLUnknownElement/.test(e.toString())},B(Jt.options.directives,Ns),B(Jt.options.components,eo),Jt.prototype.__patch__=Z?Os:q,Jt.prototype.$mount=function(n,e){return function(n,e,t){var r;n.$el=e,n.$options.render||(n.$options.render=fn),et(n,"beforeMount"),r=function(){n._update(n._render(),t)},new We(n,r,q,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1;var s=n._preWatchers;if(s)for(var o=0;o<s.length;o++)s[o].run();return null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&Z?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},Z&&setTimeout((function(){N.devtools&&ln&&ln.emit("init",Jt)}),0);var ro=/[!'()*]/g,so=function(n){return"%"+n.charCodeAt(0).toString(16)},oo=/%2C/g,io=function(n){return encodeURIComponent(n).replace(ro,so).replace(oo,",")};function ao(n){try{return decodeURIComponent(n)}catch(n){0}return n}var lo=function(n){return null==n||"object"==typeof n?n:String(n)};function co(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=ao(t.shift()),s=t.length>0?ao(t.join("=")):null;void 0===e[r]?e[r]=s:Array.isArray(e[r])?e[r].push(s):e[r]=[e[r],s]})),e):e}function uo(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return io(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(io(e)):r.push(io(e)+"="+io(n)))})),r.join("&")}return io(e)+"="+io(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var po=/\/?$/;function mo(n,e,t,r){var s=r&&r.options.stringifyQuery,o=e.query||{};try{o=ho(o)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:o,params:e.params||{},fullPath:vo(e,s),matched:n?go(n):[]};return t&&(i.redirectedFrom=vo(t,s)),Object.freeze(i)}function ho(n){if(Array.isArray(n))return n.map(ho);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=ho(n[t]);return e}return n}var fo=mo(null,{path:"/"});function go(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function vo(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var s=n.hash;return void 0===s&&(s=""),(t||"/")+(e||uo)(r)+s}function bo(n,e,t){return e===fo?n===e:!!e&&(n.path&&e.path?n.path.replace(po,"")===e.path.replace(po,"")&&(t||n.hash===e.hash&&yo(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&yo(n.query,e.query)&&yo(n.params,e.params))))}function yo(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,s){var o=n[t];if(r[s]!==t)return!1;var i=e[t];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?yo(o,i):String(o)===String(i)}))}function xo(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var s=t.instances[r],o=t.enteredCbs[r];if(s&&o){delete t.enteredCbs[r];for(var i=0;i<o.length;i++)s._isBeingDestroyed||o[i](s)}}}}var wo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,s=e.parent,o=e.data;o.routerView=!0;for(var i=s.$createElement,a=t.name,l=s.$route,c=s._routerViewCache||(s._routerViewCache={}),u=0,p=!1;s&&s._routerRoot!==s;){var d=s.$vnode?s.$vnode.data:{};d.routerView&&u++,d.keepAlive&&s._directInactive&&s._inactive&&(p=!0),s=s.$parent}if(o.routerViewDepth=u,p){var m=c[a],h=m&&m.component;return h?(m.configProps&&ko(h,o,m.route,m.configProps),i(h,o,r)):i()}var f=l.matched[u],g=f&&f.components[a];if(!f||!g)return c[a]=null,i();c[a]={component:g},o.registerRouteInstance=function(n,e){var t=f.instances[a];(e&&t!==n||!e&&t===n)&&(f.instances[a]=e)},(o.hook||(o.hook={})).prepatch=function(n,e){f.instances[a]=e.componentInstance},o.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==f.instances[a]&&(f.instances[a]=n.componentInstance),xo(l)};var v=f.props&&f.props[a];return v&&(to(c[a],{route:l,configProps:v}),ko(g,o,l,v)),i(g,o,r)}};function ko(n,e,t,r){var s=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(s){s=e.props=to({},s);var o=e.attrs=e.attrs||{};for(var i in s)n.props&&i in n.props||(o[i]=s[i],delete s[i])}}function Eo(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var s=e.split("/");t&&s[s.length-1]||s.pop();for(var o=n.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var a=o[i];".."===a?s.pop():"."!==a&&s.push(a)}return""!==s[0]&&s.unshift(""),s.join("/")}function So(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var _o=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},To=Do,Ao=Bo,Co=function(n,e){return qo(Bo(n,e),e)},jo=qo,Io=zo,Po=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Bo(n,e){for(var t,r=[],s=0,o=0,i="",a=e&&e.delimiter||"/";null!=(t=Po.exec(n));){var l=t[0],c=t[1],u=t.index;if(i+=n.slice(o,u),o=u+l.length,c)i+=c[1];else{var p=n[o],d=t[2],m=t[3],h=t[4],f=t[5],g=t[6],v=t[7];i&&(r.push(i),i="");var b=null!=d&&null!=p&&p!==d,y="+"===g||"*"===g,x="?"===g||"*"===g,w=t[2]||a,k=h||f;r.push({name:m||s++,prefix:d||"",delimiter:w,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:k?Ro(k):v?".*":"[^"+Lo(w)+"]+?"})}}return o<n.length&&(i+=n.substr(o)),i&&r.push(i),r}function Oo(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function qo(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",Uo(e)));return function(e,r){for(var s="",o=e||{},i=(r||{}).pretty?Oo:encodeURIComponent,a=0;a<n.length;a++){var l=n[a];if("string"!=typeof l){var c,u=o[l.name];if(null==u){if(l.optional){l.partial&&(s+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(_o(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=i(u[p]),!t[a].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");s+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(u),!t[a].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');s+=l.prefix+c}}else s+=l}return s}}function Lo(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Ro(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Mo(n,e){return n.keys=e,n}function Uo(n){return n&&n.sensitive?"":"i"}function zo(n,e,t){_o(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,s=!1!==t.end,o="",i=0;i<n.length;i++){var a=n[i];if("string"==typeof a)o+=Lo(a);else{var l=Lo(a.prefix),c="(?:"+a.pattern+")";e.push(a),a.repeat&&(c+="(?:"+l+c+")*"),o+=c=a.optional?a.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=Lo(t.delimiter||"/"),p=o.slice(-u.length)===u;return r||(o=(p?o.slice(0,-u.length):o)+"(?:"+u+"(?=$))?"),o+=s?"$":r&&p?"":"(?="+u+"|$)",Mo(new RegExp("^"+o,Uo(t)),e)}function Do(n,e,t){return _o(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Mo(n,e)}(n,e):_o(n)?function(n,e,t){for(var r=[],s=0;s<n.length;s++)r.push(Do(n[s],e,t).source);return Mo(new RegExp("(?:"+r.join("|")+")",Uo(t)),e)}(n,e,t):function(n,e,t){return zo(Bo(n,t),e,t)}(n,e,t)}To.parse=Ao,To.compile=Co,To.tokensToFunction=jo,To.tokensToRegExp=Io;var $o=Object.create(null);function Fo(n,e,t){e=e||{};try{var r=$o[n]||($o[n]=To.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function No(n,e,t,r){var s="string"==typeof n?{path:n}:n;if(s._normalized)return s;if(s.name){var o=(s=to({},n)).params;return o&&"object"==typeof o&&(s.params=to({},o)),s}if(!s.path&&s.params&&e){(s=to({},s))._normalized=!0;var i=to(to({},e.params),s.params);if(e.name)s.name=e.name,s.params=i;else if(e.matched.length){var a=e.matched[e.matched.length-1].path;s.path=Fo(a,i,e.path)}else 0;return s}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var s=n.indexOf("?");return s>=0&&(t=n.slice(s+1),n=n.slice(0,s)),{path:n,query:t,hash:e}}(s.path||""),c=e&&e.path||"/",u=l.path?Eo(l.path,c,t||s.append):c,p=function(n,e,t){void 0===e&&(e={});var r,s=t||co;try{r=s(n||"")}catch(n){r={}}for(var o in e){var i=e[o];r[o]=Array.isArray(i)?i.map(lo):lo(i)}return r}(l.query,s.query,r&&r.options.parseQuery),d=s.hash||l.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:u,query:p,hash:d}}var Ho,Vo=function(){},Wo={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,s=t.resolve(this.to,r,this.append),o=s.location,i=s.route,a=s.href,l={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,d=null==u?"router-link-exact-active":u,m=null==this.activeClass?p:this.activeClass,h=null==this.exactActiveClass?d:this.exactActiveClass,f=i.redirectedFrom?mo(null,No(i.redirectedFrom),null,t):i;l[h]=bo(r,f,this.exactPath),l[m]=this.exact||this.exactPath?l[h]:function(n,e){return 0===n.path.replace(po,"/").indexOf(e.path.replace(po,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,f);var g=l[h]?this.ariaCurrentValue:null,v=function(n){Jo(n)&&(e.replace?t.replace(o,Vo):t.push(o,Vo))},b={click:Jo};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var y={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:a,route:i,navigate:v,isActive:l[m],isExactActive:l[h]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:a,"aria-current":g};else{var w=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(w){w.isStatic=!1;var k=w.data=to({},w.data);for(var E in k.on=k.on||{},k.on){var S=k.on[E];E in b&&(k.on[E]=Array.isArray(S)?S:[S])}for(var _ in b)_ in k.on?k.on[_].push(b[_]):k.on[_]=v;var T=w.data.attrs=to({},w.data.attrs);T.href=a,T["aria-current"]=g}else y.on=b}return n(this.tag,y,this.$slots.default)}};function Jo(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Go="undefined"!=typeof window;function Zo(n,e,t,r,s){var o=e||[],i=t||Object.create(null),a=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,s,o,i){var a=s.path,l=s.name;0;var c=s.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return So(e.path+"/"+n)}(a,o,c.strict);"boolean"==typeof s.caseSensitive&&(c.sensitive=s.caseSensitive);var p={path:u,regex:Qo(u,c),components:s.components||{default:s.component},alias:s.alias?"string"==typeof s.alias?[s.alias]:s.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:i,redirect:s.redirect,beforeEnter:s.beforeEnter,meta:s.meta||{},props:null==s.props?{}:s.components?s.props:{default:s.props}};s.children&&s.children.forEach((function(s){var o=i?So(i+"/"+s.path):void 0;n(e,t,r,s,p,o)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==s.alias)for(var d=Array.isArray(s.alias)?s.alias:[s.alias],m=0;m<d.length;++m){0;var h={path:d[m],children:s.children};n(e,t,r,h,o,p.path||"/")}l&&(r[l]||(r[l]=p))}(o,i,a,n,s)}));for(var l=0,c=o.length;l<c;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),c--,l--);return{pathList:o,pathMap:i,nameMap:a}}function Qo(n,e){return To(n,[],e)}function Ko(n,e){var t=Zo(n),r=t.pathList,s=t.pathMap,o=t.nameMap;function i(n,t,i){var a=No(n,t,!1,e),c=a.name;if(c){var u=o[c];if(!u)return l(null,a);var p=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof a.params&&(a.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in a.params)&&p.indexOf(d)>-1&&(a.params[d]=t.params[d]);return a.path=Fo(u.path,a.params),l(u,a,i)}if(a.path){a.params={};for(var m=0;m<r.length;m++){var h=r[m],f=s[h];if(Xo(f.regex,a.path,a.params))return l(f,a,i)}}return l(null,a)}function a(n,t){var r=n.redirect,s="function"==typeof r?r(mo(n,t,null,e)):r;if("string"==typeof s&&(s={path:s}),!s||"object"!=typeof s)return l(null,t);var a=s,c=a.name,u=a.path,p=t.query,d=t.hash,m=t.params;if(p=a.hasOwnProperty("query")?a.query:p,d=a.hasOwnProperty("hash")?a.hash:d,m=a.hasOwnProperty("params")?a.params:m,c){o[c];return i({_normalized:!0,name:c,query:p,hash:d,params:m},void 0,t)}if(u){var h=function(n,e){return Eo(n,e.parent?e.parent.path:"/",!0)}(u,n);return i({_normalized:!0,path:Fo(h,m),query:p,hash:d},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?a(n,r||t):n&&n.matchAs?function(n,e,t){var r=i({_normalized:!0,path:Fo(t,e.params)});if(r){var s=r.matched,o=s[s.length-1];return e.params=r.params,l(o,e)}return l(null,e)}(0,t,n.matchAs):mo(n,t,r,e)}return{match:i,addRoute:function(n,e){var t="object"!=typeof n?o[n]:void 0;Zo([e||n],r,s,o,t),t&&t.alias.length&&Zo(t.alias.map((function(n){return{path:n,children:[e]}})),r,s,o,t)},getRoutes:function(){return r.map((function(n){return s[n]}))},addRoutes:function(n){Zo(n,r,s,o)}}}function Xo(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var s=1,o=r.length;s<o;++s){var i=n.keys[s-1];i&&(t[i.name||"pathMatch"]="string"==typeof r[s]?ao(r[s]):r[s])}return!0}var Yo=Go&&window.performance&&window.performance.now?window.performance:Date;function ni(){return Yo.now().toFixed(3)}var ei=ni();function ti(){return ei}function ri(n){return ei=n}var si=Object.create(null);function oi(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=to({},window.history.state);return t.key=ti(),window.history.replaceState(t,"",e),window.addEventListener("popstate",li),function(){window.removeEventListener("popstate",li)}}function ii(n,e,t,r){if(n.app){var s=n.options.scrollBehavior;s&&n.app.$nextTick((function(){var o=function(){var n=ti();if(n)return si[n]}(),i=s.call(n,e,t,r?o:null);i&&("function"==typeof i.then?i.then((function(n){mi(n,o)})).catch((function(n){0})):mi(i,o))}))}}function ai(){var n=ti();n&&(si[n]={x:window.pageXOffset,y:window.pageYOffset})}function li(n){ai(),n.state&&n.state.key&&ri(n.state.key)}function ci(n){return pi(n.x)||pi(n.y)}function ui(n){return{x:pi(n.x)?n.x:window.pageXOffset,y:pi(n.y)?n.y:window.pageYOffset}}function pi(n){return"number"==typeof n}var di=/^#\d/;function mi(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var s=di.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(s){var o=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(s,o={x:pi((t=o).x)?t.x:0,y:pi(t.y)?t.y:0})}else ci(n)&&(e=ui(n))}else r&&ci(n)&&(e=ui(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var hi,fi=Go&&((-1===(hi=window.navigator.userAgent).indexOf("Android 2.")&&-1===hi.indexOf("Android 4.0")||-1===hi.indexOf("Mobile Safari")||-1!==hi.indexOf("Chrome")||-1!==hi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function gi(n,e){ai();var t=window.history;try{if(e){var r=to({},t.state);r.key=ti(),t.replaceState(r,"",n)}else t.pushState({key:ri(ni())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function vi(n){gi(n,!0)}var bi={redirected:2,aborted:4,cancelled:8,duplicated:16};function yi(n,e){return wi(n,e,bi.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return ki.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function xi(n,e){return wi(n,e,bi.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function wi(n,e,t,r){var s=new Error(r);return s._isRouter=!0,s.from=n,s.to=e,s.type=t,s}var ki=["params","query","hash"];function Ei(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Si(n,e){return Ei(n)&&n._isRouter&&(null==e||n.type===e)}function _i(n,e,t){var r=function(s){s>=n.length?t():n[s]?e(n[s],(function(){r(s+1)})):r(s+1)};r(0)}function Ti(n){return function(e,t,r){var s=!1,o=0,i=null;Ai(n,(function(n,e,t,a){if("function"==typeof n&&void 0===n.cid){s=!0,o++;var l,c=Ii((function(e){var s;((s=e).__esModule||ji&&"Module"===s[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Ho.extend(e),t.components[a]=e,--o<=0&&r()})),u=Ii((function(n){var e="Failed to resolve async component "+a+": "+n;i||(i=Ei(n)?n:new Error(e),r(i))}));try{l=n(c,u)}catch(n){u(n)}if(l)if("function"==typeof l.then)l.then(c,u);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),s||r()}}function Ai(n,e){return Ci(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Ci(n){return Array.prototype.concat.apply([],n)}var ji="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ii(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Pi=function(n,e){this.router=n,this.base=function(n){if(!n)if(Go){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=fo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Bi(n,e,t,r){var s=Ai(n,(function(n,r,s,o){var i=function(n,e){"function"!=typeof n&&(n=Ho.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,r,s,o)})):t(i,r,s,o)}));return Ci(r?s.reverse():s)}function Oi(n,e){if(e)return function(){return n.apply(e,arguments)}}Pi.prototype.listen=function(n){this.cb=n},Pi.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Pi.prototype.onError=function(n){this.errorCbs.push(n)},Pi.prototype.transitionTo=function(n,e,t){var r,s=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var o=this.current;this.confirmTransition(r,(function(){s.updateRoute(r),e&&e(r),s.ensureURL(),s.router.afterHooks.forEach((function(n){n&&n(r,o)})),s.ready||(s.ready=!0,s.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!s.ready&&(Si(n,bi.redirected)&&o===fo||(s.ready=!0,s.readyErrorCbs.forEach((function(e){e(n)}))))}))},Pi.prototype.confirmTransition=function(n,e,t){var r=this,s=this.current;this.pending=n;var o,i,a=function(n){!Si(n)&&Ei(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=s.matched.length-1;if(bo(n,s)&&l===c&&n.matched[l]===s.matched[c])return this.ensureURL(),n.hash&&ii(this.router,s,n,!1),a(((i=wi(o=s,n,bi.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",i));var u=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=u.updated,d=u.deactivated,m=u.activated,h=[].concat(function(n){return Bi(n,"beforeRouteLeave",Oi,!0)}(d),this.router.beforeHooks,function(n){return Bi(n,"beforeRouteUpdate",Oi)}(p),m.map((function(n){return n.beforeEnter})),Ti(m)),f=function(e,t){if(r.pending!==n)return a(xi(s,n));try{e(n,s,(function(e){!1===e?(r.ensureURL(!0),a(function(n,e){return wi(n,e,bi.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(s,n))):Ei(e)?(r.ensureURL(!0),a(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(a(yi(s,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){a(n)}};_i(h,f,(function(){_i(function(n){return Bi(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,s,o){return n(r,s,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),o(n)}))}}(n,t,r)}))}(m).concat(r.router.resolveHooks),f,(function(){if(r.pending!==n)return a(xi(s,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){xo(n)}))}))}))},Pi.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Pi.prototype.setupListeners=function(){},Pi.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=fo,this.pending=null};var qi=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Li(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=fi&&t;r&&this.listeners.push(oi());var s=function(){var t=n.current,s=Li(n.base);n.current===fo&&s===n._startLocation||n.transitionTo(s,(function(n){r&&ii(e,n,t,!0)}))};window.addEventListener("popstate",s),this.listeners.push((function(){window.removeEventListener("popstate",s)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,s=this.current;this.transitionTo(n,(function(n){gi(So(r.base+n.fullPath)),ii(r.router,n,s,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,s=this.current;this.transitionTo(n,(function(n){vi(So(r.base+n.fullPath)),ii(r.router,n,s,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Li(this.base)!==this.current.fullPath){var e=So(this.base+this.current.fullPath);n?gi(e):vi(e)}},e.prototype.getCurrentLocation=function(){return Li(this.base)},e}(Pi);function Li(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(So(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ri=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=Li(n);if(!/^\/#/.test(e))return window.location.replace(So(n+"/#"+e)),!0}(this.base)||Mi()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=fi&&e;t&&this.listeners.push(oi());var r=function(){var e=n.current;Mi()&&n.transitionTo(Ui(),(function(r){t&&ii(n.router,r,e,!0),fi||$i(r.fullPath)}))},s=fi?"popstate":"hashchange";window.addEventListener(s,r),this.listeners.push((function(){window.removeEventListener(s,r)}))}},e.prototype.push=function(n,e,t){var r=this,s=this.current;this.transitionTo(n,(function(n){Di(n.fullPath),ii(r.router,n,s,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,s=this.current;this.transitionTo(n,(function(n){$i(n.fullPath),ii(r.router,n,s,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Ui()!==e&&(n?Di(e):$i(e))},e.prototype.getCurrentLocation=function(){return Ui()},e}(Pi);function Mi(){var n=Ui();return"/"===n.charAt(0)||($i("/"+n),!1)}function Ui(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function zi(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Di(n){fi?gi(zi(n)):window.location.hash=n}function $i(n){fi?vi(zi(n)):window.location.replace(zi(n))}var Fi=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){Si(n,bi.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Pi),Ni=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ko(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!fi&&!1!==n.fallback,this.fallback&&(e="hash"),Go||(e="abstract"),this.mode=e,e){case"history":this.history=new qi(this,n.base);break;case"hash":this.history=new Ri(this,n.base,this.fallback);break;case"abstract":this.history=new Fi(this,n.base);break;default:0}},Hi={currentRoute:{configurable:!0}};Ni.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Hi.currentRoute.get=function(){return this.history&&this.history.current},Ni.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof qi||t instanceof Ri){var r=function(n){t.setupListeners(),function(n){var r=t.current,s=e.options.scrollBehavior;fi&&s&&"fullPath"in n&&ii(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Ni.prototype.beforeEach=function(n){return Wi(this.beforeHooks,n)},Ni.prototype.beforeResolve=function(n){return Wi(this.resolveHooks,n)},Ni.prototype.afterEach=function(n){return Wi(this.afterHooks,n)},Ni.prototype.onReady=function(n,e){this.history.onReady(n,e)},Ni.prototype.onError=function(n){this.history.onError(n)},Ni.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Ni.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Ni.prototype.go=function(n){this.history.go(n)},Ni.prototype.back=function(){this.go(-1)},Ni.prototype.forward=function(){this.go(1)},Ni.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Ni.prototype.resolve=function(n,e,t){var r=No(n,e=e||this.history.current,t,this),s=this.match(r,e),o=s.redirectedFrom||s.fullPath;return{location:r,route:s,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?So(n+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:s}},Ni.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ni.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==fo&&this.history.transitionTo(this.history.getCurrentLocation())},Ni.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==fo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ni.prototype,Hi);var Vi=Ni;function Wi(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Ni.install=function n(e){if(!n.installed||Ho!==e){n.installed=!0,Ho=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",wo),e.component("RouterLink",Wo);var s=e.config.optionMergeStrategies;s.beforeRouteEnter=s.beforeRouteLeave=s.beforeRouteUpdate=s.created}},Ni.version="3.6.5",Ni.isNavigationFailure=Si,Ni.NavigationFailureType=bi,Ni.START_LOCATION=fo,Go&&window.Vue&&window.Vue.use(Ni);t(157),t(17),t(166);t(167),t(25);var Ji={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(35)]).then(t.bind(null,802)),"components/ArchivesPage":()=>Promise.all([t.e(0),t.e(46)]).then(t.bind(null,384)),"components/ArticleInfo":()=>Promise.all([t.e(0),t.e(56)]).then(t.bind(null,385)),"components/BloggerBar":()=>Promise.all([t.e(0),t.e(57)]).then(t.bind(null,386)),"components/BodyBgImg":()=>Promise.all([t.e(0),t.e(58)]).then(t.bind(null,387)),"components/Buttons":()=>Promise.all([t.e(0),t.e(47)]).then(t.bind(null,388)),"components/Catalogue":()=>Promise.all([t.e(0),t.e(59)]).then(t.bind(null,389)),"components/CategoriesBar":()=>Promise.all([t.e(0),t.e(60)]).then(t.bind(null,342)),"components/CategoriesPage":()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,390)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(36)]).then(t.bind(null,320)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(61)]).then(t.bind(null,297)),"components/Footer":()=>Promise.all([t.e(0),t.e(62)]).then(t.bind(null,391)),"components/Home":()=>Promise.all([t.e(0),t.e(2),t.e(84)]).then(t.bind(null,789)),"components/MainLayout":()=>Promise.all([t.e(0),t.e(63)]).then(t.bind(null,312)),"components/Navbar":()=>Promise.all([t.e(0),t.e(1)]).then(t.bind(null,788)),"components/NavLink":()=>t.e(85).then(t.bind(null,296)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(28)]).then(t.bind(null,344)),"components/Page":()=>Promise.all([t.e(0),t.e(3),t.e(69)]).then(t.bind(null,790)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(48)]).then(t.bind(null,392)),"components/PageNav":()=>Promise.all([t.e(0),t.e(42)]).then(t.bind(null,393)),"components/Pagination":()=>Promise.all([t.e(0),t.e(64)]).then(t.bind(null,311)),"components/PostList":()=>Promise.all([t.e(0),t.e(65)]).then(t.bind(null,310)),"components/RightMenu":()=>Promise.all([t.e(0),t.e(66)]).then(t.bind(null,394)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,395)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(67)]).then(t.bind(null,397)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,345)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(49)]).then(t.bind(null,321)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,318)),"components/TagsBar":()=>Promise.all([t.e(0),t.e(68)]).then(t.bind(null,343)),"components/TagsPage":()=>Promise.all([t.e(0),t.e(23)]).then(t.bind(null,396)),"components/UpdateArticle":()=>Promise.all([t.e(0),t.e(70)]).then(t.bind(null,348)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,813)),"global-components/CodeBlock":()=>Promise.resolve().then(t.bind(null,127)),"global-components/CodeGroup":()=>Promise.resolve().then(t.bind(null,128)),"layouts/404":()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,803)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(1),t.e(2),t.e(3),t.e(4)]).then(t.bind(null,804)),NotFound:()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,803)),Layout:()=>Promise.all([t.e(0),t.e(1),t.e(2),t.e(3),t.e(4)]).then(t.bind(null,804))},Gi={"v-68444258":()=>t.e(86).then(t.bind(null,814)),"v-a934dd4e":()=>t.e(87).then(t.bind(null,815)),"v-5f672fab":()=>t.e(88).then(t.bind(null,816)),"v-51619d43":()=>t.e(89).then(t.bind(null,817)),"v-13760227":()=>t.e(90).then(t.bind(null,818)),"v-453f90d1":()=>t.e(91).then(t.bind(null,819)),"v-784e7a47":()=>t.e(92).then(t.bind(null,820)),"v-0dd2f68a":()=>t.e(93).then(t.bind(null,821)),"v-ee189738":()=>t.e(94).then(t.bind(null,822)),"v-918d5c8e":()=>t.e(74).then(t.bind(null,823)),"v-4021e81f":()=>t.e(95).then(t.bind(null,824)),"v-23bbfdfe":()=>t.e(96).then(t.bind(null,825)),"v-51195d0a":()=>t.e(97).then(t.bind(null,826)),"v-6ff28506":()=>t.e(98).then(t.bind(null,827)),"v-264a7893":()=>t.e(27).then(t.bind(null,828)),"v-69353de6":()=>t.e(75).then(t.bind(null,829)),"v-03cb5213":()=>t.e(31).then(t.bind(null,830)),"v-370932ee":()=>t.e(24).then(t.bind(null,831)),"v-690dad64":()=>t.e(76).then(t.bind(null,832)),"v-186f064c":()=>t.e(13).then(t.bind(null,833)),"v-1be32328":()=>t.e(15).then(t.bind(null,834)),"v-3f108a34":()=>t.e(30).then(t.bind(null,835)),"v-24a7616d":()=>t.e(12).then(t.bind(null,836)),"v-08d42dca":()=>t.e(14).then(t.bind(null,837)),"v-0fce413c":()=>t.e(11).then(t.bind(null,838)),"v-a190c3b4":()=>t.e(19).then(t.bind(null,839)),"v-d8c6f1d0":()=>t.e(18).then(t.bind(null,840)),"v-aea27dee":()=>t.e(16).then(t.bind(null,841)),"v-21868477":()=>t.e(71).then(t.bind(null,842)),"v-43d01a18":()=>t.e(26).then(t.bind(null,843)),"v-2338f61b":()=>t.e(10).then(t.bind(null,844)),"v-2e2102c7":()=>t.e(21).then(t.bind(null,845)),"v-735b8498":()=>t.e(29).then(t.bind(null,846)),"v-3dffb064":()=>t.e(37).then(t.bind(null,847)),"v-4327e1bc":()=>t.e(25).then(t.bind(null,848)),"v-57ae1201":()=>t.e(20).then(t.bind(null,849)),"v-75275396":()=>t.e(38).then(t.bind(null,850)),"v-1087fa54":()=>t.e(43).then(t.bind(null,851)),"v-7c6d73aa":()=>t.e(44).then(t.bind(null,852)),"v-07e08c87":()=>t.e(72).then(t.bind(null,853)),"v-9a72da8c":()=>t.e(99).then(t.bind(null,854)),"v-6b548583":()=>t.e(32).then(t.bind(null,855)),"v-460bb69d":()=>t.e(73).then(t.bind(null,856)),"v-31a2cd79":()=>t.e(77).then(t.bind(null,857)),"v-d13ad246":()=>t.e(33).then(t.bind(null,858)),"v-38b3b8e6":()=>t.e(39).then(t.bind(null,859)),"v-8e22d07c":()=>t.e(40).then(t.bind(null,860)),"v-356004a8":()=>t.e(101).then(t.bind(null,861)),"v-f606a082":()=>t.e(34).then(t.bind(null,862)),"v-b764e084":()=>t.e(79).then(t.bind(null,863)),"v-135c0e9c":()=>t.e(100).then(t.bind(null,864)),"v-4b727136":()=>t.e(102).then(t.bind(null,865)),"v-1b3a7299":()=>t.e(78).then(t.bind(null,866)),"v-ec9ecf1c":()=>t.e(45).then(t.bind(null,867)),"v-56f6029c":()=>t.e(105).then(t.bind(null,868)),"v-59c7b2f8":()=>t.e(107).then(t.bind(null,869)),"v-089d559a":()=>t.e(106).then(t.bind(null,870)),"v-33f3a64c":()=>t.e(109).then(t.bind(null,871)),"v-0c95180c":()=>t.e(108).then(t.bind(null,872)),"v-ab5dc30c":()=>t.e(110).then(t.bind(null,873)),"v-69d810e6":()=>t.e(111).then(t.bind(null,874)),"v-9632e184":()=>t.e(103).then(t.bind(null,875)),"v-6085ef4c":()=>t.e(104).then(t.bind(null,876))};function Zi(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Qi=/-(\w)/g,Ki=Zi(n=>n.replace(Qi,(n,e)=>e?e.toUpperCase():"")),Xi=/\B([A-Z])/g,Yi=Zi(n=>n.replace(Xi,"-$1").toLowerCase()),na=Zi(n=>n.charAt(0).toUpperCase()+n.slice(1));function ea(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(na(Ki(e))):n(na(e))||n(Yi(e))}const ta=Object.assign({},Ji,Gi),ra=n=>ta[n],sa=n=>Gi[n],oa=n=>Ji[n],ia=n=>Jt.component(n);function aa(n){return ea(sa,n)}function la(n){return ea(oa,n)}function ca(n){return ea(ra,n)}function ua(n){return ea(ia,n)}function pa(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!ua(n)&&ca(n)){const e=await ca(n)();Jt.component(n,e.default)}}))}function da(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ma=t(123),ha=t.n(ma),fa=t(124),va=t.n(fa),ba={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${va()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=xa(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=wa(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return ha()([{name:"description",content:this.$description}],n,this.siteMeta,ka)},updateCanonicalLink(){ya(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",xa(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){wa(null,this.currentMetaTags),ya()}};function ya(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function xa(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function wa(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ka(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}t(66);var Ea=t(67),Sa={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(Ea)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),s=window.innerHeight+t;for(let n=0;n<e.length;n++){const o=e[n],i=e[n+1],a=0===n&&0===t||t>=o.parentElement.offsetTop+10&&(!i||t<i.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(a&&l!==decodeURIComponent(o.hash)){const t=o;if(s===r)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},_a=t(44),Ta=t.n(_a),Aa={mounted(){Ta.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Jt.component(n.name)||Ta.a.start(),t()}),this.$router.afterEach(()=>{Ta.a.done(),this.isSidebarOpen=!1})}};t(277),t(278);class Ca{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var ja={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new Ca).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},Ia="auto",Pa="zoom-in",Ba="zoom-out",Oa="grab",qa="move";function La(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s={passive:!1};r?n.addEventListener(e,t,s):n.removeEventListener(e,t,s)}function Ra(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Ma(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Ua(n,e,t){!function(n){var e=za,t=Da;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var s=n.transform;delete n.transform,n[t]=s}}(e);var r=n.style,s={};for(var o in e)t&&(s[o]=r[o]||""),r[o]=e[o];return s}var za="transition",Da="transform",$a="transform",Fa="transitionend";var Na=function(){},Ha={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Na,onClose:Na,onGrab:Na,onMove:Na,onRelease:Na,onBeforeOpen:Na,onBeforeClose:Na,onBeforeGrab:Na,onBeforeRelease:Na,onImageLoading:Na,onImageLoaded:Na},Va={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Ja(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,s=this.lastScrollPosition.y-t,o=this.options.scrollThreshold;(Math.abs(s)>=o||Math.abs(r)>=o)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Wa(n)&&!Ja(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Wa(n)&&!Ja(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Wa(n){return 0===n.button}function Ja(n){return n.metaKey||n.ctrlKey}var Ga={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Ua(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),La(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Ua(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Za="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Qa=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Ka=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Xa={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Ma(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,s=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Oa:Ba,transition:$a+"\n        "+r+"s\n        "+s,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Ua(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Ua(this.el,{transform:"none"})},grab:function(n,e,t){var r=Ya(),s=r.x-n,o=r.y-e;Ua(this.el,{cursor:qa,transform:"translate3d(\n        "+(this.translate.x+s)+"px, "+(this.translate.y+o)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=Ya(),s=r.x-n,o=r.y-e;Ua(this.el,{transition:$a,transform:"translate3d(\n        "+(this.translate.x+s)+"px, "+(this.translate.y+o)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Ua(this.el,this.styleClose)},restoreOpenStyle:function(){Ua(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Ya(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,s=r.customSize,o=r.scaleBase;if(!s&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(s&&"object"===(void 0===s?"undefined":Za(s)))return{x:s.width/this.rect.width,y:s.height/this.rect.height};var i=this.rect.width/2,a=this.rect.height/2,l=Ya(),c={x:l.x-i,y:l.y-a},u=c.x/i,p=c.y/a,d=o+Math.min(u,p);if(s&&"string"==typeof s){var m=t||this.el.naturalWidth,h=e||this.el.naturalHeight,f=parseFloat(s)*m/(100*this.rect.width),g=parseFloat(s)*h/(100*this.rect.height);if(d>f||d>g)return{x:f,y:g}}return{x:d,y:d}}};function Ya(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function nl(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){La(n,r,e[r],t)}))}var el=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Xa),this.overlay=Object.create(Ga),this.handler=Object.create(Va),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Ka({},Ha,e),this.overlay.init(this),this.handler.init(this)}return Qa(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Pa,La(n,"click",this.handler.click),this.options.preloadImage&&Ra(Ma(n)));return this}},{key:"config",value:function(n){return n?(Ka(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var s=this.target.srcOriginal;null!=s&&(this.options.onImageLoading(r),Ra(s,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),La(document,"scroll",this.handler.scroll),La(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&La(window,"resize",this.handler.resizeWindow);var o=function n(){La(r,Fa,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&nl(document,e.handler,!0),t(r)};return La(r,Fa,o),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ia,this.overlay.fadeOut(),this.target.zoomOut(),La(document,"scroll",this.handler.scroll,!1),La(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&La(window,"resize",this.handler.resizeWindow,!1);var r=function r(){La(t,Fa,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&nl(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return La(t,Fa,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var s=this.target.el;this.options.onBeforeGrab(s),this.released=!1,this.target.grab(n,e,t);var o=function n(){La(s,Fa,n,!1),r(s)};return La(s,Fa,o),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=qa,this.target.move(n,e,t);var s=this.target.el,o=function n(){La(s,Fa,n,!1),r(s)};return La(s,Fa,o),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ia,this.target.restoreOpenStyle();var r=function r(){La(t,Fa,r,!1),n.lock=!1,n.released=!0,e(t)};return La(t,Fa,r),this}}}]),n}();const tl=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),rl=Number("500");class sl{constructor(){this.instance=new el(tl)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=rl){setTimeout(()=>this.update(n),e)}}var ol=[ba,Sa,Aa,ja,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new sl,this.$vuepress.zooming.updateDelay()}}],il={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return da("layout",n),Jt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},al=t(0),ll=Object(al.a)(il,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(ll,"mixins",ol);const cl=[{name:"v-68444258",path:"/speak/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-68444258").then(t)}},{path:"/speak/index.html",redirect:"/speak/"},{path:"/00.目录页/00.导航栏-目录页/01.随笔.html",redirect:"/speak/"},{name:"v-a934dd4e",path:"/tools/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-a934dd4e").then(t)}},{path:"/tools/index.html",redirect:"/tools/"},{path:"/00.目录页/00.导航栏-目录页/02.工具.html",redirect:"/tools/"},{name:"v-5f672fab",path:"/read/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-5f672fab").then(t)}},{path:"/read/index.html",redirect:"/read/"},{path:"/00.目录页/00.导航栏-目录页/03.读吧.html",redirect:"/read/"},{name:"v-51619d43",path:"/projects/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-51619d43").then(t)}},{path:"/projects/index.html",redirect:"/projects/"},{path:"/00.目录页/00.导航栏-目录页/04.项目.html",redirect:"/projects/"},{name:"v-13760227",path:"/frontend/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-13760227").then(t)}},{path:"/frontend/index.html",redirect:"/frontend/"},{path:"/00.目录页/00.导航栏-目录页/05.前端.html",redirect:"/frontend/"},{name:"v-453f90d1",path:"/backend/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-453f90d1").then(t)}},{path:"/backend/index.html",redirect:"/backend/"},{path:"/00.目录页/00.导航栏-目录页/06.后端.html",redirect:"/backend/"},{name:"v-784e7a47",path:"/science/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-784e7a47").then(t)}},{path:"/science/index.html",redirect:"/science/"},{path:"/00.目录页/00.导航栏-目录页/07.科学.html",redirect:"/science/"},{name:"v-0dd2f68a",path:"/more/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-0dd2f68a").then(t)}},{path:"/more/index.html",redirect:"/more/"},{path:"/00.目录页/00.导航栏-目录页/08.更多.html",redirect:"/more/"},{name:"v-ee189738",path:"/speak/0cfc6a/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-ee189738").then(t)}},{path:"/speak/0cfc6a/index.html",redirect:"/speak/0cfc6a/"},{path:"/01.随笔/01.2025/01.爱在我和离开我的人之间流动.html",redirect:"/speak/0cfc6a/"},{name:"v-918d5c8e",path:"/speak/e7004c/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-918d5c8e").then(t)}},{path:"/speak/e7004c/index.html",redirect:"/speak/e7004c/"},{path:"/01.随笔/01.2025/03.闭门造车.html",redirect:"/speak/e7004c/"},{name:"v-4021e81f",path:"/speak/abe993/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-4021e81f").then(t)}},{path:"/speak/abe993/index.html",redirect:"/speak/abe993/"},{path:"/01.随笔/01.2025/02.发了消息没有得到回复.html",redirect:"/speak/abe993/"},{name:"v-23bbfdfe",path:"/speak/d49cd9/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-23bbfdfe").then(t)}},{path:"/speak/d49cd9/index.html",redirect:"/speak/d49cd9/"},{path:"/01.随笔/01.2025/04.学习如何不带要求的请求（祈祷）.html",redirect:"/speak/d49cd9/"},{name:"v-51195d0a",path:"/speak/33bb4e/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-51195d0a").then(t)}},{path:"/speak/33bb4e/index.html",redirect:"/speak/33bb4e/"},{path:"/01.随笔/01.2025/05.威慑教育-读书后的思考和笔记.html",redirect:"/speak/33bb4e/"},{name:"v-6ff28506",path:"/speak/f369be/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-6ff28506").then(t)}},{path:"/speak/f369be/index.html",redirect:"/speak/f369be/"},{path:"/01.随笔/01.2025/06.做计划.html",redirect:"/speak/f369be/"},{name:"v-264a7893",path:"/read/f7013e/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-264a7893").then(t)}},{path:"/read/f7013e/index.html",redirect:"/read/f7013e/"},{path:"/03.读吧/01.阅读轨迹/02.基础乐理知识.html",redirect:"/read/f7013e/"},{name:"v-69353de6",path:"/read/ab0020/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-69353de6").then(t)}},{path:"/read/ab0020/index.html",redirect:"/read/ab0020/"},{path:"/03.读吧/01.阅读轨迹/01.网络平台视频的编码压缩.html",redirect:"/read/ab0020/"},{name:"v-03cb5213",path:"/projects/58146f/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-03cb5213").then(t)}},{path:"/projects/58146f/index.html",redirect:"/projects/58146f/"},{path:"/04.项目/01.用户中心系统/01.前端初始化.html",redirect:"/projects/58146f/"},{name:"v-370932ee",path:"/projects/39691d/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-370932ee").then(t)}},{path:"/projects/39691d/index.html",redirect:"/projects/39691d/"},{path:"/04.项目/01.用户中心系统/02.后端初始化-需求分析.html",redirect:"/projects/39691d/"},{name:"v-690dad64",path:"/projects/8eef80/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-690dad64").then(t)}},{path:"/projects/8eef80/index.html",redirect:"/projects/8eef80/"},{path:"/04.项目/01.用户中心系统/03.数据库表初始化-MyBatis.html",redirect:"/projects/8eef80/"},{name:"v-186f064c",path:"/projects/df37ab/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-186f064c").then(t)}},{path:"/projects/df37ab/index.html",redirect:"/projects/df37ab/"},{path:"/04.项目/01.用户中心系统/06.登录模块（后端）.html",redirect:"/projects/df37ab/"},{name:"v-1be32328",path:"/projects/ea56cb/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-1be32328").then(t)}},{path:"/projects/ea56cb/index.html",redirect:"/projects/ea56cb/"},{path:"/04.项目/01.用户中心系统/05.注册模块（后端）.html",redirect:"/projects/ea56cb/"},{name:"v-3f108a34",path:"/projects/6d7d3b/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-3f108a34").then(t)}},{path:"/projects/6d7d3b/index.html",redirect:"/projects/6d7d3b/"},{path:"/04.项目/01.用户中心系统/07.管理模块（后端）.html",redirect:"/projects/6d7d3b/"},{name:"v-24a7616d",path:"/projects/659246/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-24a7616d").then(t)}},{path:"/projects/659246/index.html",redirect:"/projects/659246/"},{path:"/04.项目/01.用户中心系统/08.Ant Design Pro前端初始化.html",redirect:"/projects/659246/"},{name:"v-08d42dca",path:"/projects/32822d/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-08d42dca").then(t)}},{path:"/projects/32822d/index.html",redirect:"/projects/32822d/"},{path:"/04.项目/01.用户中心系统/09.登录+注册模块（前端）.html",redirect:"/projects/32822d/"},{name:"v-0fce413c",path:"/projects/b75478/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-0fce413c").then(t)}},{path:"/projects/b75478/index.html",redirect:"/projects/b75478/"},{path:"/04.项目/01.用户中心系统/10.管理模块+登录状态（前端）.html",redirect:"/projects/b75478/"},{name:"v-a190c3b4",path:"/projects/253f15/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-a190c3b4").then(t)}},{path:"/projects/253f15/index.html",redirect:"/projects/253f15/"},{path:"/04.项目/01.用户中心系统/11.注销模块+校验模块（前后端）.html",redirect:"/projects/253f15/"},{name:"v-d8c6f1d0",path:"/projects/21a0e3/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-d8c6f1d0").then(t)}},{path:"/projects/21a0e3/index.html",redirect:"/projects/21a0e3/"},{path:"/04.项目/01.用户中心系统/13.请求响应处理器（前端）.html",redirect:"/projects/21a0e3/"},{name:"v-aea27dee",path:"/projects/042bc4/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-aea27dee").then(t)}},{path:"/projects/042bc4/index.html",redirect:"/projects/042bc4/"},{path:"/04.项目/01.用户中心系统/12.异常处理器（后端优化）.html",redirect:"/projects/042bc4/"},{name:"v-21868477",path:"/projects/272e22/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-21868477").then(t)}},{path:"/projects/272e22/index.html",redirect:"/projects/272e22/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/01.需求分析.html",redirect:"/projects/272e22/"},{name:"v-43d01a18",path:"/projects/38148f/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-43d01a18").then(t)}},{path:"/projects/38148f/index.html",redirect:"/projects/38148f/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/03.接入deepseek.html",redirect:"/projects/38148f/"},{name:"v-2338f61b",path:"/projects/42cbd8/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-2338f61b").then(t)}},{path:"/projects/42cbd8/index.html",redirect:"/projects/42cbd8/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/02.首页&聊天页开发.html",redirect:"/projects/42cbd8/"},{name:"v-2e2102c7",path:"/projects/55f22c/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-2e2102c7").then(t)}},{path:"/projects/55f22c/index.html",redirect:"/projects/55f22c/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/04.数据库搭建.html",redirect:"/projects/55f22c/"},{name:"v-735b8498",path:"/projects/97c25a/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-735b8498").then(t)}},{path:"/projects/97c25a/index.html",redirect:"/projects/97c25a/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/06.登陆系统-clerk.html",redirect:"/projects/97c25a/"},{name:"v-3dffb064",path:"/projects/482be9/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-3dffb064").then(t)}},{path:"/projects/482be9/index.html",redirect:"/projects/482be9/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/05.首页完善（前端）.html",redirect:"/projects/482be9/"},{name:"v-4327e1bc",path:"/projects/8bb9c5/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-4327e1bc").then(t)}},{path:"/projects/8bb9c5/index.html",redirect:"/projects/8bb9c5/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/07.首页完善（后端）.html",redirect:"/projects/8bb9c5/"},{name:"v-57ae1201",path:"/projects/b6c8ea/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-57ae1201").then(t)}},{path:"/projects/b6c8ea/index.html",redirect:"/projects/b6c8ea/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/08.保留上下文对话.html",redirect:"/projects/b6c8ea/"},{name:"v-75275396",path:"/projects/0d846d/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-75275396").then(t)}},{path:"/projects/0d846d/index.html",redirect:"/projects/0d846d/"},{path:"/04.项目/02.仿Deepseek官网AI聊天网站/09.第一次对话完善.html",redirect:"/projects/0d846d/"},{name:"v-1087fa54",path:"/projects/8113ff/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-1087fa54").then(t)}},{path:"/projects/8113ff/index.html",redirect:"/projects/8113ff/"},{path:"/04.项目/03.尤克里里音月-Flutter（需求分析阶段）/01.尤克里里音月.html",redirect:"/projects/8113ff/"},{name:"v-7c6d73aa",path:"/frontend/791d80/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-7c6d73aa").then(t)}},{path:"/frontend/791d80/index.html",redirect:"/frontend/791d80/"},{path:"/05.前端/01.Vuepress/01.博客建设记录.html",redirect:"/frontend/791d80/"},{name:"v-07e08c87",path:"/frontend/643c6f/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-07e08c87").then(t)}},{path:"/frontend/643c6f/index.html",redirect:"/frontend/643c6f/"},{path:"/05.前端/01.Vuepress/03.首页优化.html",redirect:"/frontend/643c6f/"},{name:"v-9a72da8c",path:"/frontend/1e42d2/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-9a72da8c").then(t)}},{path:"/frontend/1e42d2/index.html",redirect:"/frontend/1e42d2/"},{path:"/05.前端/01.Vuepress/02.vuepress添加百度统计记录访客量.html",redirect:"/frontend/1e42d2/"},{name:"v-6b548583",path:"/frontend/a7583a/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-6b548583").then(t)}},{path:"/frontend/a7583a/index.html",redirect:"/frontend/a7583a/"},{path:"/05.前端/01.Vuepress/04.购买了域名.html",redirect:"/frontend/a7583a/"},{name:"v-460bb69d",path:"/frontend/13ea93/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-460bb69d").then(t)}},{path:"/frontend/13ea93/index.html",redirect:"/frontend/13ea93/"},{path:"/05.前端/02.前端基础/01.HTML基础.html",redirect:"/frontend/13ea93/"},{name:"v-31a2cd79",path:"/frontend/a85fdc/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-31a2cd79").then(t)}},{path:"/frontend/a85fdc/index.html",redirect:"/frontend/a85fdc/"},{path:"/05.前端/02.前端基础/02.CSS基础.html",redirect:"/frontend/a85fdc/"},{name:"v-d13ad246",path:"/frontend/f4d1ca/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-d13ad246").then(t)}},{path:"/frontend/f4d1ca/index.html",redirect:"/frontend/f4d1ca/"},{path:"/05.前端/02.前端基础/03.JavaScript基础.html",redirect:"/frontend/f4d1ca/"},{name:"v-38b3b8e6",path:"/pages/306fc0/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-38b3b8e6").then(t)}},{path:"/pages/306fc0/index.html",redirect:"/pages/306fc0/"},{path:"/05.前端/03.Vue/01.组合式api&选项式api.html",redirect:"/pages/306fc0/"},{name:"v-8e22d07c",path:"/backend/e7f78e/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-8e22d07c").then(t)}},{path:"/backend/e7f78e/index.html",redirect:"/backend/e7f78e/"},{path:"/06.后端/01.后端基础/01.后端基础.html",redirect:"/backend/e7f78e/"},{name:"v-356004a8",path:"/frontend/917b7b/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-356004a8").then(t)}},{path:"/frontend/917b7b/index.html",redirect:"/frontend/917b7b/"},{path:"/05.前端/02.前端基础/05.过渡.html",redirect:"/frontend/917b7b/"},{name:"v-f606a082",path:"/backend/55d0d1/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-f606a082").then(t)}},{path:"/backend/55d0d1/index.html",redirect:"/backend/55d0d1/"},{path:"/06.后端/01.后端基础/02.后端的四层架构.html",redirect:"/backend/55d0d1/"},{name:"v-b764e084",path:"/backend/e63710/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-b764e084").then(t)}},{path:"/backend/e63710/index.html",redirect:"/backend/e63710/"},{path:"/06.后端/01.后端基础/03.Spring Boot和Spring、MyBatis.html",redirect:"/backend/e63710/"},{name:"v-135c0e9c",path:"/frontend/cb876d/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-135c0e9c").then(t)}},{path:"/frontend/cb876d/index.html",redirect:"/frontend/cb876d/"},{path:"/05.前端/02.前端基础/04.前端是什么.html",redirect:"/frontend/cb876d/"},{name:"v-4b727136",path:"/backend/970703/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-4b727136").then(t)}},{path:"/backend/970703/index.html",redirect:"/backend/970703/"},{path:"/06.后端/01.后端基础/04.cookie是什么.html",redirect:"/backend/970703/"},{name:"v-1b3a7299",path:"/frontend/5af018/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-1b3a7299").then(t)}},{path:"/frontend/5af018/index.html",redirect:"/frontend/5af018/"},{path:"/05.前端/02.前端基础/06.前端开发笔试练习.html",redirect:"/frontend/5af018/"},{name:"v-ec9ecf1c",path:"/science/1157cf/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-ec9ecf1c").then(t)}},{path:"/science/1157cf/index.html",redirect:"/science/1157cf/"},{path:"/07.科学/01.网络科学/01.随机游走.html",redirect:"/science/1157cf/"},{name:"v-56f6029c",path:"/more/43561f/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-56f6029c").then(t)}},{path:"/more/43561f/index.html",redirect:"/more/43561f/"},{path:"/08.更多/01.素材网站.html",redirect:"/more/43561f/"},{name:"v-59c7b2f8",path:"/about/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-59c7b2f8").then(t)}},{path:"/about/index.html",redirect:"/about/"},{path:"/09.关于/01.关于.html",redirect:"/about/"},{name:"v-089d559a",path:"/more/friend/8e1a3d/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-089d559a").then(t)}},{path:"/more/friend/8e1a3d/index.html",redirect:"/more/friend/8e1a3d/"},{path:"/08.更多/99.友情链接.html",redirect:"/more/friend/8e1a3d/"},{name:"v-33f3a64c",path:"/categories/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-33f3a64c").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-0c95180c",path:"/archives/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-0c95180c").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-ab5dc30c",path:"/tags/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-ab5dc30c").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-69d810e6",path:"/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-69d810e6").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-9632e184",path:"/pages/d30ed8/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-9632e184").then(t)}},{path:"/pages/d30ed8/index.html",redirect:"/pages/d30ed8/"},{path:"/07.科学/01.网络科学/02.Infomap算法.html",redirect:"/pages/d30ed8/"},{name:"v-6085ef4c",path:"/science/6350d5/",component:ll,beforeEnter:(n,e,t)=>{pa("Layout","v-6085ef4c").then(t)}},{path:"/science/6350d5/index.html",redirect:"/science/6350d5/"},{path:"/07.科学/01.网络科学/03.论文阅读-1.html",redirect:"/science/6350d5/"},{path:"*",component:ll}],ul={title:"",description:"",base:"/",headTags:[["meta",{name:"baidu-site-verification",content:"codeva-nRPVSlBgY1"}]],pages:[{title:"随意写写",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"01.随笔",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/speak_tucao.png",description:null}},title:"随意写写",date:"2022-09-15T15:40:00.000Z",permalink:"/speak",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/01.%E9%9A%8F%E7%AC%94.html",relativePath:"00.目录页/00.导航栏-目录页/01.随笔.md",key:"v-68444258",path:"/speak/",lastUpdated:"2025/3/6 03:12:58",lastUpdatedTimestamp:1741201978e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"工具 - 工欲善其事必先利其器",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"02.工具",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/tools.png",description:"一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的特殊软件"}},title:"工具 - 工欲善其事必先利其器",date:"2022-06-08T14:32:32.000Z",permalink:"/tools/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/02.%E5%B7%A5%E5%85%B7.html",relativePath:"00.目录页/00.导航栏-目录页/02.工具.md",key:"v-a934dd4e",path:"/tools/",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"一些值得看看的内容",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"03.读吧",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/read.png",description:"读书笔记，书籍推荐"}},title:"一些值得看看的内容",date:"2022-06-06T15:40:00.000Z",permalink:"/read",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/03.%E8%AF%BB%E5%90%A7.html",relativePath:"00.目录页/00.导航栏-目录页/03.读吧.md",key:"v-5f672fab",path:"/read/",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"项目",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"04.项目",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/app.png",description:"个人项目分享"}},title:"项目",date:"2022-06-09T15:40:00.000Z",permalink:"/projects/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/04.%E9%A1%B9%E7%9B%AE.html",relativePath:"00.目录页/00.导航栏-目录页/04.项目.md",key:"v-51619d43",path:"/projects/",lastUpdated:"2025/3/18 10:02:44",lastUpdatedTimestamp:1742263364e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"前端",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"05.前端",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/frontend.png",description:"前端开发是将设计转化为用户可以直接在浏览器中交互的界面，注重用户体验和视觉效果，让网站或应用具有良好的操作性和美观性的技术。"}},title:"前端",date:"2025-03-06T03:27:27.000Z",permalink:"/frontend/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/05.%E5%89%8D%E7%AB%AF.html",relativePath:"00.目录页/00.导航栏-目录页/05.前端.md",key:"v-13760227",path:"/frontend/",lastUpdated:"2025/3/18 10:02:44",lastUpdatedTimestamp:1742263364e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"后端",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"06.后端",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/backend.png",description:"后端开发是构建和维护服务器端应用程序的过程，主要涉及业务逻辑处理、数据存储与管理、为前端提供接口设计以及与外部系统的交互，是整个应用的“大脑”和“中枢”。"}},title:"后端",date:"2025-03-18T09:39:30.000Z",permalink:"/backend/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/06.%E5%90%8E%E7%AB%AF.html",relativePath:"00.目录页/00.导航栏-目录页/06.后端.md",key:"v-453f90d1",path:"/backend/",lastUpdated:"2025/3/18 10:02:44",lastUpdatedTimestamp:1742263364e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"科学",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"07.科学",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/science.png",description:"分享探索科学的神奇和美好~"}},title:"科学",date:"2025-03-20T21:02:03.000Z",permalink:"/science/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/07.%E7%A7%91%E5%AD%A6.html",relativePath:"00.目录页/00.导航栏-目录页/07.科学.md",key:"v-784e7a47",path:"/science/",lastUpdated:"2025/3/25 10:21:04",lastUpdatedTimestamp:1742869264e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"更多",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"08.更多",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/more.png",description:"其他内容，待更新"}},title:"更多",date:"2022-06-27T11:44:08.000Z",permalink:"/more/",sidebar:!1,article:!1,comment:!1,editLink:!1,readingShow:"top"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.%E5%AF%BC%E8%88%AA%E6%A0%8F-%E7%9B%AE%E5%BD%95%E9%A1%B5/08.%E6%9B%B4%E5%A4%9A.html",relativePath:"00.目录页/00.导航栏-目录页/08.更多.md",key:"v-0dd2f68a",path:"/more/",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"爱在我和离开我的人之间流动",frontmatter:{title:"爱在我和离开我的人之间流动",date:"2025-02-16T00:36:36.000Z",permalink:"/speak/0cfc6a/",categories:["随笔",2025],tags:["爱","生命教育"],readingShow:"top"},regularPath:"/01.%E9%9A%8F%E7%AC%94/01.2025/01.%E7%88%B1%E5%9C%A8%E6%88%91%E5%92%8C%E7%A6%BB%E5%BC%80%E6%88%91%E7%9A%84%E4%BA%BA%E4%B9%8B%E9%97%B4%E6%B5%81%E5%8A%A8.html",relativePath:"01.随笔/01.2025/01.爱在我和离开我的人之间流动.md",key:"v-ee189738",path:"/speak/0cfc6a/",excerpt:'<h1 id="爱在我和离开我的人之间流动"><a class="header-anchor" href="#爱在我和离开我的人之间流动">#</a> 爱在我和离开我的人之间流动</h1>\n<p>一段跨越了几年的爱和生命体验</p>\n',lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:null,content:"# 爱在我和离开我的人之间流动\n\n一段跨越了几年的爱和生命体验\n\n小时候在外婆外公住了几年，我在老家县城上学，父母不在身边。长大一些了，我和父母到了城市里，寒暑假还是会到外婆外公家住。\n\n我的外公会毛笔，会象棋，会骑自行车。假期里我和表哥有段时间就在写字，画毛笔画，唯一记得的是画梅花，黑色的颜料是画树枝，红色的颜料画梅花\n\n有一年听说他生病了，是老年痴呆，现在会把它叫做阿尔兹海默症。那时我还是小学五六年级，他有些叫不住我的名，不过生活和平时还是相似\n\n有一次六年级的暑假，我和堂哥在老家去参加课外班，回家的时候自行车链条坏了，天空从有夕阳一直到完全变黑，堂哥的修好了，我的很久都没修好，我们安排我堂哥先回去，他们可能担心了，我弄好就回来\n\n我修好回来，进门的时候，外婆和堂哥说外公出去找我了，我舅舅在找外公。堂哥是有先回来的，不知道为何外公还是出去了\n\n过了半个小时，外公回来见到我，表情很凶，情绪激动的举起手，一边要骂我，用手拍我\n\n舅舅过一会也来了，情绪也很激动，骂我为什么要让外公出去，你不知道外公的身体状况吗？！\n\n我觉得委屈，我也遇到了困难，也有考虑他们的担心啊。之后过年看到舅舅的时候时常会想起这件事情\n\n这三四年，有似乎有空就会回到老家县城，和外公外婆一起住，我的外公有一次和我一起，他想骑车，我说不要吧，他和正常状况似乎没区别，说没问题。我看着他一只脚踩着踏板，一只脚蹬地向前助推，似乎就要上车了，但他摔倒了。\n\n我看到他的表情没有惊讶，也没有多的表情，我把他扶起来，他起身，我们推着车走了回去。\n\n那次我记得还是被说了，为什么要外公骑车。\n\n之后的外公，从叫不住我的名字，到结结巴巴，叫错人后自己纠正，最后已经认不出我了。最后见到他是听说他在家自己摔了一跤，头摔破了住院，几天后好了。\n\n我那时和妈妈回去，见到他，他用着类似登山杖的拐杖，面容乐乐呵呵的\n\n最后一次见他，是摔跤后的不久听说他昏迷了。我去到医院，大家和他说女儿和外孙来了。我看到和听到大家说他的心电图有瞬间的变化。\n\n外公没有醒，我们在医院和外公在一起了一两天又回去了，直到我考完中考，听说外公不在了。我见到他是在他们生活过的农村的房子里。\n\n那天是送他离开，在农村里，穿着特别的衣服。他躺在带有轮子的床上，我想以后见不到他了，在他的身旁和他相处到了最后一刻。\n\n外公离开的头几年，过年见到外婆，她很难过的哭。大孙子安慰她，但她还是很难过吧\n\n自从送走外公以后，我都没有太想起他。这是我第一次接受亲人的离开。直到多年以后，我从参加完中考变成了大学将近毕业，一个朋友和我分享了ta的快乐和悲伤，提到了ta的家庭和ta的外公。\n\n我开始经常回忆起来，发现这段故事对我此时此刻有了很大的意义\n\n自己在父母的安排下，陪伴着外公走完了他此生的最后几年\n\n> 《别时礼》“每一个已知必死的人，能留给所有所爱之人的最好的礼物，就是自己与死亡的和解。”\n> \n> 我是一个34岁的妈妈，癌症晚期，可以给5岁的女儿留下些什么有意义的东西? - 知乎\n\n不知道他有没有自己生病了的意识，外公没有表现出为自己的病感到悲伤和难过，我记得他的面容到昏迷之前都是乐乐呵呵的样子。\n\n我还没完全懂这段故事的意义，在这两年慢慢的回忆起他，我发现自己对爱的体会又多了一些。希望之后的我能够为外婆，记录一份属于她的传记。\n\n文字写于：广东",normalizedContent:"# 爱在我和离开我的人之间流动\n\n一段跨越了几年的爱和生命体验\n\n小时候在外婆外公住了几年，我在老家县城上学，父母不在身边。长大一些了，我和父母到了城市里，寒暑假还是会到外婆外公家住。\n\n我的外公会毛笔，会象棋，会骑自行车。假期里我和表哥有段时间就在写字，画毛笔画，唯一记得的是画梅花，黑色的颜料是画树枝，红色的颜料画梅花\n\n有一年听说他生病了，是老年痴呆，现在会把它叫做阿尔兹海默症。那时我还是小学五六年级，他有些叫不住我的名，不过生活和平时还是相似\n\n有一次六年级的暑假，我和堂哥在老家去参加课外班，回家的时候自行车链条坏了，天空从有夕阳一直到完全变黑，堂哥的修好了，我的很久都没修好，我们安排我堂哥先回去，他们可能担心了，我弄好就回来\n\n我修好回来，进门的时候，外婆和堂哥说外公出去找我了，我舅舅在找外公。堂哥是有先回来的，不知道为何外公还是出去了\n\n过了半个小时，外公回来见到我，表情很凶，情绪激动的举起手，一边要骂我，用手拍我\n\n舅舅过一会也来了，情绪也很激动，骂我为什么要让外公出去，你不知道外公的身体状况吗？！\n\n我觉得委屈，我也遇到了困难，也有考虑他们的担心啊。之后过年看到舅舅的时候时常会想起这件事情\n\n这三四年，有似乎有空就会回到老家县城，和外公外婆一起住，我的外公有一次和我一起，他想骑车，我说不要吧，他和正常状况似乎没区别，说没问题。我看着他一只脚踩着踏板，一只脚蹬地向前助推，似乎就要上车了，但他摔倒了。\n\n我看到他的表情没有惊讶，也没有多的表情，我把他扶起来，他起身，我们推着车走了回去。\n\n那次我记得还是被说了，为什么要外公骑车。\n\n之后的外公，从叫不住我的名字，到结结巴巴，叫错人后自己纠正，最后已经认不出我了。最后见到他是听说他在家自己摔了一跤，头摔破了住院，几天后好了。\n\n我那时和妈妈回去，见到他，他用着类似登山杖的拐杖，面容乐乐呵呵的\n\n最后一次见他，是摔跤后的不久听说他昏迷了。我去到医院，大家和他说女儿和外孙来了。我看到和听到大家说他的心电图有瞬间的变化。\n\n外公没有醒，我们在医院和外公在一起了一两天又回去了，直到我考完中考，听说外公不在了。我见到他是在他们生活过的农村的房子里。\n\n那天是送他离开，在农村里，穿着特别的衣服。他躺在带有轮子的床上，我想以后见不到他了，在他的身旁和他相处到了最后一刻。\n\n外公离开的头几年，过年见到外婆，她很难过的哭。大孙子安慰她，但她还是很难过吧\n\n自从送走外公以后，我都没有太想起他。这是我第一次接受亲人的离开。直到多年以后，我从参加完中考变成了大学将近毕业，一个朋友和我分享了ta的快乐和悲伤，提到了ta的家庭和ta的外公。\n\n我开始经常回忆起来，发现这段故事对我此时此刻有了很大的意义\n\n自己在父母的安排下，陪伴着外公走完了他此生的最后几年\n\n> 《别时礼》“每一个已知必死的人，能留给所有所爱之人的最好的礼物，就是自己与死亡的和解。”\n> \n> 我是一个34岁的妈妈，癌症晚期，可以给5岁的女儿留下些什么有意义的东西? - 知乎\n\n不知道他有没有自己生病了的意识，外公没有表现出为自己的病感到悲伤和难过，我记得他的面容到昏迷之前都是乐乐呵呵的样子。\n\n我还没完全懂这段故事的意义，在这两年慢慢的回忆起他，我发现自己对爱的体会又多了一些。希望之后的我能够为外婆，记录一份属于她的传记。\n\n文字写于：广东",charsets:{cjk:!0}},{title:"闭门造车",frontmatter:{title:"闭门造车",date:"2025-03-14T18:17:07.000Z",permalink:"/speak/e7004c/",categories:["随笔",2025],tags:["找工作"],readingShow:"top"},regularPath:"/01.%E9%9A%8F%E7%AC%94/01.2025/03.%E9%97%AD%E9%97%A8%E9%80%A0%E8%BD%A6.html",relativePath:"01.随笔/01.2025/03.闭门造车.md",key:"v-918d5c8e",path:"/speak/e7004c/",excerpt:"<p>找工作中...后续去了招聘会学习</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:null,content:"找工作中...后续去了招聘会学习\n\n\n# 闭门造车\n\n昨天吃法时听到妈妈聊自己的工作\n\n刚开始换了很多份，最后回到老家稳定了几年\n\n之后来到gz，十几年没有上过班了\n\n我从考研到现在找工作似乎就是在闭门造车\n\n责怪他人是不会改善自己的生活现状的\n\n要往两方面努力\n\n一是化解自己的贪欲，名欲。不要弄的自己变成为满足自己的欲望什么都做得出来的人，你并不需要那么多的欲望才能活下去，你并不需要那么多的钱，那么多的名，那么多的人为你崇拜你（坦白讲，崇拜是离理解最遥远的距离）才能活得快乐。\n\n二是做自己的父母，在安全的情况下冒风险，让自己拥有勇气。\n\n----------------------------------------\n\n3/30\n\n后续去了招聘会，人山人海~\n\n文字写于：广东",normalizedContent:"找工作中...后续去了招聘会学习\n\n\n# 闭门造车\n\n昨天吃法时听到妈妈聊自己的工作\n\n刚开始换了很多份，最后回到老家稳定了几年\n\n之后来到gz，十几年没有上过班了\n\n我从考研到现在找工作似乎就是在闭门造车\n\n责怪他人是不会改善自己的生活现状的\n\n要往两方面努力\n\n一是化解自己的贪欲，名欲。不要弄的自己变成为满足自己的欲望什么都做得出来的人，你并不需要那么多的欲望才能活下去，你并不需要那么多的钱，那么多的名，那么多的人为你崇拜你（坦白讲，崇拜是离理解最遥远的距离）才能活得快乐。\n\n二是做自己的父母，在安全的情况下冒风险，让自己拥有勇气。\n\n----------------------------------------\n\n3/30\n\n后续去了招聘会，人山人海~\n\n文字写于：广东",charsets:{cjk:!0}},{title:"发了消息没有得到回复",frontmatter:{title:"发了消息没有得到回复",date:"2025-03-05T19:13:32.000Z",permalink:"/speak/abe993/",categories:["随笔",2025],tags:["补强"],readingShow:"top"},regularPath:"/01.%E9%9A%8F%E7%AC%94/01.2025/02.%E5%8F%91%E4%BA%86%E6%B6%88%E6%81%AF%E6%B2%A1%E6%9C%89%E5%BE%97%E5%88%B0%E5%9B%9E%E5%A4%8D.html",relativePath:"01.随笔/01.2025/02.发了消息没有得到回复.md",key:"v-4021e81f",path:"/speak/abe993/",excerpt:"<p>没有收到回复时，我选择补强</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:null,content:"没有收到回复时，我选择补强\n\n\n# 发了消息没有得到回复\n\n发消息没得到回复的感悟是从具体的一件事情里感受到的，写作能力受限，写出来后感觉比较冗余，想写的简短有力些。\n\n因为要走一个流程，对方作为间接利益相关告知了我流程卡在了一个地方。发消息给对方，对方一个小时未回，两个小时未回，到一天未回，我在想，这是不是在给自己什么信号？自己的情绪因此而焦虑。带着忐忑的心情度过了两个小时，但我知道这是他人的自由，我只做了等待。\n\n消息是我发给对方，我能不能不那么急切，使我自己能从其他人那里也得到答案呢？这样我就不会太记挂于对方没有回复我这件事。\n\n>  1. 破除“绝对安全观”： 不要认为“必须立即得到回复”是理所当然的。他人可能有各种原因无法及时回复，这并不代表你被忽视或不重要。\n>  2. 建立与自然（规律）的良好关系： 将注意力从人际关系转移到自身能力的提升上。学习一项技能，并不断精进，让自己成为一个有价值的人。\n> \n> 怎么培养安全感？ - 知乎\n\n当晚我和要找的消息源直接邮件联系了，回去之后开始继续建设博客。第二天很早就收到了邮件回复，以及下一步的流程。流程很顺利就走完了。\n\n这零散的记忆和零散的事情，其实难以总结一些逻辑关联很强的结论，也可能是我能力有限。我试着总结一下，对方的消息不回复是正常的，群聊、微信私信不回应该都默认是正常的。在这期间，自己感受到消耗，要做的不该是继续叩对方的门，而是去劳动。自己与大自然的关系是第一位的，即使有谁没能联系上，自己也能通过劳动获得安宁。而且投入到一件事情中，自己自然不会分神。\n\n这是一次补强的实操，第二天我流程走完，直接告知了对方并感谢对方的提醒，对方过一会回复好的，并对昨天的未回消息做了简短回复。我再回应了对方一个表示友善的消息。\n\n文字写于：广东",normalizedContent:"没有收到回复时，我选择补强\n\n\n# 发了消息没有得到回复\n\n发消息没得到回复的感悟是从具体的一件事情里感受到的，写作能力受限，写出来后感觉比较冗余，想写的简短有力些。\n\n因为要走一个流程，对方作为间接利益相关告知了我流程卡在了一个地方。发消息给对方，对方一个小时未回，两个小时未回，到一天未回，我在想，这是不是在给自己什么信号？自己的情绪因此而焦虑。带着忐忑的心情度过了两个小时，但我知道这是他人的自由，我只做了等待。\n\n消息是我发给对方，我能不能不那么急切，使我自己能从其他人那里也得到答案呢？这样我就不会太记挂于对方没有回复我这件事。\n\n>  1. 破除“绝对安全观”： 不要认为“必须立即得到回复”是理所当然的。他人可能有各种原因无法及时回复，这并不代表你被忽视或不重要。\n>  2. 建立与自然（规律）的良好关系： 将注意力从人际关系转移到自身能力的提升上。学习一项技能，并不断精进，让自己成为一个有价值的人。\n> \n> 怎么培养安全感？ - 知乎\n\n当晚我和要找的消息源直接邮件联系了，回去之后开始继续建设博客。第二天很早就收到了邮件回复，以及下一步的流程。流程很顺利就走完了。\n\n这零散的记忆和零散的事情，其实难以总结一些逻辑关联很强的结论，也可能是我能力有限。我试着总结一下，对方的消息不回复是正常的，群聊、微信私信不回应该都默认是正常的。在这期间，自己感受到消耗，要做的不该是继续叩对方的门，而是去劳动。自己与大自然的关系是第一位的，即使有谁没能联系上，自己也能通过劳动获得安宁。而且投入到一件事情中，自己自然不会分神。\n\n这是一次补强的实操，第二天我流程走完，直接告知了对方并感谢对方的提醒，对方过一会回复好的，并对昨天的未回消息做了简短回复。我再回应了对方一个表示友善的消息。\n\n文字写于：广东",charsets:{cjk:!0}},{title:"学习如何不带要求的请求（祈祷）",frontmatter:{title:"学习如何不带要求的请求（祈祷）",date:"2025-04-05T23:46:27.000Z",permalink:"/speak/d49cd9/",categories:["随笔",2025],tags:[null],readingShow:"top"},regularPath:"/01.%E9%9A%8F%E7%AC%94/01.2025/04.%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E4%B8%8D%E5%B8%A6%E8%A6%81%E6%B1%82%E7%9A%84%E8%AF%B7%E6%B1%82%EF%BC%88%E7%A5%88%E7%A5%B7%EF%BC%89.html",relativePath:"01.随笔/01.2025/04.学习如何不带要求的请求（祈祷）.md",key:"v-23bbfdfe",path:"/speak/d49cd9/",headers:[{level:2,title:"困扰",slug:"困扰",normalizedTitle:"困扰",charIndex:42},{level:2,title:"行动",slug:"行动",normalizedTitle:"行动",charIndex:538},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:2021}],excerpt:'<h1 id="_04-学习如何不带要求的请求-祈祷"><a class="header-anchor" href="#_04-学习如何不带要求的请求-祈祷">#</a> 04.学习如何不带要求的请求（祈祷）</h1>\n<p>把慌乱写进文字，把祈祷练成习惯</p>\n',lastUpdated:"2025/4/22 03:10:53",lastUpdatedTimestamp:1745262653e3,headersStr:"困扰 行动 总结",content:'# 04.学习如何不带要求的请求（祈祷）\n\n把慌乱写进文字，把祈祷练成习惯\n\n\n# 困扰\n\n从学校毕业了，上一周参加了一家国企的笔试，得到了参加面试的邀请，是投递简历以来收到的第一份面试邀请。自己预先没有对这家企业做功课。笔试考的是行测类型的题目，没想到自己顺利通过了。\n\n面试的时间就在不到十天后，邀请的邮件里只有时间和地点，没有面试的内容，自己有一种什么也不知道的感受。\n\n纠结了一会，发了微信给自己的辅导员老师。在毕业之前，我在辅导员老师的办公室做学生助理。\n\n“xx姐，我可以参加yy企业的面试了”\n\n很快收到了回复 “哇冲呀”\n\n自己带着很忐忑的心情接着打字“我们专业有没有在这家企业的师兄和师姐呀 对这家企业的工作内容和岗位待遇不了解 就做了笔试”\n\n然后老师停顿一会，回复“yy的我看一下”\n\n我回复“嗯嗯”结束\n\n-------------------------\n\n那时觉得自己需要做的是收集信息，于是在小红书上发了帖子，加到了群和同样参加了笔试、得到了面试邀请的应届生交流。这家企业官方的招聘信息写的很少，在群里得到的虽然信息不多，但也是了解了一些可能的面试内容。\n\n之后心情仍然觉得忐忑，对自己向老师提出的请求感到不安。自己为什么会觉得不安呢？\n\n\n# 行动\n\n我的分析可能是错的，但是在分析的时候自己从老师的回答里找到了增强自己信念的文章。\n\n在这次的国企笔试之前，我还参加了招聘会，一家老家的企业写的招聘要求和我的专业、学习的方向很合适。我和hr聊了聊。那家企业是经常和我的一个哥哥打交道的，我把这段经历分享给哥哥的长辈之后，那位长辈和我说：“让哥哥和他们聊一聊呀，刚好他们能够多认识你的哥哥，你也能够和你的哥哥一起在那个地方的附近工作”\n\n我开始想这是不是好的呢？找关系是正确的吗？我的家人也时常在我找工作期间跟我说找谁谁谁帮忙介绍工作，但我有些警惕。\n\n《找关系》“你要做的，是彻底的算清楚综合收益，也就是所有的成本，所有的风险和所有的期望收益。你最后会发现，是那些圣贤之言和这个综合收益相匹配，所以那些圣贤之言才被奉为道德，而不是相反。所以，你就好好计算清楚“找关系”的收益和成本就行了。”\n\n我没有对找关系本身感到绝对的抵触，但是对没有计算好的事情感到了警惕。我的家人不从事我的专业，对我的专业了解不多，他们说要找的那个关系，我并不认识。我以项目没做完，简历需要修改回复家人，没有联系那一个“关系"\n\n“你为啥要托关系找一个背8000责任、只能拿到4000，并且欠人一张“赏了你一个饭碗，你记住了”的道德支票的“机会”？踏踏实实，不侥幸，一身横练的功夫，不吃亏。”\n\n我还是希望自己能够靠着自己的表达能力和专业技能找到一份工作，在旷野里生存。至少如果第一份工作失去了，我也会安心一些，因为再复刻找到第一份工作的条件里不用包含“找关系”。\n\n在学校做学生助理的时间里感受到在办公室里，专业技能其实不是最主要的，老师会很愿意让我们帮忙，教我们修改文案、和其他学生沟通、教了我们送文件的流程等等。\n\n《平庸》 “其实这个世界对人的专业技能要求极低，远远低于对人的社会性功能的要求。有人看出你社会性功能上的优势，给你资源和机会，你不必老去担心你会在专业技能上不能胜任。”\n\n记得在学期末，辅导员老师问我\n\n“xxx，你有考试吗”\n\n我说“有，有一门。老师是有什么事情吗？”\n\n老师说“因为大家都准备期末考试了，需要复习的时间比较长。如果有年级大一些的助理空余时间比较多的话，可以让小的助理去复习，大的助理来值班。但是这样你也要备考，我就让另外的助理先来，下周就该复习就去复习，以期末考为主嘛”\n\n那时需要备考的那一门课程我平时有花时间在学习。所以有信心自己能够通过，就和老师说自己有空的。老师说“加油啊，有空你就来，办公室里没什么事你就复习”\n\n偶然读到了一片回答，是关于要求和请求\n\n《祈祷与祝福》“祈祷是一种不带要求的请求。是一种自知是错的、可以接受拒绝的、甚至可以接受处罚而不会有任何怨言的、觉得允许被说出来已经是恩德、被对方听到已经有亏欠的请求。”\n\n自己在和问老师的时候，当时的情绪很慌乱，只是抱着没有得到答案也没关系的底线。却不知道自己是在提出“错误的”请求，允许说出来被对方听到已是一种亏欠。自己没有经过“被允许”的这一过程，直接提出了。\n\n“祈祷是你爱一个人时唯一可行的请求方式。它不是什么值得夸耀的温柔，而是有所谓爱时必尽的义务。”\n\n“因此，祈祷的人可以安然的依赖这个逻辑，仅仅凭着祈祷的真诚性，就免除了那些怀疑带来的痛苦。ta们毫不费力的祝福了自己。”\n\n现在回想，老师在期末问我的时候或许是在讲一个没有带要求的请求。\n\n自己这一次问老师，则是带着对未来的不安和慌乱，没有得到允许，也没有觉得自己已经是亏欠了。\n\n在关系里自己亏欠了对方也许时常会有，但亏欠了对方而不自知是会影响关系的\n\n\n# 总结\n\n自己做了一次“错题”，这份错题不知道自己有没有做对，但自己花了时间，又收获到了文章的宝贵句子。带着自己的这份犯错的经历，在素问的故事里写写改改，学习祈祷\n\n文字写于：广东',normalizedContent:'# 04.学习如何不带要求的请求（祈祷）\n\n把慌乱写进文字，把祈祷练成习惯\n\n\n# 困扰\n\n从学校毕业了，上一周参加了一家国企的笔试，得到了参加面试的邀请，是投递简历以来收到的第一份面试邀请。自己预先没有对这家企业做功课。笔试考的是行测类型的题目，没想到自己顺利通过了。\n\n面试的时间就在不到十天后，邀请的邮件里只有时间和地点，没有面试的内容，自己有一种什么也不知道的感受。\n\n纠结了一会，发了微信给自己的辅导员老师。在毕业之前，我在辅导员老师的办公室做学生助理。\n\n“xx姐，我可以参加yy企业的面试了”\n\n很快收到了回复 “哇冲呀”\n\n自己带着很忐忑的心情接着打字“我们专业有没有在这家企业的师兄和师姐呀 对这家企业的工作内容和岗位待遇不了解 就做了笔试”\n\n然后老师停顿一会，回复“yy的我看一下”\n\n我回复“嗯嗯”结束\n\n-------------------------\n\n那时觉得自己需要做的是收集信息，于是在小红书上发了帖子，加到了群和同样参加了笔试、得到了面试邀请的应届生交流。这家企业官方的招聘信息写的很少，在群里得到的虽然信息不多，但也是了解了一些可能的面试内容。\n\n之后心情仍然觉得忐忑，对自己向老师提出的请求感到不安。自己为什么会觉得不安呢？\n\n\n# 行动\n\n我的分析可能是错的，但是在分析的时候自己从老师的回答里找到了增强自己信念的文章。\n\n在这次的国企笔试之前，我还参加了招聘会，一家老家的企业写的招聘要求和我的专业、学习的方向很合适。我和hr聊了聊。那家企业是经常和我的一个哥哥打交道的，我把这段经历分享给哥哥的长辈之后，那位长辈和我说：“让哥哥和他们聊一聊呀，刚好他们能够多认识你的哥哥，你也能够和你的哥哥一起在那个地方的附近工作”\n\n我开始想这是不是好的呢？找关系是正确的吗？我的家人也时常在我找工作期间跟我说找谁谁谁帮忙介绍工作，但我有些警惕。\n\n《找关系》“你要做的，是彻底的算清楚综合收益，也就是所有的成本，所有的风险和所有的期望收益。你最后会发现，是那些圣贤之言和这个综合收益相匹配，所以那些圣贤之言才被奉为道德，而不是相反。所以，你就好好计算清楚“找关系”的收益和成本就行了。”\n\n我没有对找关系本身感到绝对的抵触，但是对没有计算好的事情感到了警惕。我的家人不从事我的专业，对我的专业了解不多，他们说要找的那个关系，我并不认识。我以项目没做完，简历需要修改回复家人，没有联系那一个“关系"\n\n“你为啥要托关系找一个背8000责任、只能拿到4000，并且欠人一张“赏了你一个饭碗，你记住了”的道德支票的“机会”？踏踏实实，不侥幸，一身横练的功夫，不吃亏。”\n\n我还是希望自己能够靠着自己的表达能力和专业技能找到一份工作，在旷野里生存。至少如果第一份工作失去了，我也会安心一些，因为再复刻找到第一份工作的条件里不用包含“找关系”。\n\n在学校做学生助理的时间里感受到在办公室里，专业技能其实不是最主要的，老师会很愿意让我们帮忙，教我们修改文案、和其他学生沟通、教了我们送文件的流程等等。\n\n《平庸》 “其实这个世界对人的专业技能要求极低，远远低于对人的社会性功能的要求。有人看出你社会性功能上的优势，给你资源和机会，你不必老去担心你会在专业技能上不能胜任。”\n\n记得在学期末，辅导员老师问我\n\n“xxx，你有考试吗”\n\n我说“有，有一门。老师是有什么事情吗？”\n\n老师说“因为大家都准备期末考试了，需要复习的时间比较长。如果有年级大一些的助理空余时间比较多的话，可以让小的助理去复习，大的助理来值班。但是这样你也要备考，我就让另外的助理先来，下周就该复习就去复习，以期末考为主嘛”\n\n那时需要备考的那一门课程我平时有花时间在学习。所以有信心自己能够通过，就和老师说自己有空的。老师说“加油啊，有空你就来，办公室里没什么事你就复习”\n\n偶然读到了一片回答，是关于要求和请求\n\n《祈祷与祝福》“祈祷是一种不带要求的请求。是一种自知是错的、可以接受拒绝的、甚至可以接受处罚而不会有任何怨言的、觉得允许被说出来已经是恩德、被对方听到已经有亏欠的请求。”\n\n自己在和问老师的时候，当时的情绪很慌乱，只是抱着没有得到答案也没关系的底线。却不知道自己是在提出“错误的”请求，允许说出来被对方听到已是一种亏欠。自己没有经过“被允许”的这一过程，直接提出了。\n\n“祈祷是你爱一个人时唯一可行的请求方式。它不是什么值得夸耀的温柔，而是有所谓爱时必尽的义务。”\n\n“因此，祈祷的人可以安然的依赖这个逻辑，仅仅凭着祈祷的真诚性，就免除了那些怀疑带来的痛苦。ta们毫不费力的祝福了自己。”\n\n现在回想，老师在期末问我的时候或许是在讲一个没有带要求的请求。\n\n自己这一次问老师，则是带着对未来的不安和慌乱，没有得到允许，也没有觉得自己已经是亏欠了。\n\n在关系里自己亏欠了对方也许时常会有，但亏欠了对方而不自知是会影响关系的\n\n\n# 总结\n\n自己做了一次“错题”，这份错题不知道自己有没有做对，但自己花了时间，又收获到了文章的宝贵句子。带着自己的这份犯错的经历，在素问的故事里写写改改，学习祈祷\n\n文字写于：广东',charsets:{cjk:!0}},{title:"威慑教育-读书后的思考和笔记",frontmatter:{title:"威慑教育-读书后的思考和笔记",date:"2025-04-08T21:29:46.000Z",permalink:"/speak/33bb4e/",categories:["随笔",2025],tags:[null],readingShow:"top"},regularPath:"/01.%E9%9A%8F%E7%AC%94/01.2025/05.%E5%A8%81%E6%85%91%E6%95%99%E8%82%B2-%E8%AF%BB%E4%B9%A6%E5%90%8E%E7%9A%84%E6%80%9D%E8%80%83%E5%92%8C%E7%AC%94%E8%AE%B0.html",relativePath:"01.随笔/01.2025/05.威慑教育-读书后的思考和笔记.md",key:"v-51195d0a",path:"/speak/33bb4e/",headers:[{level:2,title:"拓展阅读",slug:"拓展阅读",normalizedTitle:"拓展阅读",charIndex:950}],excerpt:'<h1 id="_05-威慑教育-读书后的思考和笔记"><a class="header-anchor" href="#_05-威慑教育-读书后的思考和笔记">#</a> 05.威慑教育-读书后的思考和笔记</h1>\n<p>读到了一句话：<strong>”正常人不是放弃使用武力“</strong></p>\n',lastUpdated:"2025/4/22 03:10:53",lastUpdatedTimestamp:1745262653e3,headersStr:"拓展阅读",content:"# 05.威慑教育-读书后的思考和笔记\n\n读到了一句话：”正常人不是放弃使用武力“\n\n为什么和父母的争执，子女会以抗议、反对、甚至暴跳的形式，结果效果甚微？\n\n“为什么你每次要抗拒、反对什么，都需要用非常激烈的反应，而即使这么激烈，仍然没有效果？”\n\n> 其实这类反应激烈是因为没有受到良好的沟通教育。\n> \n> 这不是指没有受过良好的“苦口婆心”式的唠叨教育——这个教育当然受过，看也看会了；（都是为了你好）\n> \n> 也不是说没有受过良好的“苦苦哀求”式的乞讨教育——这个教育当然也受过，看也看会了；（求求你放过我）\n> \n> 而是没有受过良好的威慑教育，误以为威慑就是情绪绑架和伤害，是情绪恐怖主义。（我警告你，你要是这么做，我就打死你）\n\n----------------------------------------\n\n“倒不是说这是无效的，恐怖主义当然有一定的战术效果，往往令无力者获得一定的安慰，但是恐怖主义和真正的斗争、真正富有斗争艺术的威慑相比，实际上是非常低效和粗放的，有太多不必要的成本和意料外的副作用。”\n\n子女作为无力者，把房间门关好，用身体撞击对方能够有心理上的安慰。至少此时我仍然在为我自己而活着。\n\n“革命者不搞暗杀、绑架、恐怖活动，却可以让敌人心惊胆战，丧失勇气，士气涣散；而恐怖主义者却总是激怒敌人，给敌人极大的行动力，反而给自己招来惨烈的打击。”\n\n革命者不绑架\n\n我们党作为马克思主义政党，讲政治是突出的特点和优势。没有强有力的政治保证，党的团结统一就是一句空话。我国曾经有过政治挂帅、搞“阶级斗争为纲”的时期，那是错误的。但是，我们也不能说政治就不讲了、少讲了，共产党不讲政治还叫共产党吗？“纪纲一废，何事不生？”在这里，我要十分明确地说，政治纪律和政治规矩这根弦不能松，腐败问题是腐败问题，政治问题是政治问题，不能只讲腐败问题、不讲政治问题。干部在政治上出问题，对党的危害不亚于腐败问题，有的甚至比腐败问题更严重。在政治问题上，任何人同样不能越过红线，越过了就要严肃追究其政治责任。有些事情在政治上是绝不能做的，做了就要付出代价，谁都不能拿政治纪律和政治规矩当儿戏。\n\n《 在中共十八届四中全会第二次全体会议上的讲话》（2014年10月23日）\n\n\n# 拓展阅读\n\n周恩来怎样防止“红色恐怖”? 特科注重兵不血刃-中国质量新闻网\n\n文字写于：广东",normalizedContent:"# 05.威慑教育-读书后的思考和笔记\n\n读到了一句话：”正常人不是放弃使用武力“\n\n为什么和父母的争执，子女会以抗议、反对、甚至暴跳的形式，结果效果甚微？\n\n“为什么你每次要抗拒、反对什么，都需要用非常激烈的反应，而即使这么激烈，仍然没有效果？”\n\n> 其实这类反应激烈是因为没有受到良好的沟通教育。\n> \n> 这不是指没有受过良好的“苦口婆心”式的唠叨教育——这个教育当然受过，看也看会了；（都是为了你好）\n> \n> 也不是说没有受过良好的“苦苦哀求”式的乞讨教育——这个教育当然也受过，看也看会了；（求求你放过我）\n> \n> 而是没有受过良好的威慑教育，误以为威慑就是情绪绑架和伤害，是情绪恐怖主义。（我警告你，你要是这么做，我就打死你）\n\n----------------------------------------\n\n“倒不是说这是无效的，恐怖主义当然有一定的战术效果，往往令无力者获得一定的安慰，但是恐怖主义和真正的斗争、真正富有斗争艺术的威慑相比，实际上是非常低效和粗放的，有太多不必要的成本和意料外的副作用。”\n\n子女作为无力者，把房间门关好，用身体撞击对方能够有心理上的安慰。至少此时我仍然在为我自己而活着。\n\n“革命者不搞暗杀、绑架、恐怖活动，却可以让敌人心惊胆战，丧失勇气，士气涣散；而恐怖主义者却总是激怒敌人，给敌人极大的行动力，反而给自己招来惨烈的打击。”\n\n革命者不绑架\n\n我们党作为马克思主义政党，讲政治是突出的特点和优势。没有强有力的政治保证，党的团结统一就是一句空话。我国曾经有过政治挂帅、搞“阶级斗争为纲”的时期，那是错误的。但是，我们也不能说政治就不讲了、少讲了，共产党不讲政治还叫共产党吗？“纪纲一废，何事不生？”在这里，我要十分明确地说，政治纪律和政治规矩这根弦不能松，腐败问题是腐败问题，政治问题是政治问题，不能只讲腐败问题、不讲政治问题。干部在政治上出问题，对党的危害不亚于腐败问题，有的甚至比腐败问题更严重。在政治问题上，任何人同样不能越过红线，越过了就要严肃追究其政治责任。有些事情在政治上是绝不能做的，做了就要付出代价，谁都不能拿政治纪律和政治规矩当儿戏。\n\n《 在中共十八届四中全会第二次全体会议上的讲话》（2014年10月23日）\n\n\n# 拓展阅读\n\n周恩来怎样防止“红色恐怖”? 特科注重兵不血刃-中国质量新闻网\n\n文字写于：广东",charsets:{cjk:!0}},{title:"做计划",frontmatter:{title:"做计划",date:"2025-04-22T03:08:02.000Z",permalink:"/speak/f369be/",categories:["随笔",2025],tags:[null],readingShow:"top"},regularPath:"/01.%E9%9A%8F%E7%AC%94/01.2025/06.%E5%81%9A%E8%AE%A1%E5%88%92.html",relativePath:"01.随笔/01.2025/06.做计划.md",key:"v-6ff28506",path:"/speak/f369be/",excerpt:'<h1 id="_06-做计划"><a class="header-anchor" href="#_06-做计划">#</a> 06.做计划</h1>\n<p>需要有计划，做计划不是一步步的记录，而是经过<strong>大量的训练</strong>后铸造而成的SOP（标准执行作业程序 Standard Operating Procedure）</p>\n',lastUpdated:"2025/4/22 03:10:53",lastUpdatedTimestamp:1745262653e3,headersStr:null,content:"# 06.做计划\n\n需要有计划，做计划不是一步步的记录，而是经过大量的训练后铸造而成的SOP（标准执行作业程序 Standard Operating Procedure）\n\n像军队一样做大量的训练\n\n像实验室一样做精准到毫克级的程序\n\n训练到自己受干扰小\n\n文字写于：广东",normalizedContent:"# 06.做计划\n\n需要有计划，做计划不是一步步的记录，而是经过大量的训练后铸造而成的sop（标准执行作业程序 standard operating procedure）\n\n像军队一样做大量的训练\n\n像实验室一样做精准到毫克级的程序\n\n训练到自己受干扰小\n\n文字写于：广东",charsets:{cjk:!0}},{title:"基础乐理知识",frontmatter:{title:"基础乐理知识",date:"2025-04-17T01:09:20.000Z",permalink:"/read/f7013e/",categories:["读吧","阅读轨迹"],tags:["乐理知识"],readingShow:"top"},regularPath:"/03.%E8%AF%BB%E5%90%A7/01.%E9%98%85%E8%AF%BB%E8%BD%A8%E8%BF%B9/02.%E5%9F%BA%E7%A1%80%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86.html",relativePath:"03.读吧/01.阅读轨迹/02.基础乐理知识.md",key:"v-264a7893",path:"/read/f7013e/",headers:[{level:2,title:"七个基本音级",slug:"七个基本音级",normalizedTitle:"七个基本音级",charIndex:39},{level:2,title:"五线谱、六、四线谱",slug:"五线谱、六、四线谱",normalizedTitle:"五线谱、六、四线谱",charIndex:676}],excerpt:'<h1 id="_02-基础乐理知识"><a class="header-anchor" href="#_02-基础乐理知识">#</a> 02.基础乐理知识</h1>\n<p>想实现<strong>音准识别</strong>，先了解一下基础的<strong>乐理知识</strong>吧</p>\n',lastUpdated:"2025/4/23 07:40:40",lastUpdatedTimestamp:174536524e4,headersStr:"七个基本音级 五线谱、六、四线谱",content:"# 02.基础乐理知识\n\n想实现音准识别，先了解一下基础的乐理知识吧\n\n\n# 七个基本音级\n\n七个基本音级是我们平常接触到的do re mi fa sol la si\n\n对应关系：\n\n为什么是从C开始呢\n\n从C开始的一般是大调，就是do re mi fa sol la si -do\n\n\n\n音跟音之间的频率有间隔。（调式：在一个音阶中，音跟音之间的排列方式）\n\n\n\n全全半全全全半\n\n如果频率比一致，每组的音阶都会是do re mi fa sol la si -do\n\n假设从G出发，G后一个全音是A，A后一个全音是B，B后一个半音是C，C后一个全音是D，D后一个全音是E，E后一个全音是#F(升F)，升F后一个半音是G\n\n\n\n听起来也是do re mi fa sol la si -do\n\nD大调同理\n\n\n\nA小调，将367音的音阶向下调\n\n\n\n> 在巴洛克之前的时期，七个中古调式（Ionian Dorian Phrygian Lydian Mixolydian Aeolian Locrian ）中，用得最多的是Aeolian，也就是以ABCDEFG模式排列的音阶，把A作为主音。（也就是现在的A自然小调音阶）巴洛克时期向古典主义时期过度的时候，大调音阶和小调音阶逐渐占据主流，其他中古调式慢慢减少了使用。与此同时复调音乐慢慢向主调音乐过度，才慢慢流行在大调上写作，也就是以CDEFGAB模式排列的音阶，也叫Ionian调式。现代音乐的主源是德奥古典音乐,他们盛行大调,do为主音,排第一位。现代音乐中的音名按大调排列,所以以C自然大调\n\n\n# 五线谱、六、四线谱\n\n五线谱（Staff），是在五根等距离的平行横线上，标以不同时值的音符及其他记号来记载音乐的一种方法，是使用最普遍、最广泛的音乐记谱法。\n\n通过不同谱号和音符在谱表上所处的不同位置表示不同音的高低；采取不同形状的符号表示音的长短。\n\n五线谱中的五条线由下而上依次称为第一线、第二线、第三线、第四线和第五线。线与线之间的空隙叫作间，由下而上依次称为第一间、第二间、第三间和第四间。\n\n\n\n大约在16世纪末，能够对音乐进行完整记录的五线谱诞生了。五线谱传入中国，最早有文字记载的是1713年的《律吕正义》续编。\n\n六线谱是为吉他设计的记谱法，它的基本结构是由六根间隔相等的线组成，六根线分别代表吉他上的六根弦。\n\n尤克里里的记谱法和吉他是一个规则，是四线\n\n文字写于：广东",normalizedContent:"# 02.基础乐理知识\n\n想实现音准识别，先了解一下基础的乐理知识吧\n\n\n# 七个基本音级\n\n七个基本音级是我们平常接触到的do re mi fa sol la si\n\n对应关系：\n\n为什么是从c开始呢\n\n从c开始的一般是大调，就是do re mi fa sol la si -do\n\n\n\n音跟音之间的频率有间隔。（调式：在一个音阶中，音跟音之间的排列方式）\n\n\n\n全全半全全全半\n\n如果频率比一致，每组的音阶都会是do re mi fa sol la si -do\n\n假设从g出发，g后一个全音是a，a后一个全音是b，b后一个半音是c，c后一个全音是d，d后一个全音是e，e后一个全音是#f(升f)，升f后一个半音是g\n\n\n\n听起来也是do re mi fa sol la si -do\n\nd大调同理\n\n\n\na小调，将367音的音阶向下调\n\n\n\n> 在巴洛克之前的时期，七个中古调式（ionian dorian phrygian lydian mixolydian aeolian locrian ）中，用得最多的是aeolian，也就是以abcdefg模式排列的音阶，把a作为主音。（也就是现在的a自然小调音阶）巴洛克时期向古典主义时期过度的时候，大调音阶和小调音阶逐渐占据主流，其他中古调式慢慢减少了使用。与此同时复调音乐慢慢向主调音乐过度，才慢慢流行在大调上写作，也就是以cdefgab模式排列的音阶，也叫ionian调式。现代音乐的主源是德奥古典音乐,他们盛行大调,do为主音,排第一位。现代音乐中的音名按大调排列,所以以c自然大调\n\n\n# 五线谱、六、四线谱\n\n五线谱（staff），是在五根等距离的平行横线上，标以不同时值的音符及其他记号来记载音乐的一种方法，是使用最普遍、最广泛的音乐记谱法。\n\n通过不同谱号和音符在谱表上所处的不同位置表示不同音的高低；采取不同形状的符号表示音的长短。\n\n五线谱中的五条线由下而上依次称为第一线、第二线、第三线、第四线和第五线。线与线之间的空隙叫作间，由下而上依次称为第一间、第二间、第三间和第四间。\n\n\n\n大约在16世纪末，能够对音乐进行完整记录的五线谱诞生了。五线谱传入中国，最早有文字记载的是1713年的《律吕正义》续编。\n\n六线谱是为吉他设计的记谱法，它的基本结构是由六根间隔相等的线组成，六根线分别代表吉他上的六根弦。\n\n尤克里里的记谱法和吉他是一个规则，是四线\n\n文字写于：广东",charsets:{cjk:!0}},{title:"网络平台视频的编码压缩",frontmatter:{title:"网络平台视频的编码压缩",date:"2025-03-17T21:54:23.000Z",permalink:"/read/ab0020/",categories:["读吧","阅读轨迹"],tags:["视频编码"],readingShow:"top"},regularPath:"/03.%E8%AF%BB%E5%90%A7/01.%E9%98%85%E8%AF%BB%E8%BD%A8%E8%BF%B9/01.%E7%BD%91%E7%BB%9C%E5%B9%B3%E5%8F%B0%E8%A7%86%E9%A2%91%E7%9A%84%E7%BC%96%E7%A0%81%E5%8E%8B%E7%BC%A9.html",relativePath:"03.读吧/01.阅读轨迹/01.网络平台视频的编码压缩.md",key:"v-69353de6",path:"/read/ab0020/",excerpt:"<p>关于影视飓风视频提到的<strong>平台与画质压缩</strong></p>\n",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:null,content:"关于影视飓风视频提到的平台与画质压缩\n\n\n# 01.网络平台视频的编码压缩\n\n> 本文引用自：影视飓风视频引争议：平台画质标识的真相大揭秘 - 知乎\n\n假如一条视频的参数如下：\n\n分辨率：1920*1080，码率：1000kbps，帧率：30，时长：5s，封装：mp4\n\n这条视频是由一个150帧（帧率x时长=30x5=150帧），分辨率为1920*1080的连续图片通过编码技术，封装成一个0.625MB的mp4视频文件。\n\n这个视频文件如果想流畅在线播放，必须拥有一个不小于1M的独享带宽支持，即网速不低于0.625MB/s。\n\n这些编码技术能将巨大的视频文件压缩，以实现各平台间的流畅播放、下载与转发。\n\n如果你做过视频剪辑，在输出文件的时候，剪辑软件会提供不同的编码技术以及码率供你选择，码率越高，清晰度越高，导出的文件也会越大（当然，不会大于未编码的文件），最终上传到平台所占用的服务器空间、流畅播放所需的带宽以及流量成本就会越高。\n\n一般情况下，分辨率不变，如果降低了视频码率，改变了原有的编码标准，视频清晰度就会不如从前。\n\n单幅画面宽高不变的情况下，画面内的信息密度不同，画质也会不同，而所谓的信息密度，就是视频码率。视频码率越高，视频清晰度就越高。同样是1080p（画幅）的视频，不同的码率会出现不同的画质。\n\n但同样是1080P的视频，在移动端、PC端、电视大屏中的画质感受也有区别。移动端设备的屏幕小，能看到的细节少，超高清视频在移动端反而是过剩的产能。因此，有些视频平台会针对移动端用户提供低码率的视频，从而减少观看视频所消耗的流量。\n\n视频导出时参数已经固定，为什么清晰度还会变化？\n\n当创作者将视频上传至平台，观众可以看到好几种清晰度。在弱网环境中，平台会切给用户切换更低清晰度，保障视频的流畅播放。\n\n其实，并不是一个视频文件有多种清晰度选择，而是一个视频文件被平台编码成多个清晰度的文件，早期某些视频平台会为不同的观看终端转码视频，也是为了让用户弱网环境下看视频不卡顿。\n\n举个例子，平台上了一个新的电影，他要在PC端和移动端播放，这个电影提供了流畅、标清、高清、超清、蓝光五个清晰度给用户选择，那么这个电影就需要编码出来5个清晰度的和5个清晰度的mp4文件，加上源文件，相当于一个电影会存储11个文件。\n\n现在由于H5播放器的大量应用，flv文件用得也越来越少了，某些平台只提供mp4格式视频，就这样，一个电影依然需要至少存储6个文件才支撑5个清晰度的播放。\n\n大家在使用这些小运营商的网络时，可能会发现一个情况：很多时候在观看一些热门电影电视剧的时候，网络飞快一点都不带卡的，反而有些时候访问一些网页的时候，打开就没那么顺畅。这是因为，小运营商通常会缓存一些热门资源的文件，供用户快速下载访问。\n\n这个话题可以讲讲企业公益，视频平台是免费提供服务器存储大家的视频资源的，不过还没想好怎么写，先回到前端开发上吧\n\n文字写于：广东",normalizedContent:"关于影视飓风视频提到的平台与画质压缩\n\n\n# 01.网络平台视频的编码压缩\n\n> 本文引用自：影视飓风视频引争议：平台画质标识的真相大揭秘 - 知乎\n\n假如一条视频的参数如下：\n\n分辨率：1920*1080，码率：1000kbps，帧率：30，时长：5s，封装：mp4\n\n这条视频是由一个150帧（帧率x时长=30x5=150帧），分辨率为1920*1080的连续图片通过编码技术，封装成一个0.625mb的mp4视频文件。\n\n这个视频文件如果想流畅在线播放，必须拥有一个不小于1m的独享带宽支持，即网速不低于0.625mb/s。\n\n这些编码技术能将巨大的视频文件压缩，以实现各平台间的流畅播放、下载与转发。\n\n如果你做过视频剪辑，在输出文件的时候，剪辑软件会提供不同的编码技术以及码率供你选择，码率越高，清晰度越高，导出的文件也会越大（当然，不会大于未编码的文件），最终上传到平台所占用的服务器空间、流畅播放所需的带宽以及流量成本就会越高。\n\n一般情况下，分辨率不变，如果降低了视频码率，改变了原有的编码标准，视频清晰度就会不如从前。\n\n单幅画面宽高不变的情况下，画面内的信息密度不同，画质也会不同，而所谓的信息密度，就是视频码率。视频码率越高，视频清晰度就越高。同样是1080p（画幅）的视频，不同的码率会出现不同的画质。\n\n但同样是1080p的视频，在移动端、pc端、电视大屏中的画质感受也有区别。移动端设备的屏幕小，能看到的细节少，超高清视频在移动端反而是过剩的产能。因此，有些视频平台会针对移动端用户提供低码率的视频，从而减少观看视频所消耗的流量。\n\n视频导出时参数已经固定，为什么清晰度还会变化？\n\n当创作者将视频上传至平台，观众可以看到好几种清晰度。在弱网环境中，平台会切给用户切换更低清晰度，保障视频的流畅播放。\n\n其实，并不是一个视频文件有多种清晰度选择，而是一个视频文件被平台编码成多个清晰度的文件，早期某些视频平台会为不同的观看终端转码视频，也是为了让用户弱网环境下看视频不卡顿。\n\n举个例子，平台上了一个新的电影，他要在pc端和移动端播放，这个电影提供了流畅、标清、高清、超清、蓝光五个清晰度给用户选择，那么这个电影就需要编码出来5个清晰度的和5个清晰度的mp4文件，加上源文件，相当于一个电影会存储11个文件。\n\n现在由于h5播放器的大量应用，flv文件用得也越来越少了，某些平台只提供mp4格式视频，就这样，一个电影依然需要至少存储6个文件才支撑5个清晰度的播放。\n\n大家在使用这些小运营商的网络时，可能会发现一个情况：很多时候在观看一些热门电影电视剧的时候，网络飞快一点都不带卡的，反而有些时候访问一些网页的时候，打开就没那么顺畅。这是因为，小运营商通常会缓存一些热门资源的文件，供用户快速下载访问。\n\n这个话题可以讲讲企业公益，视频平台是免费提供服务器存储大家的视频资源的，不过还没想好怎么写，先回到前端开发上吧\n\n文字写于：广东",charsets:{cjk:!0}},{title:"前端初始化",frontmatter:{title:"前端初始化",date:"2025-03-06T14:31:04.000Z",permalink:"/projects/58146f/",categories:["项目","用户中心系统"],tags:["前端","Vue"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/01.%E5%89%8D%E7%AB%AF%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"04.项目/01.用户中心系统/01.前端初始化.md",key:"v-03cb5213",path:"/projects/58146f/",headers:[{level:2,title:"前端初始化",slug:"前端初始化-2",normalizedTitle:"前端初始化",charIndex:57},{level:2,title:"前端布局",slug:"前端布局",normalizedTitle:"前端布局",charIndex:131},{level:3,title:"根页面引用",slug:"根页面引用",normalizedTitle:"根页面引用",charIndex:379},{level:3,title:"上中下三栏",slug:"上中下三栏",normalizedTitle:"上中下三栏",charIndex:430},{level:3,title:"底部栏（下）",slug:"底部栏-下",normalizedTitle:"底部栏（下）",charIndex:469},{level:3,title:"内容栏（中）",slug:"内容栏-中",normalizedTitle:"内容栏（中）",charIndex:497},{level:4,title:"Router 路由",slug:"router-路由",normalizedTitle:"router 路由",charIndex:507},{level:3,title:"导航栏",slug:"导航栏",normalizedTitle:"导航栏",charIndex:21},{level:4,title:"点击菜单事件（click）",slug:"点击菜单事件-click",normalizedTitle:"点击菜单事件（click）",charIndex:1115},{level:2,title:"向后端发送请求",slug:"向后端发送请求",normalizedTitle:"向后端发送请求",charIndex:107},{level:3,title:"全局自定义请求",slug:"全局自定义请求",normalizedTitle:"全局自定义请求",charIndex:1899},{level:2,title:"待整理",slug:"待整理",normalizedTitle:"待整理",charIndex:2192},{level:3,title:"前端页面开发",slug:"前端页面开发",normalizedTitle:"前端页面开发",charIndex:2587},{level:4,title:"01.Homepage页",slug:"_01-homepage页",normalizedTitle:"01.homepage页",charIndex:2597},{level:4,title:"02.Login页",slug:"_02-login页",normalizedTitle:"02.login页",charIndex:2648},{level:2,title:"1.在md文件里直接写了",slug:"_1-在md文件里直接写了",normalizedTitle:"1.在md文件里直接写了",charIndex:2786},{level:2,title:"Debug",slug:"debug",normalizedTitle:"debug",charIndex:3473},{level:3,title:"进入首页会弹出报错",slug:"进入首页会弹出报错",normalizedTitle:"进入首页会弹出报错",charIndex:3483},{level:4,title:"服务端显示",slug:"服务端显示",normalizedTitle:"服务端显示",charIndex:4336},{level:2,title:"登录功能报错",slug:"登录功能报错",normalizedTitle:"登录功能报错",charIndex:4660}],excerpt:"<p>用户中心项目的前端开发，采用Vue3。编写<strong>导航栏</strong>、<strong>Router</strong>、<strong>发送请求</strong>。这是我的初级Vue项目 owo</p>\n",lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"前端初始化 前端布局 根页面引用 上中下三栏 底部栏（下） 内容栏（中） Router 路由 导航栏 点击菜单事件（click） 向后端发送请求 全局自定义请求 待整理 前端页面开发 01.Homepage页 02.Login页 1.在md文件里直接写了 Debug 进入首页会弹出报错 服务端显示 登录功能报错",content:'用户中心项目的前端开发，采用Vue3。编写导航栏、Router、发送请求。这是我的初级Vue项目 owo\n\n\n# 前端初始化\n\n\n# 前端初始化\n\n在Vue中\n\ntemplate是html部分，script部分用于向后端发送请求，style是页面的样式\n\n\n# 前端布局\n\n把所有项目放在layouts文件夹里\n\n创建一个通用布局BasicLayout.Vue，使用组合式API\n\n> 在 Vue.js 中，主要存在两种 API 设计模式：选项式 API（Options API） 和 组合式 API（Composition API）。它们在代码组织、逻辑复用、响应式数据处理等方面有显著不同。\n> \n> 逻辑组织\n> \n>  * 选项式 API：逻辑分散在多个选项中，适合简单组件。\n>  * 组合式 API：逻辑集中在一个函数中，适合复杂组件。\n\n\n# 根页面引用\n\n根页面是App.Vue文件\n\n引入我们的通用布局BasicLayout.Vue\n\n\n# 上中下三栏\n\n规划为header、content、footer三部分\n\n\n# 底部栏（下）\n\nFooter一般可以写版权信息\n\n\n# 内容栏（中）\n\n# Router 路由\n\n在router/index.ts\n\ncontent部分要实现动态切换，可以直接使用router的语法\n\n      <a-layout-content class="content">\n        <router-view />\n      </a-layout-content>\n\n\n1\n2\n3\n\n\n改变路由的路径，并开发他们的组件\n\n{\n  path: "/",\n  name: "home",\n  component: HomePage,\n},\n\n\n1\n2\n3\n4\n5\n\n\n\n# 导航栏\n\n全局的公共导航栏 GlobalHeader.Vue\n\n在蚂蚁金服提供的组件中可直接使用导航菜单 Menu - Ant Design Vue\n\n选用这个顶部导航栏\n\n\n\n左上角logo，右上角登录\n\n分别是使用一个<div标签>、一个<button标签>，通过改变style实现\n\n\n\n排版\n\nFlex布局能够自动伸缩\n\n  <a-row :warp="false">\x3c!--   关闭自动换行      --\x3e\n    <a-col flex="100px">100px</a-col>\x3c!--   100px       --\x3e\n    <a-col flex="auto">auto</a-col>\x3c!--   自适应       --\x3e\n  </a-row>\n\n\n1\n2\n3\n4\n\n\n# 点击菜单事件（click）\n\n@click="doMenuClick"\n\n\n1\n\n\n导航菜单 Menu - Ant Design Vue\n\nMenu 事件 #\n\n事件名称         说明                       回调参数\nclick        点击 MenuItem 调用此函数        function({ item, key, keyPath })\ndeselect     取消选中时调用，仅在 multiple 生效   function({ item, key, selectedKeys })\nopenChange   SubMenu 展开/关闭的回调         function(openKeys: (string | number)[])\nselect       被选中时调用                   function({ item, key, selectedKeys })\n\n然后在script标签里定义这个事件\n\nconst router = useRouter();\n//点击菜单后的路由跳转事件\n\nconst doMenuClick = ({ key }: { key: string }) => {\n  router.push({ path: key });\n};\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 向后端发送请求\n\n> 引入Axios请求库\n\n一般情况下，前端只负责界面展示和动效交互，尽量避免写复杂的逻辑；当需要获取数据时，通常是向后端提供的接口发送请求，由后端执行操作（比如保存数据）并响应数据给前端。\n\n前端如何向后端发送请求呢？最传统的方式是使用AJAX技术。但其代码有些复杂，我们可以使用第三方的封装库，来简化发送请求的代码，比如主流的请求工具库Axios。\n\n\n# 全局自定义请求\n\n需要自定义全局请求地址等，参考Axios官方文档，编写请求配置文件request.ts。包括全局接口请求地址、超时时间、自定义请求响应拦截器等。\n\n响应拦截器的应用场景：我们需要对接口的通用响应进行统一处理，比如从response中取出data；或者根据code去集中处理错误。这样不用在每个接口请求中都去写相同的逻辑。\n\n比如可以在全局响应拦截器中，读取出结果中的data，并校验code是否合法，如果是未登录状态，则自动登录。\n\n示例代码如下，其中 withCredentials：true 一定要写，否则无法在发请求时携带Cookie，就无法完成登录。\n\n\n# 待整理\n\n在项目入口（main.ts)引入pinia，在此之前已经引入了ant-design-vue\n\nPinia 是 Vue 的存储库，它允许您跨组件/页面共享状态。\n\n介绍 | Pinia 中文文档\n\nStore可以作为全局变量，任意组件都可以使用它\n\n在GlobalHeader（全局导航条）中引用 （这里若引用未变成紫色就可能是写错了，我写函数名没写对(0 . 0） )\n\n<a-col flex="80px">\n  <div class="user-login-status">\n    {{ JSON.stringify(loginUserStore.loginUser) }}\n    <a-button type="primary" href="/user/login">登录</a-button>\n  </div>\n</a-col>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 前端页面开发\n\n# 01.Homepage页\n\n每个页面唯一，可以套一个<div id="homePage">容器\n\n# 02.Login页\n\n在表单 Form - Ant Design Vue找到表单组件，第一个就是登录页面\n\n      style="max-width: 480px; margin: 0 auto" \x3c!-- 480宽度，左右边距为0--\x3e\n\n\n1\n\n\n\n# 踩坑\n\n\n# 1.在md文件里直接写了\n\n<div id="homePage">\n\n\n1\n\n\n结果md文件显示不出来，也是导致git推送失败报错的原因\n\n以下是报错记录\n\n> Error: Failed to compile with errors. at E:\\VueCode\\Blog\\msingbai.github.io\\node_modules@vuepress\\core\\lib\\node\\build\\index.js:190:16 at finalCallback (E:\\VueCode\\Blog\\msingbai.github.io\\node_modules\\webpack\\lib\\MultiCompiler.js:254:12)具体是 Webpack 在编译时遇到了错误。\n> \n> 可能是因为 Markdown 文件中包含了 VuePress 或 Webpack 无法处理的内容。检查以下内容：\n> \n>  * 语法错误：确保 Markdown 文件的格式正确，没有语法错误。\n>  * Vue 组件或代码块：如果文件中包含 Vue 组件或代码块（如 <template> 或 <script>），检查是否有语法错误或未正确闭合的标签。\n\n应该就是没有闭合的div导致了无法编译。\n\n改成代码块形式后恢复\n\n目前卡在了数据库上，是从前端开始做的，后端代码直接copy，结果数据库的链接有问题，也不知道密码，今天就先到这里吧~\n\n2025-04-02\n\n上一次开发了Login功能，后端的数据库我们也调试好了\n\n有了F12的开发者工具，我们可以开始debug\n\n\n# Debug\n\n\n# 进入首页会弹出报错\n\n\n\n<iframe>是一个嵌入html的标签，可以加载一个独立的窗口\n\nid可以看到这个元素的唯一标识符\n\nAxios 在尝试发送网络请求时遇到了问题\n\n> at async getCurrentUser (webpack-internal:///./src/api/user.ts:56:10)\n> \n> at async Proxy.fetchLoginUser (webpack-internal:///./src/store/useLoginUserStore.ts:17:17)\n\n这里指出了调用Axios的路径\n\n看看user.ts文件\n\n我们是这么写的\n\nexport const getCurrentUser = async () => {\n  return await myAxios.request({\n    url: "/api/user/current",\n    method: "GET",\n  });\n};\n\n\n1\n2\n3\n4\n5\n6\n\n\n看看useLoginUserStore.ts\n\n  //远程获取登录用户信息\n  async function fetchLoginUser() {\n    const res = await getCurrentUser();\n    if (res.data.code === 0 && res.data.data) {\n      loginUser.value = res.data.data;\n    }\n    // 测试代码\n    // else {\n    //   setTimeout(() => {\n    //     loginUser.value = { username: "小黑子", id: 1 };\n    //   }, 3000);\n    // }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n这是一个远程获取登录用户信息的功能\n\n# 服务端显示\n\n\n\n收到一个cookie，被忽视了\n\n为什么要忽视呢。。？看看这个cookie写了什么\n\nF12进到应用程序的cookie\n\n\n\n查阅解析百度联盟广告页的Hm_cookie机制-CSDN博客\n\n> 包含百度联盟的广告页面都会有Hm_lpvt_xxxx以及Hm_lvt_xxx这类cookie;其具体含义和用途对于联盟使用者或许根本就不需要知道。\n> \n> Hm_lpvt_xxxxxxx 为当前时间戳(秒)\n> \n> Hm_lvt_xxx 为一串时间戳。最近的一次访问时间戳追加在后面，最多保留4个时间戳。可以通过关闭浏览器然后再访问相同页面查看其cookie值来验证。\n\n和我们的项目好像没有关系 我们不管它\n\n测试下登录\n\n\n# 登录功能报错\n\n\n\n也是网络请求失败\n\n有可能是因为后端还没写这个api，所以请求无法实现\n\n正好也要写后端 我下午把时间放到后端\n\n文字写于：广东',normalizedContent:'用户中心项目的前端开发，采用vue3。编写导航栏、router、发送请求。这是我的初级vue项目 owo\n\n\n# 前端初始化\n\n\n# 前端初始化\n\n在vue中\n\ntemplate是html部分，script部分用于向后端发送请求，style是页面的样式\n\n\n# 前端布局\n\n把所有项目放在layouts文件夹里\n\n创建一个通用布局basiclayout.vue，使用组合式api\n\n> 在 vue.js 中，主要存在两种 api 设计模式：选项式 api（options api） 和 组合式 api（composition api）。它们在代码组织、逻辑复用、响应式数据处理等方面有显著不同。\n> \n> 逻辑组织\n> \n>  * 选项式 api：逻辑分散在多个选项中，适合简单组件。\n>  * 组合式 api：逻辑集中在一个函数中，适合复杂组件。\n\n\n# 根页面引用\n\n根页面是app.vue文件\n\n引入我们的通用布局basiclayout.vue\n\n\n# 上中下三栏\n\n规划为header、content、footer三部分\n\n\n# 底部栏（下）\n\nfooter一般可以写版权信息\n\n\n# 内容栏（中）\n\n# router 路由\n\n在router/index.ts\n\ncontent部分要实现动态切换，可以直接使用router的语法\n\n      <a-layout-content class="content">\n        <router-view />\n      </a-layout-content>\n\n\n1\n2\n3\n\n\n改变路由的路径，并开发他们的组件\n\n{\n  path: "/",\n  name: "home",\n  component: homepage,\n},\n\n\n1\n2\n3\n4\n5\n\n\n\n# 导航栏\n\n全局的公共导航栏 globalheader.vue\n\n在蚂蚁金服提供的组件中可直接使用导航菜单 menu - ant design vue\n\n选用这个顶部导航栏\n\n\n\n左上角logo，右上角登录\n\n分别是使用一个<div标签>、一个<button标签>，通过改变style实现\n\n\n\n排版\n\nflex布局能够自动伸缩\n\n  <a-row :warp="false">\x3c!--   关闭自动换行      --\x3e\n    <a-col flex="100px">100px</a-col>\x3c!--   100px       --\x3e\n    <a-col flex="auto">auto</a-col>\x3c!--   自适应       --\x3e\n  </a-row>\n\n\n1\n2\n3\n4\n\n\n# 点击菜单事件（click）\n\n@click="domenuclick"\n\n\n1\n\n\n导航菜单 menu - ant design vue\n\nmenu 事件 #\n\n事件名称         说明                       回调参数\nclick        点击 menuitem 调用此函数        function({ item, key, keypath })\ndeselect     取消选中时调用，仅在 multiple 生效   function({ item, key, selectedkeys })\nopenchange   submenu 展开/关闭的回调         function(openkeys: (string | number)[])\nselect       被选中时调用                   function({ item, key, selectedkeys })\n\n然后在script标签里定义这个事件\n\nconst router = userouter();\n//点击菜单后的路由跳转事件\n\nconst domenuclick = ({ key }: { key: string }) => {\n  router.push({ path: key });\n};\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 向后端发送请求\n\n> 引入axios请求库\n\n一般情况下，前端只负责界面展示和动效交互，尽量避免写复杂的逻辑；当需要获取数据时，通常是向后端提供的接口发送请求，由后端执行操作（比如保存数据）并响应数据给前端。\n\n前端如何向后端发送请求呢？最传统的方式是使用ajax技术。但其代码有些复杂，我们可以使用第三方的封装库，来简化发送请求的代码，比如主流的请求工具库axios。\n\n\n# 全局自定义请求\n\n需要自定义全局请求地址等，参考axios官方文档，编写请求配置文件request.ts。包括全局接口请求地址、超时时间、自定义请求响应拦截器等。\n\n响应拦截器的应用场景：我们需要对接口的通用响应进行统一处理，比如从response中取出data；或者根据code去集中处理错误。这样不用在每个接口请求中都去写相同的逻辑。\n\n比如可以在全局响应拦截器中，读取出结果中的data，并校验code是否合法，如果是未登录状态，则自动登录。\n\n示例代码如下，其中 withcredentials：true 一定要写，否则无法在发请求时携带cookie，就无法完成登录。\n\n\n# 待整理\n\n在项目入口（main.ts)引入pinia，在此之前已经引入了ant-design-vue\n\npinia 是 vue 的存储库，它允许您跨组件/页面共享状态。\n\n介绍 | pinia 中文文档\n\nstore可以作为全局变量，任意组件都可以使用它\n\n在globalheader（全局导航条）中引用 （这里若引用未变成紫色就可能是写错了，我写函数名没写对(0 . 0） )\n\n<a-col flex="80px">\n  <div class="user-login-status">\n    {{ json.stringify(loginuserstore.loginuser) }}\n    <a-button type="primary" href="/user/login">登录</a-button>\n  </div>\n</a-col>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 前端页面开发\n\n# 01.homepage页\n\n每个页面唯一，可以套一个<div id="homepage">容器\n\n# 02.login页\n\n在表单 form - ant design vue找到表单组件，第一个就是登录页面\n\n      style="max-width: 480px; margin: 0 auto" \x3c!-- 480宽度，左右边距为0--\x3e\n\n\n1\n\n\n\n# 踩坑\n\n\n# 1.在md文件里直接写了\n\n<div id="homepage">\n\n\n1\n\n\n结果md文件显示不出来，也是导致git推送失败报错的原因\n\n以下是报错记录\n\n> error: failed to compile with errors. at e:\\vuecode\\blog\\msingbai.github.io\\node_modules@vuepress\\core\\lib\\node\\build\\index.js:190:16 at finalcallback (e:\\vuecode\\blog\\msingbai.github.io\\node_modules\\webpack\\lib\\multicompiler.js:254:12)具体是 webpack 在编译时遇到了错误。\n> \n> 可能是因为 markdown 文件中包含了 vuepress 或 webpack 无法处理的内容。检查以下内容：\n> \n>  * 语法错误：确保 markdown 文件的格式正确，没有语法错误。\n>  * vue 组件或代码块：如果文件中包含 vue 组件或代码块（如 <template> 或 <script>），检查是否有语法错误或未正确闭合的标签。\n\n应该就是没有闭合的div导致了无法编译。\n\n改成代码块形式后恢复\n\n目前卡在了数据库上，是从前端开始做的，后端代码直接copy，结果数据库的链接有问题，也不知道密码，今天就先到这里吧~\n\n2025-04-02\n\n上一次开发了login功能，后端的数据库我们也调试好了\n\n有了f12的开发者工具，我们可以开始debug\n\n\n# debug\n\n\n# 进入首页会弹出报错\n\n\n\n<iframe>是一个嵌入html的标签，可以加载一个独立的窗口\n\nid可以看到这个元素的唯一标识符\n\naxios 在尝试发送网络请求时遇到了问题\n\n> at async getcurrentuser (webpack-internal:///./src/api/user.ts:56:10)\n> \n> at async proxy.fetchloginuser (webpack-internal:///./src/store/useloginuserstore.ts:17:17)\n\n这里指出了调用axios的路径\n\n看看user.ts文件\n\n我们是这么写的\n\nexport const getcurrentuser = async () => {\n  return await myaxios.request({\n    url: "/api/user/current",\n    method: "get",\n  });\n};\n\n\n1\n2\n3\n4\n5\n6\n\n\n看看useloginuserstore.ts\n\n  //远程获取登录用户信息\n  async function fetchloginuser() {\n    const res = await getcurrentuser();\n    if (res.data.code === 0 && res.data.data) {\n      loginuser.value = res.data.data;\n    }\n    // 测试代码\n    // else {\n    //   settimeout(() => {\n    //     loginuser.value = { username: "小黑子", id: 1 };\n    //   }, 3000);\n    // }\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n这是一个远程获取登录用户信息的功能\n\n# 服务端显示\n\n\n\n收到一个cookie，被忽视了\n\n为什么要忽视呢。。？看看这个cookie写了什么\n\nf12进到应用程序的cookie\n\n\n\n查阅解析百度联盟广告页的hm_cookie机制-csdn博客\n\n> 包含百度联盟的广告页面都会有hm_lpvt_xxxx以及hm_lvt_xxx这类cookie;其具体含义和用途对于联盟使用者或许根本就不需要知道。\n> \n> hm_lpvt_xxxxxxx 为当前时间戳(秒)\n> \n> hm_lvt_xxx 为一串时间戳。最近的一次访问时间戳追加在后面，最多保留4个时间戳。可以通过关闭浏览器然后再访问相同页面查看其cookie值来验证。\n\n和我们的项目好像没有关系 我们不管它\n\n测试下登录\n\n\n# 登录功能报错\n\n\n\n也是网络请求失败\n\n有可能是因为后端还没写这个api，所以请求无法实现\n\n正好也要写后端 我下午把时间放到后端\n\n文字写于：广东',charsets:{cjk:!0}},{title:"用户中心后端-1",frontmatter:{title:"用户中心后端-1",date:"2025-03-07T15:25:44.000Z",permalink:"/projects/39691d/",categories:["项目","用户中心系统"],tags:["后端"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/02.%E5%90%8E%E7%AB%AF%E5%88%9D%E5%A7%8B%E5%8C%96-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90.html",relativePath:"04.项目/01.用户中心系统/02.后端初始化-需求分析.md",key:"v-370932ee",path:"/projects/39691d/",headers:[{level:2,title:"企业的项目流程",slug:"企业的项目流程",normalizedTitle:"企业的项目流程",charIndex:50},{level:2,title:"需求分析",slug:"需求分析",normalizedTitle:"需求分析",charIndex:12},{level:2,title:"技术选型",slug:"技术选型",normalizedTitle:"技术选型",charIndex:84},{level:2,title:"计划",slug:"计划",normalizedTitle:"计划",charIndex:412},{level:2,title:"笔记",slug:"笔记",normalizedTitle:"笔记",charIndex:602},{level:3,title:"配置数据库",slug:"配置数据库",normalizedTitle:"配置数据库",charIndex:17},{level:3,title:"项目初始化",slug:"项目初始化",normalizedTitle:"项目初始化",charIndex:724},{level:3,title:"工具名词解释：",slug:"工具名词解释",normalizedTitle:"工具名词解释：",charIndex:819},{level:3,title:"maven配置",slug:"maven配置",normalizedTitle:"maven配置",charIndex:1151},{level:3,title:"数据库创建",slug:"数据库创建",normalizedTitle:"数据库创建",charIndex:3435},{level:3,title:"编写实体类",slug:"编写实体类",normalizedTitle:"编写实体类",charIndex:24},{level:3,title:"测试类",slug:"测试类",normalizedTitle:"测试类",charIndex:3749},{level:2,title:"踩坑",slug:"踩坑",normalizedTitle:"踩坑",charIndex:4045}],excerpt:"<p>用户中心项目的后端开发，需求分析，配置数据库以及编写实体类</p>\n",lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"企业的项目流程 需求分析 技术选型 计划 笔记 配置数据库 项目初始化 工具名词解释： maven配置 数据库创建 编写实体类 测试类 踩坑",content:'用户中心项目的后端开发，需求分析，配置数据库以及编写实体类\n\n\n# 02.用户中心后端-1\n\n\n# 企业的项目流程\n\n需求分析 => 设计（概要设计、详细设计） => 技术选型 => 初始化/引入需要的技术 => 写Demo => 写代码（实现业务逻辑） => 测试（单元测试）=> 代码提交/代码评审 => 部署 => 发布\n\n\n# 需求分析\n\n1.登录/注册\n\n2.用户管理（管理员）\n\n3.用户校验（是否是购买服务的用户）\n\n\n# 技术选型\n\n前端：三件套(HTML CSS JS) +React + 组件库 Ant Design（阿里巴巴的蚂蚁金服) + Umi 开发框架 + Ant Design Pro(现成管理系统)\n\n后端： java + spring + springmvc + mybatis + mybatis-plus + springboot + mysql\n\n部署：服务器/容器（平台）\n\n\n# 计划\n\n1.初始化项目 20min\n\n1.前端初始化 ✔️\n\n1.初始化项目 ✔️\n\n2.引入组件 ✔️\n\n3.项目瘦身\n\n2.后端初始化20min\n\n1.准备环境（MySQL等） 验证MySQL是否安装成功-链接 ✔️\n\n2.引入框架（整合框架）\n\n2.登录/注册 20min\n\n1.前端\n\n2.后端\n\n3.用户管理（仅管理员可见） 20min\n\n1.前端\n\n2.后端\n\n\n# 笔记\n\n\n# 配置数据库\n\n使用Mysql\n\nMySQL官网：https://www.mysql.com/downloads/\n\n记住user密码\n\n\n\n----------------------------------------\n\n\n# 项目初始化\n\n三种初始化Java项目的方式\n\n1.github拉取\n\n2.springboot官方模板 Spring Initializr\n\n3.直接在IDEA开发工具中生成 ✔️\n\n\n# 工具名词解释：\n\n * Lombok 可以通过注解,帮助开发人员消除JAVA中尤其是POJO类中的冗长代码。\n\n * myBatis 数据访问层的框架，用于操作数据库\n\n * spring（依赖注入框架，帮助你管理Java对象，集成一些其他的内容）\n\n * springmvc（web框架，提供接口访问、festful接口等能力）\n\n * mybatis (Java操作数据库的框架，持久层框架，对jdbc的封装)\n\n * mybatis-plus（对mybatis的增强，不用写sql也能实现增删改查）\n\n * springboot（快速启动/快速集成项目 不用自己管理spring配置，不用自己整合各种框架）\n\n * MySQL 关系型数据库管理系统\n\n\n# maven配置\n\n4.maven换源,settings.xml复制下面的内容覆盖 没有的话创建一个\n\n<?xml version="1.0" encoding="UTF-8"?>\n<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\n          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\n    \x3c!-- localRepository\n     | The path to the local repository maven will use to store artifacts.\n     |\n     | Default: ${user.home}/.m2/repository\n    <localRepository>/path/to/local/repo</localRepository>\n    --\x3e\n    <mirrors>\n        \x3c!-- mirror\n         | Specifies a repository mirror site to use instead of a given repository. The repository that\n         | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n         | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n         |\n        <mirror>\n          <id>mirrorId</id>\n          <mirrorOf>repositoryId</mirrorOf>\n          <name>Human Readable Name for this Mirror.</name>\n          <url>http://my.repository.com/repo/path</url>\n        </mirror>\n         --\x3e\n \n        <mirror>\n            <id>alimaven</id>\n            <name>aliyun maven</name>\n            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n            <mirrorOf>central</mirrorOf>\n        </mirror>\n \n        <mirror>\n            <id>uk</id>\n            <mirrorOf>central</mirrorOf>\n            <name>Human Readable Name for this Mirror.</name>\n            <url>http://uk.maven.org/maven2/</url>\n        </mirror>\n \n        <mirror>\n            <id>CN</id>\n            <name>OSChina Central</name>\n            <url>http://maven.oschina.net/content/groups/public/</url>\n            <mirrorOf>central</mirrorOf>\n        </mirror>\n \n        <mirror>\n            <id>nexus</id>\n            <name>internal nexus repository</name>\n            \x3c!-- <url>http://192.168.1.100:8081/nexus/content/groups/public/</url>--\x3e\n            <url>http://repo.maven.apache.org/maven2</url>\n            <mirrorOf>central</mirrorOf>\n        </mirror>\n \n    </mirrors>\n</settings>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 数据库创建\n\n5.在数据库创建表\n\n使用mybatis-plus快速开始 | MyBatis-Plus\n\n连接数据库后，右键新建[架构]，[架构]右键[查询控制台]，可以直接输入创建数据表的sql语句\n\n右键执行\n\n还可以输入创建数据demo的语句\n\n6.编写配置文件application\n\n改为yml格式，yml格式是缩进敏感的，例如\n\nurl: jdbc:mysql://localhost:3306/数据库名\n#url:[空格][代码]\n\n\n1\n2\n\n\n\n# 编写实体类\n\n7.编写实体类\n\nmodel包存储实体类\n\nmapper包存储mapper接口\n\nBaseMapper里有写好的增删查改等功能，直接继承\n\n\n# 测试类\n\n8.添加测试类，进行功能测试\n\n在test文件夹编写SampleTest\n\n发现没有Junit\n\n进入到Maven中心仓库Maven Repository: Search/Browse/Explore\n\n复制Junit的pom\n\n后来发现不是Junit没有 是直接在mybatis-plus引入的\n\nimport com.baomidou.mybatisplus.core.toolkit.Assert;\n\n\n1\n\n\n\n\n试运行test之后 报错\n\n把报错信息发给kimi\n\n发现是数据库连接出了问题，在配置文件中\n\n不用这段，用我们自己的数据库\n\n删除后成功测试通过\n\n\n\n\n# 踩坑\n\n1.遇到了一个问题，前端发送的账号和密码都是正确的，后端返回的数据库都是正确的\n\n但是显示不存在\n\n修了一个多小时，找不到原因 先不修了，因为我不是很懂后端的逻辑，不是自己一步步写的，去运动一会吧\n\nPS:上传本文时踩了一个新坑\n\nmd文件虽然在本地用了相对路径，但是这个相对路径还是会因为前缀的路径号不够准确无法显示\n\n暂时的解决办法：一键替换\n\n不能每一篇都这么改，以后是要想个办法来完善它的\n\n2.用了作者的完整前后端代码，仍然是user==null\n\n决定暂时放弃此项目，去学习基础的前后端知识\n\n文字写于：广东',normalizedContent:'用户中心项目的后端开发，需求分析，配置数据库以及编写实体类\n\n\n# 02.用户中心后端-1\n\n\n# 企业的项目流程\n\n需求分析 => 设计（概要设计、详细设计） => 技术选型 => 初始化/引入需要的技术 => 写demo => 写代码（实现业务逻辑） => 测试（单元测试）=> 代码提交/代码评审 => 部署 => 发布\n\n\n# 需求分析\n\n1.登录/注册\n\n2.用户管理（管理员）\n\n3.用户校验（是否是购买服务的用户）\n\n\n# 技术选型\n\n前端：三件套(html css js) +react + 组件库 ant design（阿里巴巴的蚂蚁金服) + umi 开发框架 + ant design pro(现成管理系统)\n\n后端： java + spring + springmvc + mybatis + mybatis-plus + springboot + mysql\n\n部署：服务器/容器（平台）\n\n\n# 计划\n\n1.初始化项目 20min\n\n1.前端初始化 ✔️\n\n1.初始化项目 ✔️\n\n2.引入组件 ✔️\n\n3.项目瘦身\n\n2.后端初始化20min\n\n1.准备环境（mysql等） 验证mysql是否安装成功-链接 ✔️\n\n2.引入框架（整合框架）\n\n2.登录/注册 20min\n\n1.前端\n\n2.后端\n\n3.用户管理（仅管理员可见） 20min\n\n1.前端\n\n2.后端\n\n\n# 笔记\n\n\n# 配置数据库\n\n使用mysql\n\nmysql官网：https://www.mysql.com/downloads/\n\n记住user密码\n\n\n\n----------------------------------------\n\n\n# 项目初始化\n\n三种初始化java项目的方式\n\n1.github拉取\n\n2.springboot官方模板 spring initializr\n\n3.直接在idea开发工具中生成 ✔️\n\n\n# 工具名词解释：\n\n * lombok 可以通过注解,帮助开发人员消除java中尤其是pojo类中的冗长代码。\n\n * mybatis 数据访问层的框架，用于操作数据库\n\n * spring（依赖注入框架，帮助你管理java对象，集成一些其他的内容）\n\n * springmvc（web框架，提供接口访问、festful接口等能力）\n\n * mybatis (java操作数据库的框架，持久层框架，对jdbc的封装)\n\n * mybatis-plus（对mybatis的增强，不用写sql也能实现增删改查）\n\n * springboot（快速启动/快速集成项目 不用自己管理spring配置，不用自己整合各种框架）\n\n * mysql 关系型数据库管理系统\n\n\n# maven配置\n\n4.maven换源,settings.xml复制下面的内容覆盖 没有的话创建一个\n\n<?xml version="1.0" encoding="utf-8"?>\n<settings xmlns="http://maven.apache.org/settings/1.0.0"\n          xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n          xsi:schemalocation="http://maven.apache.org/settings/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\n    \x3c!-- localrepository\n     | the path to the local repository maven will use to store artifacts.\n     |\n     | default: ${user.home}/.m2/repository\n    <localrepository>/path/to/local/repo</localrepository>\n    --\x3e\n    <mirrors>\n        \x3c!-- mirror\n         | specifies a repository mirror site to use instead of a given repository. the repository that\n         | this mirror serves has an id that matches the mirrorof element of this mirror. ids are used\n         | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n         |\n        <mirror>\n          <id>mirrorid</id>\n          <mirrorof>repositoryid</mirrorof>\n          <name>human readable name for this mirror.</name>\n          <url>http://my.repository.com/repo/path</url>\n        </mirror>\n         --\x3e\n \n        <mirror>\n            <id>alimaven</id>\n            <name>aliyun maven</name>\n            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n            <mirrorof>central</mirrorof>\n        </mirror>\n \n        <mirror>\n            <id>uk</id>\n            <mirrorof>central</mirrorof>\n            <name>human readable name for this mirror.</name>\n            <url>http://uk.maven.org/maven2/</url>\n        </mirror>\n \n        <mirror>\n            <id>cn</id>\n            <name>oschina central</name>\n            <url>http://maven.oschina.net/content/groups/public/</url>\n            <mirrorof>central</mirrorof>\n        </mirror>\n \n        <mirror>\n            <id>nexus</id>\n            <name>internal nexus repository</name>\n            \x3c!-- <url>http://192.168.1.100:8081/nexus/content/groups/public/</url>--\x3e\n            <url>http://repo.maven.apache.org/maven2</url>\n            <mirrorof>central</mirrorof>\n        </mirror>\n \n    </mirrors>\n</settings>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 数据库创建\n\n5.在数据库创建表\n\n使用mybatis-plus快速开始 | mybatis-plus\n\n连接数据库后，右键新建[架构]，[架构]右键[查询控制台]，可以直接输入创建数据表的sql语句\n\n右键执行\n\n还可以输入创建数据demo的语句\n\n6.编写配置文件application\n\n改为yml格式，yml格式是缩进敏感的，例如\n\nurl: jdbc:mysql://localhost:3306/数据库名\n#url:[空格][代码]\n\n\n1\n2\n\n\n\n# 编写实体类\n\n7.编写实体类\n\nmodel包存储实体类\n\nmapper包存储mapper接口\n\nbasemapper里有写好的增删查改等功能，直接继承\n\n\n# 测试类\n\n8.添加测试类，进行功能测试\n\n在test文件夹编写sampletest\n\n发现没有junit\n\n进入到maven中心仓库maven repository: search/browse/explore\n\n复制junit的pom\n\n后来发现不是junit没有 是直接在mybatis-plus引入的\n\nimport com.baomidou.mybatisplus.core.toolkit.assert;\n\n\n1\n\n\n\n\n试运行test之后 报错\n\n把报错信息发给kimi\n\n发现是数据库连接出了问题，在配置文件中\n\n不用这段，用我们自己的数据库\n\n删除后成功测试通过\n\n\n\n\n# 踩坑\n\n1.遇到了一个问题，前端发送的账号和密码都是正确的，后端返回的数据库都是正确的\n\n但是显示不存在\n\n修了一个多小时，找不到原因 先不修了，因为我不是很懂后端的逻辑，不是自己一步步写的，去运动一会吧\n\nps:上传本文时踩了一个新坑\n\nmd文件虽然在本地用了相对路径，但是这个相对路径还是会因为前缀的路径号不够准确无法显示\n\n暂时的解决办法：一键替换\n\n不能每一篇都这么改，以后是要想个办法来完善它的\n\n2.用了作者的完整前后端代码，仍然是user==null\n\n决定暂时放弃此项目，去学习基础的前后端知识\n\n文字写于：广东',charsets:{cjk:!0}},{title:"用户中心后端-2",frontmatter:{title:"用户中心后端-2",date:"2025-03-26T18:51:59.000Z",permalink:"/projects/8eef80/",categories:["项目","用户中心系统"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/03.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96-MyBatis.html",relativePath:"04.项目/01.用户中心系统/03.数据库表初始化-MyBatis.md",key:"v-690dad64",path:"/projects/8eef80/",headers:[{level:2,title:"1. 配置数据源（DataSource）",slug:"_1-配置数据源-datasource",normalizedTitle:"1. 配置数据源（datasource）",charIndex:75},{level:3,title:"示例（MySQL）",slug:"示例-mysql",normalizedTitle:"示例（mysql）",charIndex:178},{level:2,title:"2. 配置MyBatis（如果是MyBatis）",slug:"_2-配置mybatis-如果是mybatis",normalizedTitle:"2. 配置mybatis（如果是mybatis）",charIndex:447},{level:3,title:"（1）添加MyBatis依赖",slug:"_1-添加mybatis依赖",normalizedTitle:"（1）添加mybatis依赖",charIndex:476},{level:3,title:"（2）告诉MyBatis你的Mapper接口在哪里",slug:"_2-告诉mybatis你的mapper接口在哪里",normalizedTitle:"（2）告诉mybatis你的mapper接口在哪里",charIndex:711},{level:3,title:"（3）在启动类上添加 `@MapperScan`",slug:"_3-在启动类上添加-mapperscan",normalizedTitle:"（3）在启动类上添加 <code>@mapperscan</code>",charIndex:null},{level:3,title:"*MyBatisPlus",slug:"mybatisplus",normalizedTitle:"*mybatisplus",charIndex:1291},{level:4,title:"MyBatisPlus入门",slug:"mybatisplus入门",normalizedTitle:"mybatisplus入门",charIndex:1348},{level:2,title:"3.数据库表初始化",slug:"_3-数据库表初始化",normalizedTitle:"3.数据库表初始化",charIndex:2079},{level:3,title:"数据库需求分析",slug:"数据库需求分析",normalizedTitle:"数据库需求分析",charIndex:2093}],excerpt:"<p>数据库表的初始化和mybatis的初始化配置</p>\n",lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"1. 配置数据源（DataSource） 示例（MySQL） 2. 配置MyBatis（如果是MyBatis） （1）添加MyBatis依赖 （2）告诉MyBatis你的Mapper接口在哪里 （3）在启动类上添加 `@MapperScan` *MyBatisPlus MyBatisPlus入门 3.数据库表初始化 数据库需求分析",content:"数据库表的初始化和mybatis的初始化配置\n\n\n# 03.用户中心后端-2\n\n创建好 Mapper 接口 和 实体类 后，接下来配置数据源\n\n\n# 1. 配置数据源（DataSource）\n\nSpring Boot 需要知道如何连接数据库。在 application.properties 或 application.yml 中配置数据库信息：\n\n\n# 示例（MySQL）\n\n# application.properties\nspring.datasource.url=jdbc:mysql://localhost:3306/你的数据库名?useSSL=false&serverTimezone=UTC\nspring.datasource.username=root\nspring.datasource.password=123456\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2. 配置MyBatis（如果是MyBatis）\n\n\n# （1）添加MyBatis依赖\n\n在 pom.xml 中加入：\n\n<dependency>\n    <groupId>org.mybatis.spring.boot</groupId>\n    <artifactId>mybatis-spring-boot-starter</artifactId>\n    <version>3.0.3</version>  \x3c!-- 使用最新版本 --\x3e\n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n运行 HTML\n\n\n# （2）告诉MyBatis你的Mapper接口在哪里\n\n在 application.properties 中指定扫描路径：\n\nmybatis.mapper-locations=classpath:mapper/*.xml  # 如果你的Mapper XML文件在resources/mapper下\nmybatis.type-aliases-package=com.example.entity  # 实体类所在的包\n\n\n1\n2\n\n\n\n# （3）在启动类上添加 @MapperScan\n\n@SpringBootApplication\n@MapperScan(\"com.example.mapper\")  // 替换为你的Mapper接口所在包\npublic class DemoApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nMybatis劣势：\n\n * 简单CRUD操作需要编写SQL语句（单表仍需要编写Mapper接口方法和xml的sql）\n * XML中有大量sql需维护\n * mybatis自身功能有限\n\n\n# *MyBatisPlus\n\nMyBatisPlus，以下简称MP，基于MyBatis做拓展，本身无性能损耗\n\n# MyBatisPlus入门\n\n安装lombok\n\n> lombok作用：提高开发效率，通过注解形式使javabean生成get、set、有参数、无参数、toString等方法，无需手动实现。\n\n倘若不使用lombok可以使用的注解有： 注解介绍：\n\n@Getter / @Setter\n\n> 可以作用在类上和属性上，放在类上，会对所有的非静态(non-static)属性生成Getter/Setter方法，放在属性上，会对该属性生成Getter/Setter方法。并可以指定Getter/Setter方法的访问级别。\n\n@EqualsAndHashCode\n\n> 默认情况下，会使用所有非瞬态(non-transient)和非静态(non-static)字段来生成equals和hascode方法，也可以指定具体使用哪些属性。\n\n@ToString\n\n> 生成toString方法，默认情况下，会输出类名、所有属性，属性会按照顺序输出，以逗号分割。\n\n@NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor\n\n> 无参构造器、部分参数构造器、全参构造器，当我们需要重载多个构造器的时候，Lombok就无能为力了。\n\n@Data\n\n> @ToString, @EqualsAndHashCode, 所有属性的@Getter, 所有non-final属性的@Setter和@RequiredArgsConstructor的组合，通常情况下，我们使用这个注解就足够了。\n\nlombok在IDE的插件市场里可以安装，可在Stable查询，然后在maven的pom.xml引入依赖\n\n\n# 3.数据库表初始化\n\n\n# 数据库需求分析\n\n我们需要昵称、账号id、性别、用户头像、密码、个人信息\n\n以及方便后台管理的用户状态、创建时间、权限等\n\ncreate table user\n(\n    username     varchar(256)                       null comment '用户昵称',\n    id           bigint auto_increment comment 'id'\n        primary key,\n    userAccount  varchar(256)                       null comment '账号',\n    avatarUrl    varchar(1024)                      null comment '用户头像',\n    gender       tinyint                            null comment '性别',\n    userPassword varchar(512)                       not null comment '密码',\n    phone        varchar(128)                       null comment '电话',\n    email        varchar(512)                       null comment '邮箱',\n    userStatus   int      default 0                 not null comment '状态 0 - 正常',\n    createTime   datetime default CURRENT_TIMESTAMP null comment '创建时间',\n    updateTime   datetime default CURRENT_TIMESTAMP null on update CURRENT_TIMESTAMP,\n    isDelete     tinyint  default 0                 not null comment '是否删除',\n    userRole     int      default 0                 not null comment '用户角色 0 - 普通用户 1 - 管理员',\n    planetCode   varchar(512)                       null comment '星球编号'\n)\n    comment '用户';\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n4.测试我们写好的User和UserMapper是否能够实现查看数据库的功能\n\n> mapper\\SampleTest.java\n\n@SpringBootTest\npublic class SampleTest {\n\n    @Resource\n    private UserMapper userMapper;\n\n    @Test\n    public void testSelect() {\n        System.out.println((\"----- selectAll method test ------\"));\n        List<User> userList = userMapper.selectList(null);\n//        Assert.isTrue(5 == userList.size(), \"\");\n//        //断言，我觉得数据库列表大小是5，如果不是就报错\n        userList.forEach(System.out::println);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n输出\n\n\n\n查询成功\n\n文字写于：广东",normalizedContent:"数据库表的初始化和mybatis的初始化配置\n\n\n# 03.用户中心后端-2\n\n创建好 mapper 接口 和 实体类 后，接下来配置数据源\n\n\n# 1. 配置数据源（datasource）\n\nspring boot 需要知道如何连接数据库。在 application.properties 或 application.yml 中配置数据库信息：\n\n\n# 示例（mysql）\n\n# application.properties\nspring.datasource.url=jdbc:mysql://localhost:3306/你的数据库名?usessl=false&servertimezone=utc\nspring.datasource.username=root\nspring.datasource.password=123456\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.driver\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2. 配置mybatis（如果是mybatis）\n\n\n# （1）添加mybatis依赖\n\n在 pom.xml 中加入：\n\n<dependency>\n    <groupid>org.mybatis.spring.boot</groupid>\n    <artifactid>mybatis-spring-boot-starter</artifactid>\n    <version>3.0.3</version>  \x3c!-- 使用最新版本 --\x3e\n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n运行 html\n\n\n# （2）告诉mybatis你的mapper接口在哪里\n\n在 application.properties 中指定扫描路径：\n\nmybatis.mapper-locations=classpath:mapper/*.xml  # 如果你的mapper xml文件在resources/mapper下\nmybatis.type-aliases-package=com.example.entity  # 实体类所在的包\n\n\n1\n2\n\n\n\n# （3）在启动类上添加 @mapperscan\n\n@springbootapplication\n@mapperscan(\"com.example.mapper\")  // 替换为你的mapper接口所在包\npublic class demoapplication {\n    public static void main(string[] args) {\n        springapplication.run(demoapplication.class, args);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nmybatis劣势：\n\n * 简单crud操作需要编写sql语句（单表仍需要编写mapper接口方法和xml的sql）\n * xml中有大量sql需维护\n * mybatis自身功能有限\n\n\n# *mybatisplus\n\nmybatisplus，以下简称mp，基于mybatis做拓展，本身无性能损耗\n\n# mybatisplus入门\n\n安装lombok\n\n> lombok作用：提高开发效率，通过注解形式使javabean生成get、set、有参数、无参数、tostring等方法，无需手动实现。\n\n倘若不使用lombok可以使用的注解有： 注解介绍：\n\n@getter / @setter\n\n> 可以作用在类上和属性上，放在类上，会对所有的非静态(non-static)属性生成getter/setter方法，放在属性上，会对该属性生成getter/setter方法。并可以指定getter/setter方法的访问级别。\n\n@equalsandhashcode\n\n> 默认情况下，会使用所有非瞬态(non-transient)和非静态(non-static)字段来生成equals和hascode方法，也可以指定具体使用哪些属性。\n\n@tostring\n\n> 生成tostring方法，默认情况下，会输出类名、所有属性，属性会按照顺序输出，以逗号分割。\n\n@noargsconstructor, @requiredargsconstructor and @allargsconstructor\n\n> 无参构造器、部分参数构造器、全参构造器，当我们需要重载多个构造器的时候，lombok就无能为力了。\n\n@data\n\n> @tostring, @equalsandhashcode, 所有属性的@getter, 所有non-final属性的@setter和@requiredargsconstructor的组合，通常情况下，我们使用这个注解就足够了。\n\nlombok在ide的插件市场里可以安装，可在stable查询，然后在maven的pom.xml引入依赖\n\n\n# 3.数据库表初始化\n\n\n# 数据库需求分析\n\n我们需要昵称、账号id、性别、用户头像、密码、个人信息\n\n以及方便后台管理的用户状态、创建时间、权限等\n\ncreate table user\n(\n    username     varchar(256)                       null comment '用户昵称',\n    id           bigint auto_increment comment 'id'\n        primary key,\n    useraccount  varchar(256)                       null comment '账号',\n    avatarurl    varchar(1024)                      null comment '用户头像',\n    gender       tinyint                            null comment '性别',\n    userpassword varchar(512)                       not null comment '密码',\n    phone        varchar(128)                       null comment '电话',\n    email        varchar(512)                       null comment '邮箱',\n    userstatus   int      default 0                 not null comment '状态 0 - 正常',\n    createtime   datetime default current_timestamp null comment '创建时间',\n    updatetime   datetime default current_timestamp null on update current_timestamp,\n    isdelete     tinyint  default 0                 not null comment '是否删除',\n    userrole     int      default 0                 not null comment '用户角色 0 - 普通用户 1 - 管理员',\n    planetcode   varchar(512)                       null comment '星球编号'\n)\n    comment '用户';\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n4.测试我们写好的user和usermapper是否能够实现查看数据库的功能\n\n> mapper\\sampletest.java\n\n@springboottest\npublic class sampletest {\n\n    @resource\n    private usermapper usermapper;\n\n    @test\n    public void testselect() {\n        system.out.println((\"----- selectall method test ------\"));\n        list<user> userlist = usermapper.selectlist(null);\n//        assert.istrue(5 == userlist.size(), \"\");\n//        //断言，我觉得数据库列表大小是5，如果不是就报错\n        userlist.foreach(system.out::println);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n输出\n\n\n\n查询成功\n\n文字写于：广东",charsets:{cjk:!0}},{title:"登录模块（后端）",frontmatter:{title:"登录模块（后端）",date:"2025-04-03T11:25:50.000Z",permalink:"/projects/df37ab/",categories:["项目","用户中心系统"],tags:["用户中心系统"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/06.%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/06.登录模块（后端）.md",key:"v-186f064c",path:"/projects/df37ab/",headers:[{level:2,title:"功能：用户登录",slug:"功能-用户登录",normalizedTitle:"功能：用户登录",charIndex:29},{level:3,title:"详细设计",slug:"详细设计",normalizedTitle:"详细设计",charIndex:41},{level:3,title:"md5加密&盐值",slug:"md5加密-盐值",normalizedTitle:"md5加密&amp;盐值",charIndex:null},{level:3,title:"加密功能",slug:"加密功能",normalizedTitle:"加密功能",charIndex:1281},{level:3,title:"逻辑编写",slug:"逻辑编写",normalizedTitle:"逻辑编写",charIndex:1655},{level:2,title:"后端登录态管理（Cookie和Session）",slug:"后端登录态管理-cookie和session",normalizedTitle:"后端登录态管理（cookie和session）",charIndex:3809},{level:3,title:"代码编写",slug:"代码编写",normalizedTitle:"代码编写",charIndex:4469},{level:2,title:"后端接口开发及测试",slug:"后端接口开发及测试",normalizedTitle:"后端接口开发及测试",charIndex:6032},{level:3,title:"1. 新建Controller类",slug:"_1-新建controller类",normalizedTitle:"1. 新建controller类",charIndex:6509},{level:3,title:"2. 下载插件",slug:"_2-下载插件",normalizedTitle:"2. 下载插件",charIndex:6761},{level:3,title:"3. 编写注册请求",slug:"_3-编写注册请求",normalizedTitle:"3. 编写注册请求",charIndex:6840},{level:3,title:"4. 编写登录请求",slug:"_4-编写登录请求",normalizedTitle:"4. 编写登录请求",charIndex:8021},{level:3,title:"5.测试",slug:"_5-测试",normalizedTitle:"5.测试",charIndex:8728}],excerpt:'<h1 id="_06-登录模块-后端"><a class="header-anchor" href="#_06-登录模块-后端">#</a> 06.登录模块（后端）</h1>\n<p>后端部分的<strong>登录</strong>功能</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"功能：用户登录 详细设计 md5加密&盐值 加密功能 逻辑编写 后端登录态管理（Cookie和Session） 代码编写 后端接口开发及测试 1. 新建Controller类 2. 下载插件 3. 编写注册请求 4. 编写登录请求 5.测试",content:'# 06.登录模块（后端）\n\n后端部分的登录功能\n\n\n# 功能：用户登录\n\n\n# 详细设计\n\n登录接口\n\n 1. 接收参数：用户账户、密码\n 2. 请求类型：POST\n 3. 请求体：JSON格式的数据\n 4. 返回值：用户信息\n\n逻辑\n\n 1. 检验用户账户和密码是否合法\n    * 账户和密码不能是空\n    * 账户不小于4位\n    * 密码不小于8位\n    * 账户不包含特殊字符\n 2. 检验密码是否输入正确，与数据库中的密文密码对比\n 3. 用户脱敏，隐藏敏感信息，防止数据库中的字段泄露\n 4. 记录用户的登录态（session），将其存到服务器上（用后端SpringBoot框架封装的服务器tomcat去记录）\n    * cookie\n 5. 返回安全脱敏的用户信息\n\n编写代码\n\n 1. 在UserService编写登录代码，写如下代码，Alt+Enter实现方法\n\n接下来我们要实现加密\n\n\n# md5加密&盐值\n\n（一）MD5摘要算法：\n\n * MD5信息摘要算法广泛使用的密码散列函数\n * MD5可以产生一个128位的散列值用于唯一标识源数据\n * 项目中通常使用MD5作为敏感数据的加密算法\n\n（二）特点：\n\n * 压缩性，MD5生成的摘要长度固定\n * 抗修改性，源数据哪怕有一个字节变化，MD5也会有巨大差异\n * 不可逆，无法通过MD5反向推算源数据\n * 计算速度快\n\nMD5的加密也会在某些情景下变得易破解\n\n**彩虹表：**由于MD5的计算速度很快，攻击者可以预先计算出大量常见密码的MD5值，形成彩虹表，用于快速破解密码。\n\n**碰撞攻击：**存在不同的输入数据生成相同哈希值的可能性\n\nMD5对应的加密之后的信息能够通过彩虹表得到解密，这让数据并不够安全，那怎么办呢？\n\n（三）MD5+盐值\n\n混淆加密，例如我们最初想要加密的字符串是test\n\n我们在加密的时候可以给test加点“盐”\n\n例如我们通过这个简单的算法：\n\npublic static String md5Digest(String source,Integer salt){\n    //source:需要加密的原始字符串。 salt：一个整数值，用于逐字符加盐。\n        char[] ca=source.toCharArray();//将source转化为字符数组\n        for(int i=0;i<ca.length;i++){\n            ca[i]=(char)(ca[i]+salt);//给每个字符加上盐值\n        }\n        String target=new String(ca);//重新组合字符串变成target\n        String md5=DigestUtils.md5Hex(target);//进行MD5加密\n        return md5;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n这样就完成了md5+盐值混淆之后的数据\n\n\n# 加密功能\n\nfinal是java的一种关键词，用于修饰内容表示其不可变。\n\n将表示盐值的变量private static final String SALT = "yupi";\n\n写在类的里面，方法的前面\n\n注解 @Slf4j\n\n在类前加一个@Slf4j注解\n\n@Slf4j 是 Lombok 提供的一种注解，用于在类中自动生成一个名为 log 的日志对象。通过使用 @Slf4j 注解，可以方便地在代码中使用日志功能，而无需手动创建和初始化日志对象。\n\n注解示例：\n\n @Slf4j\n public class LogExample {\n }\n\n\n1\n2\n3\n\n\n在上述示例中，LogExample类被标记为使用 @Slf4j 注解，它将自动创建一个名为 log 的日志对象。\n\n可见lombok的官方文档：Slf4j (Lombok)\n\n\n# 逻辑编写\n\n可以从注册功能把代码搬过来修改，主要是去掉了checkPassword\n\n和注册不同的是，这里返回的是null，有不完美的地方，不能反馈具体的错误码\n\n    @Override\n    public User doLogin(String userAccount, String userPassword) {\n        /* 1.检验 */\n        if (StringUtils.isAnyBlank(userAccount, userPassword)) {\n            return null;//空白\n        }\n        if (userAccount.length() < 4){\n            return null;\n        }\n        if (userPassword.length() < 8 ){\n            return null;\n        }\n\n        //账户不能包含特殊字符\n        String vaildateRegExp = "[^a-zA-Z0-9]";\n        Matcher matcher = Pattern.compile(vaildateRegExp).matcher(userAccount);\n        if (matcher.find()){\n            return null;\n        }\n\n        /* 2.加密 */\n        String encryptPassword = DigestUtils.md5DigestAsHex((SALT + userPassword).getBytes());\n        //账户不能重复\n        QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n        queryWrapper.eq("userAccount", userAccount);\n        queryWrapper.eq("userPassword", encryptPassword);\n        User user = userMapper.selectOne(queryWrapper);\n        if (user == null){\n            log.info("[UserCenter]User login failed,userAccount cannot match userPassword");\n            return null;\n        }\n    return user;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n上面查询用户是否存在的功能存在问题，因为我们设置了isDelete属性，0表示存在状态，1表示删除状态，这是一种叫做逻辑删除的数据管理方法\n\n> 通过在数据库中标记记录为“已删除”而非物理删除，来保留数据的历史痕迹，同时确保查询结果的整洁性。\n\n在MyBatis-Plus中提供了此支持\n\n逻辑删除支持 | MyBatis-Plus\n\nMyBatis-Plus 的逻辑删除功能会在执行数据库操作时自动处理逻辑删除字段。以下是它的工作方式：\n\n * 插入：逻辑删除字段的值不受限制。\n * 查找：自动添加条件，过滤掉标记为已删除的记录。\n * 更新：防止更新已删除的记录。\n * 删除：将删除操作转换为更新操作，标记记录为已删除。\n\n例如：\n\n * 删除：update user set deleted=1 where id = 1 and deleted=0\n * 查找：select id,name,deleted from user where deleted=0\n\n配置：\n\n1.在 application.yml 中配置 MyBatis-Plus 的全局逻辑删除属性：\n\nmybatis-plus:\n  global-config:\n    db-config:\n      logic-delete-field: deleted # 全局逻辑删除字段名\n      logic-delete-value: 1 # 逻辑已删除值\n      logic-not-delete-value: 0 # 逻辑未删除值\n\n\n1\n2\n3\n4\n5\n6\n\n\n2.在User实体类中使用 @TableLogic 注解\n\nimport com.baomidou.mybatisplus.annotation.TableLogic;\n\npublic class User {\n    // 其他字段...\n\n    @TableLogic\n    private Integer isDelete;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 后端登录态管理（Cookie和Session）\n\n在前端会有一个服务端发给客户端的凭证，叫做Cookie：Cookie是什么\n\n方便服务端在接收客户端请求的时候认出客户端\n\nSession 是存储在服务器端的用户会话数据。可以存储用户在网站上的临时状态，例如登录信息、购物车数据等。\n\n当用户访问一个网站时，服务器会为该用户创建一个唯一的会话标识符（Session ID），并通过 Cookie 或其他方式（如URL参数）将该标识符发送给客户端。客户端在后续请求中会携带这个标识符，服务器通过它来识别用户并恢复对应的会话数据。\n\n * Cookie 存储了 Session ID：\n\n在大多数情况下，Session 的核心机制依赖于 Cookie。\n\n服务器会将 Session ID 存储在 Cookie 中，并通过 Cookie 将它发送给客户端。\n\n客户端在后续请求中会携带这个 Cookie，服务器通过解析 Cookie 中的 Session ID 来找到对应的会话数据。\n\n * Session 数据存储在服务器端：\n\nCookie 本身并不存储用户的具体会话数据，而是存储一个标识符（Session ID）。真正的会话数据（如用户登录状态、购物车信息等）存储在服务器端，通常以文件或数据库的形式保存。\n\nCookie 和 Session 是一种协作关系。Cookie 负责在客户端存储和传递标识符，而 Session 负责在服务器端管理用户的具体数据。两者结合使用，可以实现用户状态的持久化和管理。\n\n\n# 代码编写\n\n1.在UserService与UserServiceImpl的dologin方法中添加HttpServletRequest request\n\n> HttpServletRequest是Java Servlet API中的一个接口，它封装了客户端发送的HTTP请求。当客户端通过HTTP协议访问服务器时，请求中的所有信息，包括请求头、参数等，都被封装在HttpServletRequest对象中。\n\n\n\n\n\n2.在Impl中编写代码\n\n * 记录用户的登录态（tip：打出/**+Enter会有带参数的注释）\n   \n   定义用户登录态\n   \n   ----------------------------------------\n   \n   \n   \n   编写记录用户的登录态代码\n   \n   ----------------------------------------\n   \n   用户脱敏\n   \n   脱敏的目的是避免将用户的所有信息直接暴露给调用方。例如，用户的密码、身份证号等敏感信息通常不会包含在返回的脱敏对象中。\n   \n   * User safetyUser = new User(); 通过创建一个新的用户对象，只填充部分字段（如 id、username、userAccount 等），而不包含敏感信息（如密码）。\n   * 这种方式确保了返回的用户对象是“干净的”，只包含前端需要的信息。\n   \n   实现：\n   \n   \n   \n   修改生成好的代码\n   \n   \n   \n   记得将这一步的user改为safetyUser\n   \n       /* 4.记录用户的登录态  */\n       request.getSession().setAttribute(USER_LOGIN_STATE, user);\n   \n   \n   1\n   2\n   \n   \n       /* 3.用户脱敏 */\n       User safetyUser = new User();\n       safetyUser.setId(user.getId());\n       safetyUser.setUsername(user.getUsername());\n       safetyUser.setUserAccount(user.getUserAccount());\n       safetyUser.setAvatarUrl(user.getAvatarUrl());\n       safetyUser.setGender(user.getGender());\n       safetyUser.setPhone(user.getPhone());\n       safetyUser.setEmail(user.getEmail());\n       safetyUser.setUserStatus(user.getUserStatus());\n       safetyUser.setCreateTime(user.getCreateTime());\n   \n   \n       /* 4.记录用户的登录态  */\n       request.getSession().setAttribute(USER_LOGIN_STATE, safetyUser);\n   \n       return safetyUser;\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   \n\n\n# 后端接口开发及测试\n\n控制层Controller封装请求\n\n在application.yml指定一个全局接口api\n\nserver:\n  servlet:\n    context-path: /api\n\n\n1\n2\n3\n\n\n原本访问 http://localhost:8080/users 的请求，现在会改变为 http://localhost:8080/api/users\n\nController 负责处理客户端的请求，并将处理结果返回给客户端。\n\n * 它会接收来自客户端的 HTTP 请求（如 GET、POST、PUT、DELETE 等）。\n * 通过注解（如 @RequestMapping、@GetMapping、@PostMapping 等）来定义哪些请求路径和方法会被哪个 Controller 方法处理。\n * 它可以接收请求参数（如表单数据、JSON 数据等），并将其传递给业务逻辑层。\n * Controller 方法会根据业务逻辑的处理结果，返回一个响应给客户端。响应可以是 HTML 页面、JSON 数据、XML 数据等。\n\n\n# 1. 新建Controller类\n\nController包下新建UserController.java\n\n * 添加 @RestController 注解（这个类中所有的请求的接口返回值，相应的数据类型都是 application/json）\n * 添加 @RequestMapping 注解（定义请求的路径）\n\n@RestController\n@RequestMapping("/user")\npublic class UserController {\n    \n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2. 下载插件\n\n * 下载插件 Auto filling Java call arguments 【自动填充 java 参数】（安装完成记得重启）\n\n\n# 3. 编写注册请求\n\nUserController 类中编写 register 请求\n\n * 编写注册请求自动填充了userAccount, userPassword, checkPassword\n   \n   * 封装专门用来接收请求参数的对象继承Serializable(序列化)\n     \n     序列化是将 Java 对象转换为字节流的过程，以便在网络上传输或在磁盘上存储\n     \n     继承后表明该类的对象可以被序列化，我们的**UserRegisterRequest**是用于封装用户注册请求的参数的\n   \n   添加参数，打上@Date注解（是lombok提供的一个注解，能够简化Java类的编写，自动生成常见的get、set方法\n\n * 回到UserController 引用UserRegisterRequest;打上@RequestBody注解（使得UserRegisterRequest与前端传来的参数能够对应）；写一个判断是否为空的语句\n\n * 完善代码逻辑\n   \n       @PostMapping("/register")\n       public Long userRegister(@RequestBody UserRegisterRequest userRegisterRequest) {\n           if (userRegisterRequest == null) {\n               return null;\n           }\n           String userAccount = userRegisterRequest.getUserAccount();\n           String userPassword = userRegisterRequest.getUserPassword();\n           String checkPassword = userRegisterRequest.getCheckPassword();\n           if (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword)) {\n               return null;\n           }\n           return userService.userRegister(userAccount, userPassword, checkPassword);\n       }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n\n# 4. 编写登录请求\n\n * 复制注册模块的请求，进行修改(将UserService中的doLogin方法重构为userLogin方法)\n\n    @PostMapping("/login")\n    public User userLogin(@RequestBody UserLoginRequest userLoginRequest,HttpServletRequest request) {\n        if (userLoginRequest == null) {\n            return null;\n        }\n        String userAccount = userLoginRequest.getUserAccount();\n        String userPassword = userLoginRequest.getUserPassword();\n        if (StringUtils.isAnyBlank(userAccount, userPassword)) {\n            return null;\n        }\n        return userService.userLogin(userAccount, userPassword, request);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 在model.request包中新建UserRegisterLogin类，只需要复制UserRegisterRequest类，删除其中的checkPassword重构即可\n\n\n# 5.测试\n\n创建一个HTTP Client，验证和测试服务器端的API或Web服务是否按预期工作。\n\n它会模拟客户端请求，通过发送（GET、POST、PUT、DELETE等），验证API、服务器的响应是否符合预期。\n\n\n\n生成一个POST请求，添加参数进行测试\n\n以Debug的方式启动项目\n\n打断点测试（断点测试使程序在执行到该位置时暂停。）\n\n点击左侧空白处打断点\n\n\n\n\n\n回到HTTP Client发送请求\n\n报错了( ´•̥̥̥ω•̥̥̥` )\n\n原因是不知道什么时候在Class.java里面打了一个断点，导致出现了内部异常断点，导致程序执行异常。取消即可\n\n测试完成ヾ(´∀ ˋ)ﾉ\n\n再测一下逻辑删除\n\n * 再数据库中把yupi的isDelete字段改为1\n * 启动POST请求，测试完成\n\n文字写于：广东',normalizedContent:'# 06.登录模块（后端）\n\n后端部分的登录功能\n\n\n# 功能：用户登录\n\n\n# 详细设计\n\n登录接口\n\n 1. 接收参数：用户账户、密码\n 2. 请求类型：post\n 3. 请求体：json格式的数据\n 4. 返回值：用户信息\n\n逻辑\n\n 1. 检验用户账户和密码是否合法\n    * 账户和密码不能是空\n    * 账户不小于4位\n    * 密码不小于8位\n    * 账户不包含特殊字符\n 2. 检验密码是否输入正确，与数据库中的密文密码对比\n 3. 用户脱敏，隐藏敏感信息，防止数据库中的字段泄露\n 4. 记录用户的登录态（session），将其存到服务器上（用后端springboot框架封装的服务器tomcat去记录）\n    * cookie\n 5. 返回安全脱敏的用户信息\n\n编写代码\n\n 1. 在userservice编写登录代码，写如下代码，alt+enter实现方法\n\n接下来我们要实现加密\n\n\n# md5加密&盐值\n\n（一）md5摘要算法：\n\n * md5信息摘要算法广泛使用的密码散列函数\n * md5可以产生一个128位的散列值用于唯一标识源数据\n * 项目中通常使用md5作为敏感数据的加密算法\n\n（二）特点：\n\n * 压缩性，md5生成的摘要长度固定\n * 抗修改性，源数据哪怕有一个字节变化，md5也会有巨大差异\n * 不可逆，无法通过md5反向推算源数据\n * 计算速度快\n\nmd5的加密也会在某些情景下变得易破解\n\n**彩虹表：**由于md5的计算速度很快，攻击者可以预先计算出大量常见密码的md5值，形成彩虹表，用于快速破解密码。\n\n**碰撞攻击：**存在不同的输入数据生成相同哈希值的可能性\n\nmd5对应的加密之后的信息能够通过彩虹表得到解密，这让数据并不够安全，那怎么办呢？\n\n（三）md5+盐值\n\n混淆加密，例如我们最初想要加密的字符串是test\n\n我们在加密的时候可以给test加点“盐”\n\n例如我们通过这个简单的算法：\n\npublic static string md5digest(string source,integer salt){\n    //source:需要加密的原始字符串。 salt：一个整数值，用于逐字符加盐。\n        char[] ca=source.tochararray();//将source转化为字符数组\n        for(int i=0;i<ca.length;i++){\n            ca[i]=(char)(ca[i]+salt);//给每个字符加上盐值\n        }\n        string target=new string(ca);//重新组合字符串变成target\n        string md5=digestutils.md5hex(target);//进行md5加密\n        return md5;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n这样就完成了md5+盐值混淆之后的数据\n\n\n# 加密功能\n\nfinal是java的一种关键词，用于修饰内容表示其不可变。\n\n将表示盐值的变量private static final string salt = "yupi";\n\n写在类的里面，方法的前面\n\n注解 @slf4j\n\n在类前加一个@slf4j注解\n\n@slf4j 是 lombok 提供的一种注解，用于在类中自动生成一个名为 log 的日志对象。通过使用 @slf4j 注解，可以方便地在代码中使用日志功能，而无需手动创建和初始化日志对象。\n\n注解示例：\n\n @slf4j\n public class logexample {\n }\n\n\n1\n2\n3\n\n\n在上述示例中，logexample类被标记为使用 @slf4j 注解，它将自动创建一个名为 log 的日志对象。\n\n可见lombok的官方文档：slf4j (lombok)\n\n\n# 逻辑编写\n\n可以从注册功能把代码搬过来修改，主要是去掉了checkpassword\n\n和注册不同的是，这里返回的是null，有不完美的地方，不能反馈具体的错误码\n\n    @override\n    public user dologin(string useraccount, string userpassword) {\n        /* 1.检验 */\n        if (stringutils.isanyblank(useraccount, userpassword)) {\n            return null;//空白\n        }\n        if (useraccount.length() < 4){\n            return null;\n        }\n        if (userpassword.length() < 8 ){\n            return null;\n        }\n\n        //账户不能包含特殊字符\n        string vaildateregexp = "[^a-za-z0-9]";\n        matcher matcher = pattern.compile(vaildateregexp).matcher(useraccount);\n        if (matcher.find()){\n            return null;\n        }\n\n        /* 2.加密 */\n        string encryptpassword = digestutils.md5digestashex((salt + userpassword).getbytes());\n        //账户不能重复\n        querywrapper<user> querywrapper = new querywrapper<>();\n        querywrapper.eq("useraccount", useraccount);\n        querywrapper.eq("userpassword", encryptpassword);\n        user user = usermapper.selectone(querywrapper);\n        if (user == null){\n            log.info("[usercenter]user login failed,useraccount cannot match userpassword");\n            return null;\n        }\n    return user;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n上面查询用户是否存在的功能存在问题，因为我们设置了isdelete属性，0表示存在状态，1表示删除状态，这是一种叫做逻辑删除的数据管理方法\n\n> 通过在数据库中标记记录为“已删除”而非物理删除，来保留数据的历史痕迹，同时确保查询结果的整洁性。\n\n在mybatis-plus中提供了此支持\n\n逻辑删除支持 | mybatis-plus\n\nmybatis-plus 的逻辑删除功能会在执行数据库操作时自动处理逻辑删除字段。以下是它的工作方式：\n\n * 插入：逻辑删除字段的值不受限制。\n * 查找：自动添加条件，过滤掉标记为已删除的记录。\n * 更新：防止更新已删除的记录。\n * 删除：将删除操作转换为更新操作，标记记录为已删除。\n\n例如：\n\n * 删除：update user set deleted=1 where id = 1 and deleted=0\n * 查找：select id,name,deleted from user where deleted=0\n\n配置：\n\n1.在 application.yml 中配置 mybatis-plus 的全局逻辑删除属性：\n\nmybatis-plus:\n  global-config:\n    db-config:\n      logic-delete-field: deleted # 全局逻辑删除字段名\n      logic-delete-value: 1 # 逻辑已删除值\n      logic-not-delete-value: 0 # 逻辑未删除值\n\n\n1\n2\n3\n4\n5\n6\n\n\n2.在user实体类中使用 @tablelogic 注解\n\nimport com.baomidou.mybatisplus.annotation.tablelogic;\n\npublic class user {\n    // 其他字段...\n\n    @tablelogic\n    private integer isdelete;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 后端登录态管理（cookie和session）\n\n在前端会有一个服务端发给客户端的凭证，叫做cookie：cookie是什么\n\n方便服务端在接收客户端请求的时候认出客户端\n\nsession 是存储在服务器端的用户会话数据。可以存储用户在网站上的临时状态，例如登录信息、购物车数据等。\n\n当用户访问一个网站时，服务器会为该用户创建一个唯一的会话标识符（session id），并通过 cookie 或其他方式（如url参数）将该标识符发送给客户端。客户端在后续请求中会携带这个标识符，服务器通过它来识别用户并恢复对应的会话数据。\n\n * cookie 存储了 session id：\n\n在大多数情况下，session 的核心机制依赖于 cookie。\n\n服务器会将 session id 存储在 cookie 中，并通过 cookie 将它发送给客户端。\n\n客户端在后续请求中会携带这个 cookie，服务器通过解析 cookie 中的 session id 来找到对应的会话数据。\n\n * session 数据存储在服务器端：\n\ncookie 本身并不存储用户的具体会话数据，而是存储一个标识符（session id）。真正的会话数据（如用户登录状态、购物车信息等）存储在服务器端，通常以文件或数据库的形式保存。\n\ncookie 和 session 是一种协作关系。cookie 负责在客户端存储和传递标识符，而 session 负责在服务器端管理用户的具体数据。两者结合使用，可以实现用户状态的持久化和管理。\n\n\n# 代码编写\n\n1.在userservice与userserviceimpl的dologin方法中添加httpservletrequest request\n\n> httpservletrequest是java servlet api中的一个接口，它封装了客户端发送的http请求。当客户端通过http协议访问服务器时，请求中的所有信息，包括请求头、参数等，都被封装在httpservletrequest对象中。\n\n\n\n\n\n2.在impl中编写代码\n\n * 记录用户的登录态（tip：打出/**+enter会有带参数的注释）\n   \n   定义用户登录态\n   \n   ----------------------------------------\n   \n   \n   \n   编写记录用户的登录态代码\n   \n   ----------------------------------------\n   \n   用户脱敏\n   \n   脱敏的目的是避免将用户的所有信息直接暴露给调用方。例如，用户的密码、身份证号等敏感信息通常不会包含在返回的脱敏对象中。\n   \n   * user safetyuser = new user(); 通过创建一个新的用户对象，只填充部分字段（如 id、username、useraccount 等），而不包含敏感信息（如密码）。\n   * 这种方式确保了返回的用户对象是“干净的”，只包含前端需要的信息。\n   \n   实现：\n   \n   \n   \n   修改生成好的代码\n   \n   \n   \n   记得将这一步的user改为safetyuser\n   \n       /* 4.记录用户的登录态  */\n       request.getsession().setattribute(user_login_state, user);\n   \n   \n   1\n   2\n   \n   \n       /* 3.用户脱敏 */\n       user safetyuser = new user();\n       safetyuser.setid(user.getid());\n       safetyuser.setusername(user.getusername());\n       safetyuser.setuseraccount(user.getuseraccount());\n       safetyuser.setavatarurl(user.getavatarurl());\n       safetyuser.setgender(user.getgender());\n       safetyuser.setphone(user.getphone());\n       safetyuser.setemail(user.getemail());\n       safetyuser.setuserstatus(user.getuserstatus());\n       safetyuser.setcreatetime(user.getcreatetime());\n   \n   \n       /* 4.记录用户的登录态  */\n       request.getsession().setattribute(user_login_state, safetyuser);\n   \n       return safetyuser;\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   \n\n\n# 后端接口开发及测试\n\n控制层controller封装请求\n\n在application.yml指定一个全局接口api\n\nserver:\n  servlet:\n    context-path: /api\n\n\n1\n2\n3\n\n\n原本访问 http://localhost:8080/users 的请求，现在会改变为 http://localhost:8080/api/users\n\ncontroller 负责处理客户端的请求，并将处理结果返回给客户端。\n\n * 它会接收来自客户端的 http 请求（如 get、post、put、delete 等）。\n * 通过注解（如 @requestmapping、@getmapping、@postmapping 等）来定义哪些请求路径和方法会被哪个 controller 方法处理。\n * 它可以接收请求参数（如表单数据、json 数据等），并将其传递给业务逻辑层。\n * controller 方法会根据业务逻辑的处理结果，返回一个响应给客户端。响应可以是 html 页面、json 数据、xml 数据等。\n\n\n# 1. 新建controller类\n\ncontroller包下新建usercontroller.java\n\n * 添加 @restcontroller 注解（这个类中所有的请求的接口返回值，相应的数据类型都是 application/json）\n * 添加 @requestmapping 注解（定义请求的路径）\n\n@restcontroller\n@requestmapping("/user")\npublic class usercontroller {\n    \n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2. 下载插件\n\n * 下载插件 auto filling java call arguments 【自动填充 java 参数】（安装完成记得重启）\n\n\n# 3. 编写注册请求\n\nusercontroller 类中编写 register 请求\n\n * 编写注册请求自动填充了useraccount, userpassword, checkpassword\n   \n   * 封装专门用来接收请求参数的对象继承serializable(序列化)\n     \n     序列化是将 java 对象转换为字节流的过程，以便在网络上传输或在磁盘上存储\n     \n     继承后表明该类的对象可以被序列化，我们的**userregisterrequest**是用于封装用户注册请求的参数的\n   \n   添加参数，打上@date注解（是lombok提供的一个注解，能够简化java类的编写，自动生成常见的get、set方法\n\n * 回到usercontroller 引用userregisterrequest;打上@requestbody注解（使得userregisterrequest与前端传来的参数能够对应）；写一个判断是否为空的语句\n\n * 完善代码逻辑\n   \n       @postmapping("/register")\n       public long userregister(@requestbody userregisterrequest userregisterrequest) {\n           if (userregisterrequest == null) {\n               return null;\n           }\n           string useraccount = userregisterrequest.getuseraccount();\n           string userpassword = userregisterrequest.getuserpassword();\n           string checkpassword = userregisterrequest.getcheckpassword();\n           if (stringutils.isanyblank(useraccount, userpassword, checkpassword)) {\n               return null;\n           }\n           return userservice.userregister(useraccount, userpassword, checkpassword);\n       }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n\n# 4. 编写登录请求\n\n * 复制注册模块的请求，进行修改(将userservice中的dologin方法重构为userlogin方法)\n\n    @postmapping("/login")\n    public user userlogin(@requestbody userloginrequest userloginrequest,httpservletrequest request) {\n        if (userloginrequest == null) {\n            return null;\n        }\n        string useraccount = userloginrequest.getuseraccount();\n        string userpassword = userloginrequest.getuserpassword();\n        if (stringutils.isanyblank(useraccount, userpassword)) {\n            return null;\n        }\n        return userservice.userlogin(useraccount, userpassword, request);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 在model.request包中新建userregisterlogin类，只需要复制userregisterrequest类，删除其中的checkpassword重构即可\n\n\n# 5.测试\n\n创建一个http client，验证和测试服务器端的api或web服务是否按预期工作。\n\n它会模拟客户端请求，通过发送（get、post、put、delete等），验证api、服务器的响应是否符合预期。\n\n\n\n生成一个post请求，添加参数进行测试\n\n以debug的方式启动项目\n\n打断点测试（断点测试使程序在执行到该位置时暂停。）\n\n点击左侧空白处打断点\n\n\n\n\n\n回到http client发送请求\n\n报错了( ´•ω•` )\n\n原因是不知道什么时候在class.java里面打了一个断点，导致出现了内部异常断点，导致程序执行异常。取消即可\n\n测试完成ヾ(´∀ ˋ)ﾉ\n\n再测一下逻辑删除\n\n * 再数据库中把yupi的isdelete字段改为1\n * 启动post请求，测试完成\n\n文字写于：广东',charsets:{cjk:!0}},{title:"注册模块（后端）",frontmatter:{title:"注册模块（后端）",date:"2025-04-02T12:30:05.000Z",permalink:"/projects/ea56cb/",categories:["项目","用户中心系统"],tags:["用户中心系统"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/05.%E6%B3%A8%E5%86%8C%E6%A8%A1%E5%9D%97%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/05.注册模块（后端）.md",key:"v-1be32328",path:"/projects/ea56cb/",headers:[{level:2,title:"规整项目目录",slug:"规整项目目录",normalizedTitle:"规整项目目录",charIndex:29},{level:2,title:"功能：用户注册",slug:"功能-用户注册",normalizedTitle:"功能：用户注册",charIndex:1397},{level:3,title:"1.插件安装",slug:"_1-插件安装",normalizedTitle:"1.插件安装",charIndex:1591},{level:3,title:"2.右键数据库user表",slug:"_2-右键数据库user表",normalizedTitle:"2.右键数据库user表",charIndex:1656},{level:3,title:"3.文档整合",slug:"_3-文档整合",normalizedTitle:"3.文档整合",charIndex:1699},{level:3,title:"4.测试",slug:"_4-测试",normalizedTitle:"4.测试",charIndex:1758},{level:4,title:"问题解决（debug）",slug:"问题解决-debug",normalizedTitle:"问题解决（debug）",charIndex:2305},{level:3,title:"详细设计",slug:"详细设计",normalizedTitle:"详细设计",charIndex:2586},{level:3,title:"接口测试开发",slug:"接口测试开发",normalizedTitle:"接口测试开发",charIndex:2764},{level:3,title:"注册模块的单元测试",slug:"注册模块的单元测试",normalizedTitle:"注册模块的单元测试",charIndex:5634},{level:4,title:"debug",slug:"debug",normalizedTitle:"debug",charIndex:2310},{level:4,title:"测试完成",slug:"测试完成",normalizedTitle:"测试完成",charIndex:7925}],excerpt:'<h1 id="_05-注册模块-后端"><a class="header-anchor" href="#_05-注册模块-后端">#</a> 05.注册模块（后端）</h1>\n<p>后端部分的<strong>注册</strong>功能</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"规整项目目录 功能：用户注册 1.插件安装 2.右键数据库user表 3.文档整合 4.测试 问题解决（debug） 详细设计 接口测试开发 注册模块的单元测试 debug 测试完成",content:'# 05.注册模块（后端）\n\n后端部分的注册功能\n\n\n# 规整项目目录\n\n新建controller、service、utils包\n\n回顾一下后端的架构参考@后端架构\n\nSpring Boot是五层\n\n文件                      说明                             补充说明\ncontroller              请求层/控制层                        应用程序的入口点，负责接收用户的请求并返回响应。\n                        (不做任何业务处理，只接收请求)               调用Service层的方法来处理业务逻辑，并将结果返回给前端用户\nservice                 业务逻辑层                          应用程序的核心，负责处理业务逻辑。\n                        (专门用来编写业务逻辑，例如登录注册)            接收来自Controller层的请求，调用Mapper层执行数据库操作，并将处理结果返回给Controller层。\n                                                       还可以包含一些复杂的业务逻辑处理，如事务管理、数据校验等。\nmapper / dao            数据访问层                          负责与数据库进行交互，执行数据的增删改查（CRUD）操作。\n                        (专门用于从数据库中对数据进行增删改查)           Mapper层通常包含了一系列的接口，这些接口定义了数据库操作的方法，而具体的SQL实现则位于Mapper XML文件中\nmodel / entity / pojo   实体层                            定义数据模型，即数据库表的映射实体类。\n                        (定义了一些和数据库相关的数据模型、封装类)         实体类中包含了与数据库表相对应的属性和方法（如get和set方法，toString方法，有参无参构造函数）\n                        (可能需要分层 entity、dto、vo......)\nutils                   存放一些工具类                        存放一些工具类，如加密、格式转换、日期转换等，与业务逻辑关系不大的类\n                        (如：加密、格式转换、日期转换......\n                        与业务关系不太大的类)\nstatic                  写前后端不分离的项目时，放一些静态文件            用于存放静态资源文件，如图片、CSS、JavaScript等。\n                        (例如学习 Java web 时的一些前端页面)【删】    在前后端分离的项目中，这些静态文件通常由前端框架或工具管理，因此可以考虑删除该目录\n\n\n# 功能：用户注册\n\nMybatis-X插件，自动根据数据库生成\n\n * domain（实体对象）\n\n * mapper（定义与数据库交互的接口。）\n   \n   * mapper.xml（定义了mapper对象和数据库的关联，可以在里面自己写SQL。）**\n\n * service（包含常用的增删改查）\n   \n   * serviceImpl（具体实现service的业务逻辑）\n\n\n# 1.插件安装\n\nFile -> Settings -> Plugins ->搜索 MyBatisX -> Install\n\n\n# 2.右键数据库user表\n\n点击路径自动定位当前文件夹->next\n\n下一步\n\n\n# 3.文档整合\n\n文档生成在了generator包里，我们来整合，还是很方便的\n\ndomain放到model包\n\n\n# 4.测试\n\n鼠标放在UserService.java 文件的UserService上，按住Alt+Enter，选择创建测试\n\n\n\n在测试类中添加如下代码\n\n    @Resource\n    private UserService userService;\n\n    @Test\n    void testAddUser(){\n        User user = new User();\n        userService.save(user);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n安装插件GenerateAllSetter\n\n> 一键调用一个对象的所有的set方法,get方法等 在方法上生成两个对象的转换\n\n在user上Alt+Enter\n\n生成\n\n还是要删除挺多的，像是时间，密码，这些不用自动生成，先删除掉\n\n执行测试\n\n有报错\n\norg.springframework.jdbc.BadSqlGrammarException: Error updating database. Cause: java.sql.SQLSyntaxErrorException: Unknown column \'user_account\' in \'field list\'\n\n# 问题解决（debug）\n\n * 问题原因：MyBatisX自动开启从经典数据库列名 A_COLUMN（下划线命名）到经典 Java 属性名 aColumn（驼峰命名）的类似映射。\n\n * 问题解决：在 yml 文件中添加如下配置：\n   \n   yaml复制\n   \n   mybatis-plus:\n     configuration:\n       map-underscore-to-camel-case: false\n   \n   \n   1\n   2\n   3\n   \n\n * 官网描述：使用配置 | MyBatis-Plus\n\n测试通过✔\n\n\n# 详细设计\n\n 1. 用户在前端传递账户和密码、以及校验码（todo）\n 2. 校验账户的账户、密码、检验密码是否符合要求\n    * 账户不小于4位\n    * 密码不小于8位\n    * 账户不能重复\n    * 账户不包含特殊字符\n    * 密码和校验密码相同\n 3. 对密码进行加密（避免明文存储在数据库中）\n 4. 向数据库插入用户数据\n\n\n# 接口测试开发\n\n1.src/main/java/com/msingbai/usercenter/service/UserService.java编写userRegister方法并实现\n\nboolean userRegister(String userAccount, String userPassword, String checkPassword);\n\n\n1\n\n\nAlt+Enter 在Impl中实现\n\n2.引入 Apache Commons Lang 3 库，这个库能够帮助我们进行字符串缩写、后缀判断、首字母转换、居中处理、去除特殊字符等操作\n\n3.实现UserServiceImpl\n\n完整代码\n\npackage com.msingbai.usercenter.service.impl;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport com.msingbai.usercenter.model.User;\nimport com.msingbai.usercenter.service.UserService;\nimport com.msingbai.usercenter.mapper.UserMapper;\nimport jakarta.annotation.Resource;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.DigestUtils;\n\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n\n/**\n* @author windows_yk\n* @description 针对表【user(用户)】的数据库操作Service实现\n* @createDate 2025-04-02 16:38:14\n*/\n@Service\npublic class UserServiceImpl extends ServiceImpl<UserMapper, User>\n    implements UserService{\n\n    @Resource\n    private UserMapper userMapper;\n\n    @Override\n    public long userRegister(String userAccount, String userPassword, String checkPassword) {\n        /* 1.检验 */\n        if (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword)) {\n            return -1;\n        }\n        if (userAccount.length() < 4){\n            return -1;\n        }\n        if (userPassword.length() < 8 || checkPassword.length() < 8){\n            return -1;\n        }\n\n        //账户不能包含特殊字符\n        String vaildateRegExp = "\\\\pP|\\\\pS|\\\\s+";\n        Matcher matcher = Pattern.compile(vaildateRegExp).matcher(userAccount);\n        if (!matcher.find()){\n            return -1;\n        }\n\n        //校验密码是否相同\n        if(!userPassword.equals(checkPassword)){\n            return -1;\n        }\n\n        //账户不能重复\n        QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n        queryWrapper.eq("userAccouunt", userAccount);\n        Long count = userMapper.selectCount(queryWrapper);\n        if (count == 0){\n            return -1;\n        }\n\n        /* 2.加密 */\n        final String SALT = "yupi";\n        String encryptPassword = DigestUtils.md5DigestAsHex((SALT + userPassword).getBytes());\n\n        /* 3.插入数据 */\n        User user = new User();\n        user.setUserAccount(userAccount);\n        user.setUserPassword(encryptPassword);\n        boolean saveResult = this.save(user);\n        if (!saveResult){\n            return -1;\n        }\n\n        return user.getId();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\nsrc/test/java/com/msingbai/usercenter/UserCenterApplicationTests.java编写测试，执行是否加密成功\n\n\n\n\n# 注册模块的单元测试\n\n在Impl文件中执行注册的自动生成测试代码功能\n\nsrc/main/java/com/msingbai/usercenter/service/impl/UserServiceImpl.java\n\n在src/test/java/com/msingbai/usercenter/service/UserServiceTest.java中编写测试代码\n\n * 验证在不同输入条件下，用户注册功能是否按预期返回正确的结果。\n * 覆盖多种场景：包括账号长度不足、密码为空、密码不一致、账号包含特殊字符等。\n\n小Tip\n\nCtrl+Shift+/是块注释/**/\n\n    @Test\n    void userRegister() {\n\n        /*测试用例1,密码位空*/\n        String userAccount = "yupi";\n        String userPassword = "";\n        String checkPassword = "123456";\n        long result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertEquals(-1, result);//返回-1 注册失败\n\n        /* 测试用例2，账号长度不足 */\n        userAccount = "yu";\n        result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertEquals(-1, result);\n\n        /*测试用例3，密码长度不足*/\n        userAccount = "yupi";\n        userPassword = "123456";\n        result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertEquals(-1, result);\n\n        /* 测试用例4，账号包含特殊字符 */\n        userAccount = "yu pi";\n        userPassword = "12345678";\n        result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertEquals(-1, result);\n\n        /* 测试用例5，密码不一致 */\n        checkPassword = "123456789";\n        result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertEquals(-1, result);\n\n        /*测试用例6，测试一个已有的账户名，若已有则返回-1*/\n        userAccount = "dogYupi";\n        checkPassword = "12345678";\n        result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertEquals(-1, result);\n\n        /*注册成功*/\n        userAccount = "yupi";\n        result = userService.userRegister(userAccount, userPassword, checkPassword);\n        Assertions.assertTrue(result > 0);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n遇到了报错\n\n在测试中，Assertions.assertTrue(result > 0)断言失败。result的值小于或等于0，而预期它应该大于0。\n\n修改Impl的代码，使得每个测试返回的result都不一样\n\n改成-11 -12 -13等等，一个个匹配，方便我们定位实际错误代码\n\n# debug\n\n\n\n-14的过滤特殊字符的逻辑写错了\n\n\n\n应该是如果发现了特殊字符，返回-14\n\n去掉!，改为判断true的逻辑，执行成功\n\ndebug\n\n我的数据库里没有dogYupi，它也返回了-16\n\n是代码逻辑错了，count是查询数据库里有多少个值，应该不为0时，return-16\n\n\n\n修改后，达到预期效果\n\n# 测试完成\n\n\n\n至此，全部用例测试成功\n\n文字写于：广东',normalizedContent:'# 05.注册模块（后端）\n\n后端部分的注册功能\n\n\n# 规整项目目录\n\n新建controller、service、utils包\n\n回顾一下后端的架构参考@后端架构\n\nspring boot是五层\n\n文件                      说明                             补充说明\ncontroller              请求层/控制层                        应用程序的入口点，负责接收用户的请求并返回响应。\n                        (不做任何业务处理，只接收请求)               调用service层的方法来处理业务逻辑，并将结果返回给前端用户\nservice                 业务逻辑层                          应用程序的核心，负责处理业务逻辑。\n                        (专门用来编写业务逻辑，例如登录注册)            接收来自controller层的请求，调用mapper层执行数据库操作，并将处理结果返回给controller层。\n                                                       还可以包含一些复杂的业务逻辑处理，如事务管理、数据校验等。\nmapper / dao            数据访问层                          负责与数据库进行交互，执行数据的增删改查（crud）操作。\n                        (专门用于从数据库中对数据进行增删改查)           mapper层通常包含了一系列的接口，这些接口定义了数据库操作的方法，而具体的sql实现则位于mapper xml文件中\nmodel / entity / pojo   实体层                            定义数据模型，即数据库表的映射实体类。\n                        (定义了一些和数据库相关的数据模型、封装类)         实体类中包含了与数据库表相对应的属性和方法（如get和set方法，tostring方法，有参无参构造函数）\n                        (可能需要分层 entity、dto、vo......)\nutils                   存放一些工具类                        存放一些工具类，如加密、格式转换、日期转换等，与业务逻辑关系不大的类\n                        (如：加密、格式转换、日期转换......\n                        与业务关系不太大的类)\nstatic                  写前后端不分离的项目时，放一些静态文件            用于存放静态资源文件，如图片、css、javascript等。\n                        (例如学习 java web 时的一些前端页面)【删】    在前后端分离的项目中，这些静态文件通常由前端框架或工具管理，因此可以考虑删除该目录\n\n\n# 功能：用户注册\n\nmybatis-x插件，自动根据数据库生成\n\n * domain（实体对象）\n\n * mapper（定义与数据库交互的接口。）\n   \n   * mapper.xml（定义了mapper对象和数据库的关联，可以在里面自己写sql。）**\n\n * service（包含常用的增删改查）\n   \n   * serviceimpl（具体实现service的业务逻辑）\n\n\n# 1.插件安装\n\nfile -> settings -> plugins ->搜索 mybatisx -> install\n\n\n# 2.右键数据库user表\n\n点击路径自动定位当前文件夹->next\n\n下一步\n\n\n# 3.文档整合\n\n文档生成在了generator包里，我们来整合，还是很方便的\n\ndomain放到model包\n\n\n# 4.测试\n\n鼠标放在userservice.java 文件的userservice上，按住alt+enter，选择创建测试\n\n\n\n在测试类中添加如下代码\n\n    @resource\n    private userservice userservice;\n\n    @test\n    void testadduser(){\n        user user = new user();\n        userservice.save(user);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n安装插件generateallsetter\n\n> 一键调用一个对象的所有的set方法,get方法等 在方法上生成两个对象的转换\n\n在user上alt+enter\n\n生成\n\n还是要删除挺多的，像是时间，密码，这些不用自动生成，先删除掉\n\n执行测试\n\n有报错\n\norg.springframework.jdbc.badsqlgrammarexception: error updating database. cause: java.sql.sqlsyntaxerrorexception: unknown column \'user_account\' in \'field list\'\n\n# 问题解决（debug）\n\n * 问题原因：mybatisx自动开启从经典数据库列名 a_column（下划线命名）到经典 java 属性名 acolumn（驼峰命名）的类似映射。\n\n * 问题解决：在 yml 文件中添加如下配置：\n   \n   yaml复制\n   \n   mybatis-plus:\n     configuration:\n       map-underscore-to-camel-case: false\n   \n   \n   1\n   2\n   3\n   \n\n * 官网描述：使用配置 | mybatis-plus\n\n测试通过✔\n\n\n# 详细设计\n\n 1. 用户在前端传递账户和密码、以及校验码（todo）\n 2. 校验账户的账户、密码、检验密码是否符合要求\n    * 账户不小于4位\n    * 密码不小于8位\n    * 账户不能重复\n    * 账户不包含特殊字符\n    * 密码和校验密码相同\n 3. 对密码进行加密（避免明文存储在数据库中）\n 4. 向数据库插入用户数据\n\n\n# 接口测试开发\n\n1.src/main/java/com/msingbai/usercenter/service/userservice.java编写userregister方法并实现\n\nboolean userregister(string useraccount, string userpassword, string checkpassword);\n\n\n1\n\n\nalt+enter 在impl中实现\n\n2.引入 apache commons lang 3 库，这个库能够帮助我们进行字符串缩写、后缀判断、首字母转换、居中处理、去除特殊字符等操作\n\n3.实现userserviceimpl\n\n完整代码\n\npackage com.msingbai.usercenter.service.impl;\n\nimport com.baomidou.mybatisplus.core.conditions.query.querywrapper;\nimport com.baomidou.mybatisplus.extension.service.impl.serviceimpl;\nimport com.msingbai.usercenter.model.user;\nimport com.msingbai.usercenter.service.userservice;\nimport com.msingbai.usercenter.mapper.usermapper;\nimport jakarta.annotation.resource;\nimport org.apache.commons.lang3.stringutils;\nimport org.springframework.stereotype.service;\nimport org.springframework.util.digestutils;\n\nimport java.util.regex.matcher;\nimport java.util.regex.pattern;\n\n\n/**\n* @author windows_yk\n* @description 针对表【user(用户)】的数据库操作service实现\n* @createdate 2025-04-02 16:38:14\n*/\n@service\npublic class userserviceimpl extends serviceimpl<usermapper, user>\n    implements userservice{\n\n    @resource\n    private usermapper usermapper;\n\n    @override\n    public long userregister(string useraccount, string userpassword, string checkpassword) {\n        /* 1.检验 */\n        if (stringutils.isanyblank(useraccount, userpassword, checkpassword)) {\n            return -1;\n        }\n        if (useraccount.length() < 4){\n            return -1;\n        }\n        if (userpassword.length() < 8 || checkpassword.length() < 8){\n            return -1;\n        }\n\n        //账户不能包含特殊字符\n        string vaildateregexp = "\\\\pp|\\\\ps|\\\\s+";\n        matcher matcher = pattern.compile(vaildateregexp).matcher(useraccount);\n        if (!matcher.find()){\n            return -1;\n        }\n\n        //校验密码是否相同\n        if(!userpassword.equals(checkpassword)){\n            return -1;\n        }\n\n        //账户不能重复\n        querywrapper<user> querywrapper = new querywrapper<>();\n        querywrapper.eq("useraccouunt", useraccount);\n        long count = usermapper.selectcount(querywrapper);\n        if (count == 0){\n            return -1;\n        }\n\n        /* 2.加密 */\n        final string salt = "yupi";\n        string encryptpassword = digestutils.md5digestashex((salt + userpassword).getbytes());\n\n        /* 3.插入数据 */\n        user user = new user();\n        user.setuseraccount(useraccount);\n        user.setuserpassword(encryptpassword);\n        boolean saveresult = this.save(user);\n        if (!saveresult){\n            return -1;\n        }\n\n        return user.getid();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\nsrc/test/java/com/msingbai/usercenter/usercenterapplicationtests.java编写测试，执行是否加密成功\n\n\n\n\n# 注册模块的单元测试\n\n在impl文件中执行注册的自动生成测试代码功能\n\nsrc/main/java/com/msingbai/usercenter/service/impl/userserviceimpl.java\n\n在src/test/java/com/msingbai/usercenter/service/userservicetest.java中编写测试代码\n\n * 验证在不同输入条件下，用户注册功能是否按预期返回正确的结果。\n * 覆盖多种场景：包括账号长度不足、密码为空、密码不一致、账号包含特殊字符等。\n\n小tip\n\nctrl+shift+/是块注释/**/\n\n    @test\n    void userregister() {\n\n        /*测试用例1,密码位空*/\n        string useraccount = "yupi";\n        string userpassword = "";\n        string checkpassword = "123456";\n        long result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.assertequals(-1, result);//返回-1 注册失败\n\n        /* 测试用例2，账号长度不足 */\n        useraccount = "yu";\n        result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.assertequals(-1, result);\n\n        /*测试用例3，密码长度不足*/\n        useraccount = "yupi";\n        userpassword = "123456";\n        result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.assertequals(-1, result);\n\n        /* 测试用例4，账号包含特殊字符 */\n        useraccount = "yu pi";\n        userpassword = "12345678";\n        result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.assertequals(-1, result);\n\n        /* 测试用例5，密码不一致 */\n        checkpassword = "123456789";\n        result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.assertequals(-1, result);\n\n        /*测试用例6，测试一个已有的账户名，若已有则返回-1*/\n        useraccount = "dogyupi";\n        checkpassword = "12345678";\n        result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.assertequals(-1, result);\n\n        /*注册成功*/\n        useraccount = "yupi";\n        result = userservice.userregister(useraccount, userpassword, checkpassword);\n        assertions.asserttrue(result > 0);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n遇到了报错\n\n在测试中，assertions.asserttrue(result > 0)断言失败。result的值小于或等于0，而预期它应该大于0。\n\n修改impl的代码，使得每个测试返回的result都不一样\n\n改成-11 -12 -13等等，一个个匹配，方便我们定位实际错误代码\n\n# debug\n\n\n\n-14的过滤特殊字符的逻辑写错了\n\n\n\n应该是如果发现了特殊字符，返回-14\n\n去掉!，改为判断true的逻辑，执行成功\n\ndebug\n\n我的数据库里没有dogyupi，它也返回了-16\n\n是代码逻辑错了，count是查询数据库里有多少个值，应该不为0时，return-16\n\n\n\n修改后，达到预期效果\n\n# 测试完成\n\n\n\n至此，全部用例测试成功\n\n文字写于：广东',charsets:{cjk:!0}},{title:"管理模块（后端）",frontmatter:{title:"管理模块（后端）",date:"2025-04-05T11:46:54.000Z",permalink:"/projects/6d7d3b/",categories:["项目","用户中心系统"],tags:["用户中心系统"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/07.%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/07.管理模块（后端）.md",key:"v-3f108a34",path:"/projects/6d7d3b/",headers:[{level:2,title:"后端开发",slug:"后端开发",normalizedTitle:"后端开发",charIndex:67},{level:3,title:"用户脱敏",slug:"用户脱敏",normalizedTitle:"用户脱敏",charIndex:714}],excerpt:'<h1 id="_07-管理模块-后端"><a class="header-anchor" href="#_07-管理模块-后端">#</a> 07.管理模块（后端）</h1>\n<p>用户中心系统的<strong>管理功能</strong></p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"后端开发 用户脱敏",content:'# 07.管理模块（后端）\n\n用户中心系统的管理功能\n\n需求设计\n\n * 1.查询用户（根据用户名查询）\n * 2.删除用户\n\n\n# 后端开发\n\n1.UserController里编写查询用户请求\n\n    @GetMapping("/search")\n    public List<User> searchUsers(String username) {\n        QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n        if (StringUtils.isAnyBlank(username)) {\n            queryWrapper.like("username", username);\n        }\n        return userService.list(queryWrapper);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n2.UserController里编写删除用户请求\n\n    @PostMapping("delete")\n    public boolean deleteUser(@RequestBody long id) {\n        if (id <= 0) {\n            return false;\n        }\n        return userService.removeById(id);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n3.我们还需要一个管理人员的检验，使得接口需要获得权限后方可调用\n\n在UserServiceImpl中的用户脱敏加入一行\n\nsafetyUser.setUserRole(user.getUserRole());\n\n\n1\n\n\n我们需要实现调用的方法，在UserService文件里加入Impl写过的用户登录态键\n\n\n\n在UserController里写判断角色权限的方法\n\n    /**\n     *\n     * 是否为管理员\n     */\n    private boolean isAdmin(HttpServletRequest request) {\n        //仅管理员可查询\n        Object userObj = request.getSession().getAttribute(UserService.USER_LOGIN_STATE);\n        User user = (User) userObj;\n        return user != null && user.getUserRole() == 1;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n在delete和search接口中调用isAdmin\n\n    @GetMapping("/search")\n    public List<User> searchUsers(String username,HttpServletRequest request) {\n        if (!isAdmin(request)) {\n            return null;\n        }\n        QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n        if (StringUtils.isAnyBlank(username)) {\n            queryWrapper.like("username", username);\n        }\n        return userService.list(queryWrapper);\n    }\n\n    @PostMapping("/delete")\n    public boolean deleteUser(@RequestBody long id, HttpServletRequest request) {\n        if(!isAdmin(request)) {\n            return false;\n        }\n        if (id <= 0) {\n            return false;\n        }\n        return userService.removeById(id);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n4.在application.yml配置文件里增加session的失效时间\n\n5.测试\n\n在UserController中创建一个新的HTTP Client执行GET请求\n\n发现什么也没有返回\n\n设计方法进行测试\n\n\n\n提示没有管理员权限，于是先进行登录管理员账户，以管理员账户的权限去发送search请求\n\n### 登录请求\nPOST http://localhost:8080/api/user/login\nContent-Type: application/json\n\n{\n  "userAccount": "yupi",\n  "userPassword": "12345678"\n}\n\n### 提取会话 ID 或 JWT\n@sessionId = {{response-headers.JSESSIONID}}\n@jwtToken = {{response-body.token}}\n\n### 全部搜索（带会话 ID）\nGET http://localhost:8080/api/user/search\nCookie: JSESSIONID={{sessionId}}\n\n### 精确搜索（带会话 ID）\nGET http://localhost:8080/api/user/search?username=yupi\nCookie: JSESSIONID={{sessionId}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n但返回的还是空白，咋回事？\n\n原来是代码逻辑问题= = （本教程是根据做过的人写的教程复刻的，对方运行成功了，而我发现已有两处是写了相反逻辑的步骤) 无妨，这锻炼了自己debug的能力\n\n最后执行结果\n\n完整代码\n\n    @GetMapping("/search")\n    public List<User> searchUsers(String username,HttpServletRequest request) {\n        if (!isAdmin(request)) {\n            System.out.println("非管理员权限");\n            return null;\n        }\n        QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n        if (StringUtils.isNotBlank(username)) {\n            queryWrapper.like("username", username);\n        }\n        System.out.println("查询成功");\n        return userService.list(queryWrapper);\n    }\n\n    @PostMapping("/delete")\n    public boolean deleteUser(@RequestBody long id, HttpServletRequest request) {\n        if(!isAdmin(request)) {\n            System.out.println("非管理员权限");\n            return false;\n        }\n        if (id <= 0) {\n            System.out.println("数据库中无人员");\n            return false;\n        }\n        System.out.println("返回成功");\n        return userService.removeById(id);\n    }\n\n    /**\n     *\n     * 是否为管理员\n     */\n    private boolean isAdmin(HttpServletRequest request) {\n        //仅管理员可查询\n        Object userObj = request.getSession().getAttribute(UserConstant.USER_LOGIN_STATE);\n        User user = (User) userObj;\n        return user != null && user.getUserRole() == UserConstant.ADMIN_ROLE;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n我把USER_LOGIN_STATE和ADMIN_ROLE放到了新的包constant的UserConstant接口类里，方便调用\n\npackage com.msingbai.usercenter.constant;\n\npublic interface UserConstant {\n\n    /**\n     * 用户态登录键\n     */\n    String USER_LOGIN_STATE = "userLoginState";\n    Integer ADMIN_ROLE = 1;\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 用户脱敏\n\n在UserServicImpl中新建一个getSafetyUser方法，将原来用户脱敏的代码复制进去。将原来用户脱敏的位置改成调用该方法。在方法前加上@Override标签，在UserService引入该方法\n\n\n\n文字写于：广东',normalizedContent:'# 07.管理模块（后端）\n\n用户中心系统的管理功能\n\n需求设计\n\n * 1.查询用户（根据用户名查询）\n * 2.删除用户\n\n\n# 后端开发\n\n1.usercontroller里编写查询用户请求\n\n    @getmapping("/search")\n    public list<user> searchusers(string username) {\n        querywrapper<user> querywrapper = new querywrapper<>();\n        if (stringutils.isanyblank(username)) {\n            querywrapper.like("username", username);\n        }\n        return userservice.list(querywrapper);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n2.usercontroller里编写删除用户请求\n\n    @postmapping("delete")\n    public boolean deleteuser(@requestbody long id) {\n        if (id <= 0) {\n            return false;\n        }\n        return userservice.removebyid(id);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n3.我们还需要一个管理人员的检验，使得接口需要获得权限后方可调用\n\n在userserviceimpl中的用户脱敏加入一行\n\nsafetyuser.setuserrole(user.getuserrole());\n\n\n1\n\n\n我们需要实现调用的方法，在userservice文件里加入impl写过的用户登录态键\n\n\n\n在usercontroller里写判断角色权限的方法\n\n    /**\n     *\n     * 是否为管理员\n     */\n    private boolean isadmin(httpservletrequest request) {\n        //仅管理员可查询\n        object userobj = request.getsession().getattribute(userservice.user_login_state);\n        user user = (user) userobj;\n        return user != null && user.getuserrole() == 1;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n在delete和search接口中调用isadmin\n\n    @getmapping("/search")\n    public list<user> searchusers(string username,httpservletrequest request) {\n        if (!isadmin(request)) {\n            return null;\n        }\n        querywrapper<user> querywrapper = new querywrapper<>();\n        if (stringutils.isanyblank(username)) {\n            querywrapper.like("username", username);\n        }\n        return userservice.list(querywrapper);\n    }\n\n    @postmapping("/delete")\n    public boolean deleteuser(@requestbody long id, httpservletrequest request) {\n        if(!isadmin(request)) {\n            return false;\n        }\n        if (id <= 0) {\n            return false;\n        }\n        return userservice.removebyid(id);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n4.在application.yml配置文件里增加session的失效时间\n\n5.测试\n\n在usercontroller中创建一个新的http client执行get请求\n\n发现什么也没有返回\n\n设计方法进行测试\n\n\n\n提示没有管理员权限，于是先进行登录管理员账户，以管理员账户的权限去发送search请求\n\n### 登录请求\npost http://localhost:8080/api/user/login\ncontent-type: application/json\n\n{\n  "useraccount": "yupi",\n  "userpassword": "12345678"\n}\n\n### 提取会话 id 或 jwt\n@sessionid = {{response-headers.jsessionid}}\n@jwttoken = {{response-body.token}}\n\n### 全部搜索（带会话 id）\nget http://localhost:8080/api/user/search\ncookie: jsessionid={{sessionid}}\n\n### 精确搜索（带会话 id）\nget http://localhost:8080/api/user/search?username=yupi\ncookie: jsessionid={{sessionid}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n但返回的还是空白，咋回事？\n\n原来是代码逻辑问题= = （本教程是根据做过的人写的教程复刻的，对方运行成功了，而我发现已有两处是写了相反逻辑的步骤) 无妨，这锻炼了自己debug的能力\n\n最后执行结果\n\n完整代码\n\n    @getmapping("/search")\n    public list<user> searchusers(string username,httpservletrequest request) {\n        if (!isadmin(request)) {\n            system.out.println("非管理员权限");\n            return null;\n        }\n        querywrapper<user> querywrapper = new querywrapper<>();\n        if (stringutils.isnotblank(username)) {\n            querywrapper.like("username", username);\n        }\n        system.out.println("查询成功");\n        return userservice.list(querywrapper);\n    }\n\n    @postmapping("/delete")\n    public boolean deleteuser(@requestbody long id, httpservletrequest request) {\n        if(!isadmin(request)) {\n            system.out.println("非管理员权限");\n            return false;\n        }\n        if (id <= 0) {\n            system.out.println("数据库中无人员");\n            return false;\n        }\n        system.out.println("返回成功");\n        return userservice.removebyid(id);\n    }\n\n    /**\n     *\n     * 是否为管理员\n     */\n    private boolean isadmin(httpservletrequest request) {\n        //仅管理员可查询\n        object userobj = request.getsession().getattribute(userconstant.user_login_state);\n        user user = (user) userobj;\n        return user != null && user.getuserrole() == userconstant.admin_role;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n我把user_login_state和admin_role放到了新的包constant的userconstant接口类里，方便调用\n\npackage com.msingbai.usercenter.constant;\n\npublic interface userconstant {\n\n    /**\n     * 用户态登录键\n     */\n    string user_login_state = "userloginstate";\n    integer admin_role = 1;\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 用户脱敏\n\n在userservicimpl中新建一个getsafetyuser方法，将原来用户脱敏的代码复制进去。将原来用户脱敏的位置改成调用该方法。在方法前加上@override标签，在userservice引入该方法\n\n\n\n文字写于：广东',charsets:{cjk:!0}},{title:"Ant Design Pro前端初始化",frontmatter:{title:"Ant Design Pro前端初始化",date:"2025-04-07T15:13:51.000Z",permalink:"/projects/659246/",categories:["项目","用户中心系统"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/08.Ant%20Design%20Pro%E5%89%8D%E7%AB%AF%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"04.项目/01.用户中心系统/08.Ant Design Pro前端初始化.md",key:"v-24a7616d",path:"/projects/659246/",headers:[{level:2,title:"项目初始化",slug:"项目初始化",normalizedTitle:"项目初始化",charIndex:69},{level:3,title:"组件安装",slug:"组件安装",normalizedTitle:"组件安装",charIndex:79},{level:3,title:"配置umi UI",slug:"配置umi-ui",normalizedTitle:"配置umi ui",charIndex:636},{level:3,title:"框架瘦身",slug:"框架瘦身",normalizedTitle:"框架瘦身",charIndex:731},{level:3,title:"项目目录",slug:"项目目录",normalizedTitle:"项目目录",charIndex:780},{level:3,title:"标签页logo和标题",slug:"标签页logo和标题",normalizedTitle:"标签页logo和标题",charIndex:2108},{level:2,title:"前端页面开发及验证",slug:"前端页面开发及验证",normalizedTitle:"前端页面开发及验证",charIndex:2148},{level:3,title:"修改footer",slug:"修改footer",normalizedTitle:"修改footer",charIndex:2162},{level:3,title:"修改Logo",slug:"修改logo",normalizedTitle:"修改logo",charIndex:2262},{level:3,title:"精简功能",slug:"精简功能",normalizedTitle:"精简功能",charIndex:2309},{level:4,title:"精简后的界面",slug:"精简后的界面",normalizedTitle:"精简后的界面",charIndex:10223},{level:3,title:"查看登录的提交方式",slug:"查看登录的提交方式",normalizedTitle:"查看登录的提交方式",charIndex:10236},{level:2,title:"前后端联调",slug:"前后端联调",normalizedTitle:"前后端联调",charIndex:10433},{level:4,title:"Ant Design Pro请求",slug:"ant-design-pro请求",normalizedTitle:"ant design pro请求",charIndex:10688},{level:4,title:"跨域",slug:"跨域",normalizedTitle:"跨域",charIndex:10820},{level:4,title:"设置代理",slug:"设置代理",normalizedTitle:"设置代理",charIndex:11844}],excerpt:'<h1 id="_08-ant-design-pro前端初始化"><a class="header-anchor" href="#_08-ant-design-pro前端初始化">#</a> 08.Ant Design Pro前端初始化</h1>\n<p>由于更换了更详细的教程，前端部分和后端部分对接不上，把前端部分重新初始化一次</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"项目初始化 组件安装 配置umi UI 框架瘦身 项目目录 标签页logo和标题 前端页面开发及验证 修改footer 修改Logo 精简功能 精简后的界面 查看登录的提交方式 前后端联调 Ant Design Pro请求 跨域 设置代理",content:"# 08.Ant Design Pro前端初始化\n\n由于更换了更详细的教程，前端部分和后端部分对接不上，把前端部分重新初始化一次\n\n\n# 项目初始化\n\n\n# 组件安装\n\n打开cmd，下载蚂蚁金服的设计组件ant-design-pro\n\nnpm i @ant-design/pro-cli@3.1.0 -g\n\n进入要创建项目的文件目录下，输入\n\npro create myapp\n\n\n\n选择umi@3、simple\n\n用WebStorm打开，右下角会提示可以运行npm的安装，等待依赖自动安装\n\n安装完成后，在package.json的start运行项目\n\n注意自己使用的node版本，若版本太高可能需要将start修改成\n\n\"start\": \"cross-env NODE_OPTIONS=--openssl-legacy-provider UMI_ENV=dev umi dev\"\n\n否则会出现错误，这个错误是因为 Node.js v22.14.0 默认使用了更严格的 OpenSSL 安全策略导致的\n\n运行start后\n\n顺便把start:dev也改一下\n\n\"start:dev\": \"cross-env REACT_APP_ENV=dev MOCK=none NODE_OPTIONS=--openssl-legacy-provider UMI_ENV=dev umi dev\",\n\ndev模式中的MOCK = none 是关闭模拟数据 此时不涉及后台数据\n\n\n# 配置umi UI\n\n点击终端，输入npm install --save-dev @umijs/preset-ui\n\n安装好后，启动start，打开local地址可以看到右下角的ui\n\n\n# 框架瘦身\n\n在package.json中找到i18n-remove（移除国际化脚本）执行\n\n\n# 项目目录\n\n├── config            # umi 配置，包含路由，构建等配置【下面的oneapi.json（定义整个项目用到的接口）】\n├── mock              # 本地模拟数据\n├── public\n│   └── favicon.png   # 一些静态资源（logo、图标等）\n│                   # Favicon\n├── src\n│   ├── assets        # 本地静态资源\n│   ├── components    # 业务通用组件\n│   ├── e2e           # 集成测试用例【可删】\n│   ├── layouts       # 通用布局\n│   ├── models        # 全局 dva model\n│   ├── pages         # 业务页面入口和常用模板\n│   ├── services      # 后台接口服务【下面的swagger（接口文档工具）可删】\n│   ├── utils         # 工具库\n│   ├── locales       # 国际化资源【可删】\n│   ├── global.less   # 全局样式\n│   └── global.ts     # 全局 JS【可删】\n├── tests            # 测试工具【可删】\n├── README.md\n├── package.json\n├── jest.config.ts   # 测试工具【可删】\n└── playwright.config.ts # 自动化测试工具，帮助在火狐、谷歌自动测试，不用真实打开浏览器【删】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n其他文件介绍\n\n以下是图中内容的转录：\n\n文件名                    描述\napp.tsx                项目全局入口文件，定义了整个项目中使用的公共数据（比如用户信息）\nglobal.less            全局引用样式（尽量不动），可理解为 css\nglobal.tsx             全局脚本文件，可理解为 js\nservice-worker.js      一些前端页面的缓存\ntypings.d.ts           定义了一些 ts 的类型，类似C语言中的宏定义（#）\n.editorconfig          编辑器的配置\n.eslintrc.js           检查 js 语法是否规范\nprettierrc.js          美化前端代码的工具\njest.config.js         测试工具【可删】\nstylelintrc.js         检查 css 语法是否规范\nplaywright.config.ts   自动化测试工具，帮助在火狐、谷歌自动测试，不用真实打开浏览器【可删】\nassess.ts              控制用户的访问权限【链接】\n\n\n# 标签页logo和标题\n\n标题和加载页 - Ant Design Pro\n\n\n# 前端页面开发及验证\n\n\n# 修改footer\n\n1.在src/components/Footer/index.tsx修改\n\n2.修改国际化文件：\\src\\locales\\zh-CN.js(已进行框架瘦身，此步骤可省去)\n\n\n# 修改Logo\n\n1.新建constants包，新建index.tx文件，编写全局常量\n\n\n# 精简功能\n\n注释掉手机号登录、微博、微信等功能\n\nimport Footer from '@/components/Footer';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\nimport {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport { Alert, message, Tabs } from 'antd';\nimport React, { useState } from 'react';\nimport { history, useModel } from 'umi';\nimport styles from './index.less';\nimport { SYSTEM_LOGO } from '@/constants';\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => (\n  <Alert\n    style={{\n      marginBottom: 24,\n    }}\n    message={content}\n    type=\"error\"\n    showIcon\n  />\n);\nconst Login: React.FC = () => {\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\n  const [type, setType] = useState<string>('account');\n  const { initialState, setInitialState } = useModel('@@initialState');\n  const fetchUserInfo = async () => {\n    const userInfo = await initialState?.fetchUserInfo?.();\n    if (userInfo) {\n      await setInitialState((s) => ({\n        ...s,\n        currentUser: userInfo,\n      }));\n    }\n  };\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 登录\n      const msg = await login({\n        ...values,\n        type,\n      });\n      if (msg.status === 'ok') {\n        const defaultLoginSuccessMessage = '登录成功！';\n        message.success(defaultLoginSuccessMessage);\n        await fetchUserInfo();\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        if (!history) return;\n        const { query } = history.location;\n        const { redirect } = query as {\n          redirect: string;\n        };\n        history.push(redirect || '/');\n        return;\n      }\n      console.log(msg);\n      // 如果失败去设置用户错误信息\n      setUserLoginState(msg);\n    } catch (error) {\n      const defaultLoginFailureMessage = '登录失败，请重试！';\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n  const { status, type: loginType } = userLoginState;\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <LoginForm\n          // logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          logo={<img alt=\"logo\" src={SYSTEM_LOGO} />}\n          title=\"用户中心系统\"\n          subTitle={'A designing UserCenter for studying——msingbai'}\n          initialValues={{\n            autoLogin: true,\n          }}\n          // actions={[\n          //   '其他登录方式 :',\n          //   <AlipayCircleOutlined key=\"AlipayCircleOutlined\" className={styles.icon} />,\n          //   <TaobaoCircleOutlined key=\"TaobaoCircleOutlined\" className={styles.icon} />,\n          //   <WeiboCircleOutlined key=\"WeiboCircleOutlined\" className={styles.icon} />,\n          // ]}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.LoginParams);\n          }}\n        >\n          <Tabs activeKey={type} onChange={setType}>\n            <Tabs.TabPane key=\"account\" tab={'账户密码登录'} />\n            {/*<Tabs.TabPane key=\"mobile\" tab={'手机号登录'} />*/}\n          </Tabs>\n\n          {status === 'error' && loginType === 'account' && (\n            // <LoginMessage content={'错误的用户名和密码(admin/ant.design)'} />\n            <LoginMessage content={'错误的账号和密码'} />\n          )}\n          {type === 'account' && (\n            <>\n              <ProFormText\n                name=\"username\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <UserOutlined className={styles.prefixIcon} />,\n                }}\n                // placeholder={'用户名: admin or user'}\n                placeholder={'请输入账号'}\n                rules={[\n                  {\n                    required: true,\n                    // message: '用户名是必填项！',\n                    message: '账号是必填项！',\n                  },\n                ]}\n              />\n              <ProFormText.Password\n                name=\"password\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined className={styles.prefixIcon} />,\n                }}\n                // placeholder={'密码: ant.design'}\n                placeholder={'请输入密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '密码是必填项！',\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && loginType === 'mobile' && <LoginMessage content=\"验证码错误\" />}\n          {/*{type === 'mobile' && (*/}\n          {/*  <>*/}\n          {/*    <ProFormText*/}\n          {/*      fieldProps={{*/}\n          {/*        size: 'large',*/}\n          {/*        prefix: <MobileOutlined className={styles.prefixIcon} />,*/}\n          {/*      }}*/}\n          {/*      name=\"mobile\"*/}\n          {/*      placeholder={'请输入手机号！'}*/}\n          {/*      rules={[*/}\n          {/*        {*/}\n          {/*          required: true,*/}\n          {/*          message: '手机号是必填项！',*/}\n          {/*        },*/}\n          {/*        {*/}\n          {/*          pattern: /^1\\d{10}$/,*/}\n          {/*          message: '不合法的手机号！',*/}\n          {/*        },*/}\n          {/*      ]}*/}\n          {/*    />*/}\n          {/*    <ProFormCaptcha*/}\n          {/*      fieldProps={{*/}\n          {/*        size: 'large',*/}\n          {/*        prefix: <LockOutlined className={styles.prefixIcon} />,*/}\n          {/*      }}*/}\n          {/*      captchaProps={{*/}\n          {/*        size: 'large',*/}\n          {/*      }}*/}\n          {/*      placeholder={'请输入验证码！'}*/}\n          {/*      captchaTextRender={(timing, count) => {*/}\n          {/*        if (timing) {*/}\n          {/*          return `${count} ${'秒后重新获取'}`;*/}\n          {/*        }*/}\n          {/*        return '获取验证码';*/}\n          {/*      }}*/}\n          {/*      name=\"captcha\"*/}\n          {/*      rules={[*/}\n          {/*        {*/}\n          {/*          required: true,*/}\n          {/*          message: '验证码是必填项！',*/}\n          {/*        },*/}\n          {/*      ]}*/}\n          {/*      onGetCaptcha={async (phone) => {*/}\n          {/*        const result = await getFakeCaptcha({*/}\n          {/*          phone,*/}\n          {/*        });*/}\n          {/*        if (result === false) {*/}\n          {/*          return;*/}\n          {/*        }*/}\n          {/*        message.success('获取验证码成功！验证码为：1234');*/}\n          {/*      }}*/}\n          {/*    />*/}\n          {/*  </>*/}\n          {/*)}*/}\n          <div\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <ProFormCheckbox noStyle name=\"autoLogin\">\n              自动登录\n            </ProFormCheckbox>\n            <a\n              style={{\n                float: 'right',\n              }}\n              // href=\"{PLANET_LINK}\"\n              // target=\"_blank\" rel=\"noreferrer\"\n            >\n              忘记密码 ?\n            </a>\n          </div>\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\nexport default Login;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n\n\n# 精简后的界面\n\n\n\n\n# 查看登录的提交方式\n\n进入此参数\n\n将账号和密码的参数重构，与后端字段保持一致\n\n\n\n进入/login方法\n\n\n\n找到LoginResult\n\n\n\n记录此格式\n\n  type LoginResult = {\n    status?: string;\n    type?: string;\n    currentAuthority?: string;\n  };\n\n\n1\n2\n3\n4\n5\n\n\n\n# 前后端联调\n\n * 前端需要向后端发送请求\n\n * 前端ajax请求后端\n\n * axios封装了ajax\n\n * request由ant design进行了再封装\n   \n   * 追踪request的源码：用到了umi的插件、requestConfig是一个配置\n     \n     进入request\n     \n     \n     \n     进入getRequestMethod方法\n     \n     \n     \n     找到plugin，显示是umi插件\n     \n     \n\n# Ant Design Pro请求\n\n1.在Ant Design Pro搜索请求\n\n\n\n2.复制代码粘贴到app.tsx文件中修改\n\n\n\n\n\n3.修改api.ts文件中的登陆接口访问的地址\n\n\n\n4.进行登陆测试\n\n使用开发者工具查看-网络-login-标头\n\n# 跨域\n\n前端的地址：http://localhost:8000/\n\n后端的地址：http://localhost:8080/\n\n跨域是什么：\n\n端口不一样，就是跨域。两个页面的协议（protocol），主机（host）和端口号（port）任意不同即为跨域\n\n协议不同：（http/https）\n\n域名不同：（google/baidu）\n\n端口号不同（8000/8080）\n\n解决：有两种方案可以解决跨域（1.搭建代理 2.后端支持跨域（不够安全，可能会允许其他网站访问资源。））\n\n以下文字摘自：终于有人把正向代理和反向代理解释的明明白白了！-腾讯云开发者社区-腾讯云\n\n**正向代理：**位于客户端和目标服务器（后端）之间，客户端通过代理服务器来请求目标服务器的资源。主要服务于客户端\n\n\n\n通过正向代理服务器访问目标服务器，目标服务器是不知道真正的客户端是谁的，甚至不知道访问自己的是一个代理\n\n * 通过代理服务器，可以突破自身IP访问限制，访问国外网站，教育网等。\n * 提高了访问速度。通常代理服务器都设置一个较大的硬盘缓冲区，会将部分请求的响应保存到缓冲区中，当其他用户再访问相同的信息时， 则直接由缓冲区中取出信息，传给用户，以提高访问速度。\n * 上网者也可以通过这种方法隐藏自己的IP，免受攻击。但代理服务器知道\n\n----------------------------------------\n\n**反向代理：**位于服务器和客户端之间，客户端请求首先到达反向代理服务器，然后由代理服务器将请求转发到一个或多个后端服务器。主要服务于服务器\n\n\n\n反向代理，其实是\"代理服务器\"代理了\"目标服务器\"，去和\"客户端\"进行交互。\n\n通过反向代理服务器访问目标服务器时，客户端是不知道真正的目标服务器是谁的，甚至不知道自己访问的是一个代理。\n\n反向代理的用途有：\n\n * 1.隐藏服务器真实IP。使用反向代理，可以对客户端隐藏服务器的IP地址。\n * 2.负载均衡。反向代理服务器可以做负载均衡，根据所有真实服务器的负载情况，将客户端请求分发到不同的真实服务器上。\n * 3.提高访问速度。反向代理服务器可以对于静态内容及短时间内有大量访问请求的动态内容提供缓存服务，提高访问速度。\n\n正向代理一般是客户端架设的，比如在自己的机器上安装一个代理软件。而反向代理一般是服务器架设的，比如在自己的机器集群中部署一个反向代理服务器。\n\n# 设置代理\n\n在proxy.tx文件里修改代理到哪个域名\n\n\n\n在api.ts文件里修改api访问路径\n\n\n\n进行登录测试\n\n\n\n可以看到url的地址是正确的\n\n但是怎么是OPTIONS请求？正是我们做了代理，遇到了CORS策略。\n\n当涉及到跨域时，并且是POST请求时，本地服务器会先发送一个OPTIONS请求到服务器，如果服务器认为OPTIONS请求时无危险性且认可的，那么在允许本地服务器发送POST请求；\n\n但是如果后端认为OPTIONS请求是危险且不成功的那么会直接阻止本地服务器发送其他请求。\n\ndebug\n\n服务端阻止了接收这个请求\n\n * 我们在服务端新建一个config包\n\n * 创建一个新的 Java 类文件 GlobalCorsConfig.java。\n\n * 编写代码，实现 WebMvcConfigurer 接口，并重写 addCorsMappings 方法。\n\npackage com.msingbai.usercenter.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class GlobalCorsConfig implements WebMvcConfigurer {\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        // 配置允许跨域的路径\n        registry.addMapping(\"/**\") // 允许所有路径跨域\n                .allowedOrigins(\"http://localhost:8000\") // 允许的来源\n                .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\") // 允许的 HTTP 方法\n                .allowedHeaders(\"*\") // 允许的请求头\n                .allowCredentials(true) // 是否允许携带凭证（如 cookies）\n                .maxAge(3600); // 预检请求的结果有效期（单位：秒）\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n断点测试\n\n在后端的UserController中这个位置打一个断点，再进行测试\n\n\n\n大功告成！\n\n\n\n文字写于：广东",normalizedContent:"# 08.ant design pro前端初始化\n\n由于更换了更详细的教程，前端部分和后端部分对接不上，把前端部分重新初始化一次\n\n\n# 项目初始化\n\n\n# 组件安装\n\n打开cmd，下载蚂蚁金服的设计组件ant-design-pro\n\nnpm i @ant-design/pro-cli@3.1.0 -g\n\n进入要创建项目的文件目录下，输入\n\npro create myapp\n\n\n\n选择umi@3、simple\n\n用webstorm打开，右下角会提示可以运行npm的安装，等待依赖自动安装\n\n安装完成后，在package.json的start运行项目\n\n注意自己使用的node版本，若版本太高可能需要将start修改成\n\n\"start\": \"cross-env node_options=--openssl-legacy-provider umi_env=dev umi dev\"\n\n否则会出现错误，这个错误是因为 node.js v22.14.0 默认使用了更严格的 openssl 安全策略导致的\n\n运行start后\n\n顺便把start:dev也改一下\n\n\"start:dev\": \"cross-env react_app_env=dev mock=none node_options=--openssl-legacy-provider umi_env=dev umi dev\",\n\ndev模式中的mock = none 是关闭模拟数据 此时不涉及后台数据\n\n\n# 配置umi ui\n\n点击终端，输入npm install --save-dev @umijs/preset-ui\n\n安装好后，启动start，打开local地址可以看到右下角的ui\n\n\n# 框架瘦身\n\n在package.json中找到i18n-remove（移除国际化脚本）执行\n\n\n# 项目目录\n\n├── config            # umi 配置，包含路由，构建等配置【下面的oneapi.json（定义整个项目用到的接口）】\n├── mock              # 本地模拟数据\n├── public\n│   └── favicon.png   # 一些静态资源（logo、图标等）\n│                   # favicon\n├── src\n│   ├── assets        # 本地静态资源\n│   ├── components    # 业务通用组件\n│   ├── e2e           # 集成测试用例【可删】\n│   ├── layouts       # 通用布局\n│   ├── models        # 全局 dva model\n│   ├── pages         # 业务页面入口和常用模板\n│   ├── services      # 后台接口服务【下面的swagger（接口文档工具）可删】\n│   ├── utils         # 工具库\n│   ├── locales       # 国际化资源【可删】\n│   ├── global.less   # 全局样式\n│   └── global.ts     # 全局 js【可删】\n├── tests            # 测试工具【可删】\n├── readme.md\n├── package.json\n├── jest.config.ts   # 测试工具【可删】\n└── playwright.config.ts # 自动化测试工具，帮助在火狐、谷歌自动测试，不用真实打开浏览器【删】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n其他文件介绍\n\n以下是图中内容的转录：\n\n文件名                    描述\napp.tsx                项目全局入口文件，定义了整个项目中使用的公共数据（比如用户信息）\nglobal.less            全局引用样式（尽量不动），可理解为 css\nglobal.tsx             全局脚本文件，可理解为 js\nservice-worker.js      一些前端页面的缓存\ntypings.d.ts           定义了一些 ts 的类型，类似c语言中的宏定义（#）\n.editorconfig          编辑器的配置\n.eslintrc.js           检查 js 语法是否规范\nprettierrc.js          美化前端代码的工具\njest.config.js         测试工具【可删】\nstylelintrc.js         检查 css 语法是否规范\nplaywright.config.ts   自动化测试工具，帮助在火狐、谷歌自动测试，不用真实打开浏览器【可删】\nassess.ts              控制用户的访问权限【链接】\n\n\n# 标签页logo和标题\n\n标题和加载页 - ant design pro\n\n\n# 前端页面开发及验证\n\n\n# 修改footer\n\n1.在src/components/footer/index.tsx修改\n\n2.修改国际化文件：\\src\\locales\\zh-cn.js(已进行框架瘦身，此步骤可省去)\n\n\n# 修改logo\n\n1.新建constants包，新建index.tx文件，编写全局常量\n\n\n# 精简功能\n\n注释掉手机号登录、微博、微信等功能\n\nimport footer from '@/components/footer';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getfakecaptcha } from '@/services/ant-design-pro/login';\nimport {\n  alipaycircleoutlined,\n  lockoutlined,\n  mobileoutlined,\n  taobaocircleoutlined,\n  useroutlined,\n  weibocircleoutlined,\n} from '@ant-design/icons';\nimport {\n  loginform,\n  proformcaptcha,\n  proformcheckbox,\n  proformtext,\n} from '@ant-design/pro-components';\nimport { alert, message, tabs } from 'antd';\nimport react, { usestate } from 'react';\nimport { history, usemodel } from 'umi';\nimport styles from './index.less';\nimport { system_logo } from '@/constants';\nconst loginmessage: react.fc<{\n  content: string;\n}> = ({ content }) => (\n  <alert\n    style={{\n      marginbottom: 24,\n    }}\n    message={content}\n    type=\"error\"\n    showicon\n  />\n);\nconst login: react.fc = () => {\n  const [userloginstate, setuserloginstate] = usestate<api.loginresult>({});\n  const [type, settype] = usestate<string>('account');\n  const { initialstate, setinitialstate } = usemodel('@@initialstate');\n  const fetchuserinfo = async () => {\n    const userinfo = await initialstate?.fetchuserinfo?.();\n    if (userinfo) {\n      await setinitialstate((s) => ({\n        ...s,\n        currentuser: userinfo,\n      }));\n    }\n  };\n  const handlesubmit = async (values: api.loginparams) => {\n    try {\n      // 登录\n      const msg = await login({\n        ...values,\n        type,\n      });\n      if (msg.status === 'ok') {\n        const defaultloginsuccessmessage = '登录成功！';\n        message.success(defaultloginsuccessmessage);\n        await fetchuserinfo();\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        if (!history) return;\n        const { query } = history.location;\n        const { redirect } = query as {\n          redirect: string;\n        };\n        history.push(redirect || '/');\n        return;\n      }\n      console.log(msg);\n      // 如果失败去设置用户错误信息\n      setuserloginstate(msg);\n    } catch (error) {\n      const defaultloginfailuremessage = '登录失败，请重试！';\n      message.error(defaultloginfailuremessage);\n    }\n  };\n  const { status, type: logintype } = userloginstate;\n  return (\n    <div classname={styles.container}>\n      <div classname={styles.content}>\n        <loginform\n          // logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          logo={<img alt=\"logo\" src={system_logo} />}\n          title=\"用户中心系统\"\n          subtitle={'a designing usercenter for studying——msingbai'}\n          initialvalues={{\n            autologin: true,\n          }}\n          // actions={[\n          //   '其他登录方式 :',\n          //   <alipaycircleoutlined key=\"alipaycircleoutlined\" classname={styles.icon} />,\n          //   <taobaocircleoutlined key=\"taobaocircleoutlined\" classname={styles.icon} />,\n          //   <weibocircleoutlined key=\"weibocircleoutlined\" classname={styles.icon} />,\n          // ]}\n          onfinish={async (values) => {\n            await handlesubmit(values as api.loginparams);\n          }}\n        >\n          <tabs activekey={type} onchange={settype}>\n            <tabs.tabpane key=\"account\" tab={'账户密码登录'} />\n            {/*<tabs.tabpane key=\"mobile\" tab={'手机号登录'} />*/}\n          </tabs>\n\n          {status === 'error' && logintype === 'account' && (\n            // <loginmessage content={'错误的用户名和密码(admin/ant.design)'} />\n            <loginmessage content={'错误的账号和密码'} />\n          )}\n          {type === 'account' && (\n            <>\n              <proformtext\n                name=\"username\"\n                fieldprops={{\n                  size: 'large',\n                  prefix: <useroutlined classname={styles.prefixicon} />,\n                }}\n                // placeholder={'用户名: admin or user'}\n                placeholder={'请输入账号'}\n                rules={[\n                  {\n                    required: true,\n                    // message: '用户名是必填项！',\n                    message: '账号是必填项！',\n                  },\n                ]}\n              />\n              <proformtext.password\n                name=\"password\"\n                fieldprops={{\n                  size: 'large',\n                  prefix: <lockoutlined classname={styles.prefixicon} />,\n                }}\n                // placeholder={'密码: ant.design'}\n                placeholder={'请输入密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '密码是必填项！',\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && logintype === 'mobile' && <loginmessage content=\"验证码错误\" />}\n          {/*{type === 'mobile' && (*/}\n          {/*  <>*/}\n          {/*    <proformtext*/}\n          {/*      fieldprops={{*/}\n          {/*        size: 'large',*/}\n          {/*        prefix: <mobileoutlined classname={styles.prefixicon} />,*/}\n          {/*      }}*/}\n          {/*      name=\"mobile\"*/}\n          {/*      placeholder={'请输入手机号！'}*/}\n          {/*      rules={[*/}\n          {/*        {*/}\n          {/*          required: true,*/}\n          {/*          message: '手机号是必填项！',*/}\n          {/*        },*/}\n          {/*        {*/}\n          {/*          pattern: /^1\\d{10}$/,*/}\n          {/*          message: '不合法的手机号！',*/}\n          {/*        },*/}\n          {/*      ]}*/}\n          {/*    />*/}\n          {/*    <proformcaptcha*/}\n          {/*      fieldprops={{*/}\n          {/*        size: 'large',*/}\n          {/*        prefix: <lockoutlined classname={styles.prefixicon} />,*/}\n          {/*      }}*/}\n          {/*      captchaprops={{*/}\n          {/*        size: 'large',*/}\n          {/*      }}*/}\n          {/*      placeholder={'请输入验证码！'}*/}\n          {/*      captchatextrender={(timing, count) => {*/}\n          {/*        if (timing) {*/}\n          {/*          return `${count} ${'秒后重新获取'}`;*/}\n          {/*        }*/}\n          {/*        return '获取验证码';*/}\n          {/*      }}*/}\n          {/*      name=\"captcha\"*/}\n          {/*      rules={[*/}\n          {/*        {*/}\n          {/*          required: true,*/}\n          {/*          message: '验证码是必填项！',*/}\n          {/*        },*/}\n          {/*      ]}*/}\n          {/*      ongetcaptcha={async (phone) => {*/}\n          {/*        const result = await getfakecaptcha({*/}\n          {/*          phone,*/}\n          {/*        });*/}\n          {/*        if (result === false) {*/}\n          {/*          return;*/}\n          {/*        }*/}\n          {/*        message.success('获取验证码成功！验证码为：1234');*/}\n          {/*      }}*/}\n          {/*    />*/}\n          {/*  </>*/}\n          {/*)}*/}\n          <div\n            style={{\n              marginbottom: 24,\n            }}\n          >\n            <proformcheckbox nostyle name=\"autologin\">\n              自动登录\n            </proformcheckbox>\n            <a\n              style={{\n                float: 'right',\n              }}\n              // href=\"{planet_link}\"\n              // target=\"_blank\" rel=\"noreferrer\"\n            >\n              忘记密码 ?\n            </a>\n          </div>\n        </loginform>\n      </div>\n      <footer />\n    </div>\n  );\n};\nexport default login;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n\n\n# 精简后的界面\n\n\n\n\n# 查看登录的提交方式\n\n进入此参数\n\n将账号和密码的参数重构，与后端字段保持一致\n\n\n\n进入/login方法\n\n\n\n找到loginresult\n\n\n\n记录此格式\n\n  type loginresult = {\n    status?: string;\n    type?: string;\n    currentauthority?: string;\n  };\n\n\n1\n2\n3\n4\n5\n\n\n\n# 前后端联调\n\n * 前端需要向后端发送请求\n\n * 前端ajax请求后端\n\n * axios封装了ajax\n\n * request由ant design进行了再封装\n   \n   * 追踪request的源码：用到了umi的插件、requestconfig是一个配置\n     \n     进入request\n     \n     \n     \n     进入getrequestmethod方法\n     \n     \n     \n     找到plugin，显示是umi插件\n     \n     \n\n# ant design pro请求\n\n1.在ant design pro搜索请求\n\n\n\n2.复制代码粘贴到app.tsx文件中修改\n\n\n\n\n\n3.修改api.ts文件中的登陆接口访问的地址\n\n\n\n4.进行登陆测试\n\n使用开发者工具查看-网络-login-标头\n\n# 跨域\n\n前端的地址：http://localhost:8000/\n\n后端的地址：http://localhost:8080/\n\n跨域是什么：\n\n端口不一样，就是跨域。两个页面的协议（protocol），主机（host）和端口号（port）任意不同即为跨域\n\n协议不同：（http/https）\n\n域名不同：（google/baidu）\n\n端口号不同（8000/8080）\n\n解决：有两种方案可以解决跨域（1.搭建代理 2.后端支持跨域（不够安全，可能会允许其他网站访问资源。））\n\n以下文字摘自：终于有人把正向代理和反向代理解释的明明白白了！-腾讯云开发者社区-腾讯云\n\n**正向代理：**位于客户端和目标服务器（后端）之间，客户端通过代理服务器来请求目标服务器的资源。主要服务于客户端\n\n\n\n通过正向代理服务器访问目标服务器，目标服务器是不知道真正的客户端是谁的，甚至不知道访问自己的是一个代理\n\n * 通过代理服务器，可以突破自身ip访问限制，访问国外网站，教育网等。\n * 提高了访问速度。通常代理服务器都设置一个较大的硬盘缓冲区，会将部分请求的响应保存到缓冲区中，当其他用户再访问相同的信息时， 则直接由缓冲区中取出信息，传给用户，以提高访问速度。\n * 上网者也可以通过这种方法隐藏自己的ip，免受攻击。但代理服务器知道\n\n----------------------------------------\n\n**反向代理：**位于服务器和客户端之间，客户端请求首先到达反向代理服务器，然后由代理服务器将请求转发到一个或多个后端服务器。主要服务于服务器\n\n\n\n反向代理，其实是\"代理服务器\"代理了\"目标服务器\"，去和\"客户端\"进行交互。\n\n通过反向代理服务器访问目标服务器时，客户端是不知道真正的目标服务器是谁的，甚至不知道自己访问的是一个代理。\n\n反向代理的用途有：\n\n * 1.隐藏服务器真实ip。使用反向代理，可以对客户端隐藏服务器的ip地址。\n * 2.负载均衡。反向代理服务器可以做负载均衡，根据所有真实服务器的负载情况，将客户端请求分发到不同的真实服务器上。\n * 3.提高访问速度。反向代理服务器可以对于静态内容及短时间内有大量访问请求的动态内容提供缓存服务，提高访问速度。\n\n正向代理一般是客户端架设的，比如在自己的机器上安装一个代理软件。而反向代理一般是服务器架设的，比如在自己的机器集群中部署一个反向代理服务器。\n\n# 设置代理\n\n在proxy.tx文件里修改代理到哪个域名\n\n\n\n在api.ts文件里修改api访问路径\n\n\n\n进行登录测试\n\n\n\n可以看到url的地址是正确的\n\n但是怎么是options请求？正是我们做了代理，遇到了cors策略。\n\n当涉及到跨域时，并且是post请求时，本地服务器会先发送一个options请求到服务器，如果服务器认为options请求时无危险性且认可的，那么在允许本地服务器发送post请求；\n\n但是如果后端认为options请求是危险且不成功的那么会直接阻止本地服务器发送其他请求。\n\ndebug\n\n服务端阻止了接收这个请求\n\n * 我们在服务端新建一个config包\n\n * 创建一个新的 java 类文件 globalcorsconfig.java。\n\n * 编写代码，实现 webmvcconfigurer 接口，并重写 addcorsmappings 方法。\n\npackage com.msingbai.usercenter.config;\n\nimport org.springframework.context.annotation.bean;\nimport org.springframework.context.annotation.configuration;\nimport org.springframework.web.servlet.config.annotation.corsregistry;\nimport org.springframework.web.servlet.config.annotation.webmvcconfigurer;\n\n@configuration\npublic class globalcorsconfig implements webmvcconfigurer {\n    @override\n    public void addcorsmappings(corsregistry registry) {\n        // 配置允许跨域的路径\n        registry.addmapping(\"/**\") // 允许所有路径跨域\n                .allowedorigins(\"http://localhost:8000\") // 允许的来源\n                .allowedmethods(\"get\", \"post\", \"put\", \"delete\", \"options\") // 允许的 http 方法\n                .allowedheaders(\"*\") // 允许的请求头\n                .allowcredentials(true) // 是否允许携带凭证（如 cookies）\n                .maxage(3600); // 预检请求的结果有效期（单位：秒）\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n断点测试\n\n在后端的usercontroller中这个位置打一个断点，再进行测试\n\n\n\n大功告成！\n\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"登录+注册模块（前端）",frontmatter:{title:"登录+注册模块（前端）",date:"2025-04-07T18:03:50.000Z",permalink:"/projects/32822d/",categories:["项目","用户中心系统"],tags:["用户中心系统","前端"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/09.%E7%99%BB%E5%BD%95+%E6%B3%A8%E5%86%8C%E6%A8%A1%E5%9D%97%EF%BC%88%E5%89%8D%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/09.登录+注册模块（前端）.md",key:"v-08d42dca",path:"/projects/32822d/",headers:[{level:2,title:"登录功能",slug:"登录功能",normalizedTitle:"登录功能",charIndex:29},{level:2,title:"注册功能",slug:"注册功能",normalizedTitle:"注册功能",charIndex:34},{level:3,title:"路由跳转逻辑",slug:"路由跳转逻辑",normalizedTitle:"路由跳转逻辑",charIndex:2726},{level:3,title:"修改前端样式",slug:"修改前端样式",normalizedTitle:"修改前端样式",charIndex:3233},{level:3,title:"前端-表单组件使用",slug:"前端-表单组件使用",normalizedTitle:"前端-表单组件使用",charIndex:8722},{level:4,title:"按钮修改",slug:"按钮修改",normalizedTitle:"按钮修改",charIndex:8735},{level:4,title:"提交逻辑",slug:"提交逻辑",normalizedTitle:"提交逻辑",charIndex:8856},{level:4,title:"注册逻辑",slug:"注册逻辑",normalizedTitle:"注册逻辑",charIndex:8973},{level:4,title:"断点测试",slug:"断点测试",normalizedTitle:"断点测试",charIndex:11141},{level:2,title:"登录页面优化",slug:"登录页面优化",normalizedTitle:"登录页面优化",charIndex:11535},{level:3,title:"优化后效果",slug:"优化后效果",normalizedTitle:"优化后效果",charIndex:12324}],excerpt:'<h1 id="_09-登录-注册模块-前端"><a class="header-anchor" href="#_09-登录-注册模块-前端">#</a> 09.登录+注册模块（前端）</h1>\n<p>这是用户中心<strong>前端</strong>部分的<strong>登录功能</strong>和<strong>注册功能</strong></p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"登录功能 注册功能 路由跳转逻辑 修改前端样式 前端-表单组件使用 按钮修改 提交逻辑 注册逻辑 断点测试 登录页面优化 优化后效果",content:"# 09.登录+注册模块（前端）\n\n这是用户中心前端部分的登录功能和注册功能\n\n\n# 登录功能\n\n * 在pages\\user\\Login\\index.tsx中\n\nusername => userAccount、password => userPassword,与后端保持一致【Ctrl+R】\n\n * 对密码进行长度校验【Ant Design】\n   \n   名称    说明                                                            类型\n   min   必须设置，type：string 类型为字符串最小长度；number 类型时为最小值；array 类型时为数组最小长度   number\n\n                placeholder={'请输入密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '密码是必填项！',\n                  },\n                  //增加长度检验\n                  {\n                    min: 8,\n                    type: 'string',\n                    message: '密码长度不能小于8位！',\n                  },\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 修改登录判断逻辑const handleSubmit\n\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 登录\n      // const msg = await login({\n      const user = await login({\n        ...values,\n        type,\n      });\n      // if (msg.status === 'ok') {\n      if (user.status === 'ok') {//需要修改\n        const defaultLoginSuccessMessage = '登录成功！';\n        message.success(defaultLoginSuccessMessage);\n        await fetchUserInfo();\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        if (!history) return;\n        const { query } = history.location;\n        const { redirect } = query as {\n          redirect: string;\n        };\n        history.push(redirect || '/');\n        return;\n      }\n      // console.log(msg);\n      // // 如果失败去设置用户错误信息\n      // setUserLoginState(msg);\n      setUserLoginState(user);\n    } catch (error) {\n      const defaultLoginFailureMessage = '登录失败，请重试！';\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n此时遇到一个问题\n\n响应成功了，登录的提示没成功弹出\n\n\n\n原因是前端的逻辑里，有一句if (user.status === 'ok')\n\n这个在后端还没实现，我们直接把它改为if (user)\n\n登录逻辑成功\n\n\n\n\n# 注册功能\n\n * 复制Login文件夹粘贴为Register\n\n * 将下面两个位置的Login = > Register\n\nconst Register: React.FC = () => {\n  ......\n};\nexport default Register;\n\n\n1\n2\n3\n4\n\n * config/routes.ts文件中增加register的路由（即地址栏中输入的跳转）\n\n\n\n此时访问 user/register 页面会自动重定向到 user/login 页面，无法进入 register 页面\n\n原因： app.tsx 是项目的全局文件，里面有两个判断逻辑会对每个页面进行校验，不允许进入任何页面是合适的\n\n  const fetchUserInfo = async () => {\n    try {\n      const msg = await queryCurrentUser();\n      return msg.data;\n    } catch (error) {\n      history.push(loginPath);\n    }\n    return undefined;\n  };\n  // 页面路径判断 如果不是登录页面，执行\n  if (history.location.pathname !== loginPath) {\n    const currentUser = await fetchUserInfo();\n    return {\n      fetchUserInfo,\n      currentUser,\n      settings: defaultSettings,\n    };\n  }\n//如果用户未登录（fetchUserInfo 抛出错误），则将用户重定向到登录页面。\n//如果用户已登录，获取用户信息并将其传递给应用的其他部分。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 路由跳转逻辑\n\n修改下面两处逻辑，检测若未登录不做跳转\n\n定义一个白名单数组，包含不需要登录就可以访问的路径，如注册页面和登录页面。\n\n\n\n\n\nconst fetchUserInfo = async () => {\n  try {\n    const msg = await queryCurrentUser();\n    return msg.data;\n  } catch (error) {\n    // history.push(loginPath);\n  }\n  return undefined;\n};\n\nconst whiteList = ['/user/register', loginPath];\nif (whiteList.includes(location.pathname)) {\n  return;\n}\n\n// 如果没有登录，重定向到 Login\nif (!(initialState?.currentUser)) {\n  history.push(loginPath);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 修改前端样式\n\n在Register\\index.tsx中\n\n * 增加确认密码框\n * 删改部分逻辑\n\n完整代码\n\nimport Footer from '@/components/Footer';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getFakeCaptcha } from '@/services/ant-design-pro/login';\nimport {\n  AlipayCircleOutlined,\n  LockOutlined,\n  MobileOutlined,\n  TaobaoCircleOutlined,\n  UserOutlined,\n  WeiboCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  LoginForm,\n  ProFormCaptcha,\n  ProFormCheckbox,\n  ProFormText,\n} from '@ant-design/pro-components';\nimport { Alert, message, Tabs } from 'antd';\nimport React, { useState } from 'react';\nimport { history, useModel } from 'umi';\nimport styles from './index.less';\nimport { SYSTEM_LOGO } from '@/constants';\nconst LoginMessage: React.FC<{\n  content: string;\n}> = ({ content }) => (\n  <Alert\n    style={{\n      marginBottom: 24,\n    }}\n    message={content}\n    type=\"error\"\n    showIcon\n  />\n);\nconst Register: React.FC = () => {\n  const [userLoginState, setUserLoginState] = useState<API.LoginResult>({});\n  const [type, setType] = useState<string>('account');\n\n  const handleSubmit = async (values: API.LoginParams) => {\n    try {\n      // 注册\n      const user = await login({\n        ...values,\n        type,\n      });\n      // if (msg.status === 'ok') {\n      if (user) {\n        const defaultLoginSuccessMessage = '注册成功！';\n        message.success(defaultLoginSuccessMessage);\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        if (!history) return;\n        const { query } = history.location;\n        const { redirect } = query as {\n          redirect: string;\n        };\n        history.push(redirect || '/');\n        return;\n      }\n      setUserLoginState(user);\n    } catch (error) {\n      const defaultLoginFailureMessage = '注册失败，请重试！';\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n  const { status, type: loginType } = userLoginState;\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <LoginForm\n          // logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          logo={<img alt=\"logo\" src={SYSTEM_LOGO} />}\n          title=\"用户中心系统\"\n          subTitle={'A designing UserCenter for studying——msingbai'}\n          initialValues={{\n            autoLogin: true,\n          }}\n          onFinish={async (values) => {\n            await handleSubmit(values as API.LoginParams);\n          }}\n        >\n          <Tabs activeKey={type} onChange={setType}>\n            <Tabs.TabPane key=\"account\" tab={'账户密码注册'} />\n            {/*<Tabs.TabPane key=\"mobile\" tab={'手机号注册'} />*/}\n          </Tabs>\n\n          {status === 'error' && loginType === 'account' && (\n            // <LoginMessage content={'错误的用户名和密码(admin/ant.design)'} />\n            <LoginMessage content={'错误的账号和密码'} />\n          )}\n          {type === 'account' && (\n            <>\n              <ProFormText\n                name=\"userAccount\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <UserOutlined className={styles.prefixIcon} />,\n                }}\n                // placeholder={'用户名: admin or user'}\n                placeholder={'请输入账号'}\n                rules={[\n                  {\n                    required: true,\n                    // message: '用户名是必填项！',\n                    message: '账号是必填项！',\n                  },\n                ]}\n              />\n              <ProFormText.Password\n                name=\"userPassword\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined className={styles.prefixIcon} />,\n                }}\n                // placeholder={'密码: ant.design'}\n                placeholder={'请输入密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '密码是必填项！',\n                  },\n                  //增加长度检验\n                  {\n                    min: 8,\n                    type: 'string',\n                    message: '密码长度不能小于8位！',\n                  },\n                ]}\n              />\n              {/*确认密码*/}\n              <ProFormText.Password\n                name=\"checkPassword\"\n                fieldProps={{\n                  size: 'large',\n                  prefix: <LockOutlined className={styles.prefixIcon} />,\n                }}\n                // placeholder={'密码: ant.design'}\n                placeholder={'请确认密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '确认密码是必填项！',\n                  },\n                  //增加长度检验\n                  {\n                    min: 8,\n                    type: 'string',\n                    message: '密码长度不能小于8位！',\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && loginType === 'mobile' && <LoginMessage content=\"验证码错误\" />}\n        </LoginForm>\n      </div>\n      <Footer />\n    </div>\n  );\n};\nexport default Register;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n\n\n# 样式预览\n\n\n\n此时登录按钮没有变成注册，是因为looginForm组件的原因\n\n\n# 前端-表单组件使用\n\n# 按钮修改\n\n找到组件库的源文件\n\nnode_modules/@ant-design/pro-form/lib/layouts/LoginForm/index.js\n\n\n\n回到注册页面 将按钮组件改标题\n\n\n\n可以看到已经改动成功啦\n\n\n\n# 提交逻辑\n\n定位到LoginParams（src/services/ant-design-pro/typings.d.ts）\n\n新增注册的参数\n\n回到index.tsx将LoginParams替换成RegisterParams\n\n# 注册逻辑\n\n增加校验密码逻辑\n\n\n\n增加注册接口\n\n\n\nRegisterResultsrc/services/ant-design-pro/typings.d.ts\n\n删除Login相关，Register无关的代码\n\n// `const` LoginMessage: React.FC<{\n//   `content`: string;\n// }> = ({ `content` }) => (\n//   <Alert\n//     style={{\n//       marginBottom: 24,\n//     }}\n//     message={`content`}\n//     type=\"error\"\n//     showIcon\n//   />\n// );\n\n`const` Register: React.FC = () => {\n  // `const` [userLoginState, setUserLoginState] = `useState`<API.LoginResult>({});\n  `const` [type, setType] = `useState`<string>('account');\n\n  // 表单提交\n  `const` handleSubmit = `async` (values: API.RegisterParams) => {\n    `const` { userPassword, checkPassword } = values;\n    // 校验\n    `if` (userPassword !== checkPassword) {\n      message.error('两次密码输入不一致');\n      `return`;\n    }\n\n    `try` {\n      // 注册\n      `const` id = `await` register(values); //user改为id\n      `if` (id > 0) {\n        `const` defaultLoginSuccessMessage = '注册成功！';\n        message.success(defaultLoginSuccessMessage);\n\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        `if` (history) `return`;\n        `const` { query } = history.location;\n        `const` { redirect } = query as {\n          redirect: string;\n        };\n        history.push(`/user/login?redirect=` <u>{ redirect }</u>);\n        `return`;\n      } `else` {\n        `throw` `new` Error(`register error id = ` <u>${ id }</u>`);\n      }\n    } `catch` (error) {\n      `const` defaultLoginFailureMessage = '注册失败，请重试！';\n      message.error(defaultLoginFailureMessage);\n    }\n  };\n\n  // `const` { status, type: loginType } = userLoginState;\n  `return` (\n    <>\n      <Tabs activeKey={type} onChange={setType}>\n        <Tabs.TabPane key=\"account\" tab=<u>{'账户密码注册'}</u> />\n      </Tabs>\n\n      // {status === 'error' && loginType === 'account' && (\n      //   <LoginMessage content=<u>{'错误的账户和密码'}</u> />\n      // )}\n      \n      ......\n\n      // {status === 'error' && loginType === 'mobile' && <LoginMessage content=\"验证码错误\" />}\n    </LoginForm>\n    .....\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\n# 断点测试\n\n注册失败\n\n判断是前端的问题，\n\n\n\n灰色部分为前端发送的请求，里面多了一个UserRegisterRequest套住了，获取不到\n\nms是毫秒，千分之一秒\n\n测试了一下Login的功能，前端没有问题，格式也是一致的\n\n取消断点\n\n测试已有账号的注册，返回正常\n\n测试新账号，能够注册成功，回到登陆界面\n\n\n\n此时有一个问题\n\n\n\n用户没有rediact参数\n\n删除+修改注册页面的这段代码\n\n        //const {redirect} = query as {\n          //redirect: string;\n        //};删除\n        history.push({\n          pathname: 'user/login',\n          query,\n        })\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 登录页面优化\n\n完整代码\n\n          <div\n            style={{\n              display: 'flex',                   //将div设置为flex容器\n              marginBottom: 24,\n              justifyContent: 'space-between',  //将子元素均分在容器内，使得他们间距相等\n              alignItems: 'center',             //使得子元素在垂直方向上居中对齐\n            }}\n          >\n            <ProFormCheckbox noStyle name=\"autoLogin\">\n              自动登录\n            </ProFormCheckbox>\n            <Link to=\"/user/register\" > 注册账号 </Link>\n            <a\n              style={{\n                float: 'right',\n              }}\n              href = \"mailto:xxx@email.com\"//发邮件联系管理员\n              target=\"_blank\" rel=\"noreferrer\"\n            >\n              忘记密码 ?\n            </a>\n          </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 优化后效果\n\n文字写于：广东",normalizedContent:"# 09.登录+注册模块（前端）\n\n这是用户中心前端部分的登录功能和注册功能\n\n\n# 登录功能\n\n * 在pages\\user\\login\\index.tsx中\n\nusername => useraccount、password => userpassword,与后端保持一致【ctrl+r】\n\n * 对密码进行长度校验【ant design】\n   \n   名称    说明                                                            类型\n   min   必须设置，type：string 类型为字符串最小长度；number 类型时为最小值；array 类型时为数组最小长度   number\n\n                placeholder={'请输入密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '密码是必填项！',\n                  },\n                  //增加长度检验\n                  {\n                    min: 8,\n                    type: 'string',\n                    message: '密码长度不能小于8位！',\n                  },\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 修改登录判断逻辑const handlesubmit\n\n  const handlesubmit = async (values: api.loginparams) => {\n    try {\n      // 登录\n      // const msg = await login({\n      const user = await login({\n        ...values,\n        type,\n      });\n      // if (msg.status === 'ok') {\n      if (user.status === 'ok') {//需要修改\n        const defaultloginsuccessmessage = '登录成功！';\n        message.success(defaultloginsuccessmessage);\n        await fetchuserinfo();\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        if (!history) return;\n        const { query } = history.location;\n        const { redirect } = query as {\n          redirect: string;\n        };\n        history.push(redirect || '/');\n        return;\n      }\n      // console.log(msg);\n      // // 如果失败去设置用户错误信息\n      // setuserloginstate(msg);\n      setuserloginstate(user);\n    } catch (error) {\n      const defaultloginfailuremessage = '登录失败，请重试！';\n      message.error(defaultloginfailuremessage);\n    }\n  };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n此时遇到一个问题\n\n响应成功了，登录的提示没成功弹出\n\n\n\n原因是前端的逻辑里，有一句if (user.status === 'ok')\n\n这个在后端还没实现，我们直接把它改为if (user)\n\n登录逻辑成功\n\n\n\n\n# 注册功能\n\n * 复制login文件夹粘贴为register\n\n * 将下面两个位置的login = > register\n\nconst register: react.fc = () => {\n  ......\n};\nexport default register;\n\n\n1\n2\n3\n4\n\n * config/routes.ts文件中增加register的路由（即地址栏中输入的跳转）\n\n\n\n此时访问 user/register 页面会自动重定向到 user/login 页面，无法进入 register 页面\n\n原因： app.tsx 是项目的全局文件，里面有两个判断逻辑会对每个页面进行校验，不允许进入任何页面是合适的\n\n  const fetchuserinfo = async () => {\n    try {\n      const msg = await querycurrentuser();\n      return msg.data;\n    } catch (error) {\n      history.push(loginpath);\n    }\n    return undefined;\n  };\n  // 页面路径判断 如果不是登录页面，执行\n  if (history.location.pathname !== loginpath) {\n    const currentuser = await fetchuserinfo();\n    return {\n      fetchuserinfo,\n      currentuser,\n      settings: defaultsettings,\n    };\n  }\n//如果用户未登录（fetchuserinfo 抛出错误），则将用户重定向到登录页面。\n//如果用户已登录，获取用户信息并将其传递给应用的其他部分。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 路由跳转逻辑\n\n修改下面两处逻辑，检测若未登录不做跳转\n\n定义一个白名单数组，包含不需要登录就可以访问的路径，如注册页面和登录页面。\n\n\n\n\n\nconst fetchuserinfo = async () => {\n  try {\n    const msg = await querycurrentuser();\n    return msg.data;\n  } catch (error) {\n    // history.push(loginpath);\n  }\n  return undefined;\n};\n\nconst whitelist = ['/user/register', loginpath];\nif (whitelist.includes(location.pathname)) {\n  return;\n}\n\n// 如果没有登录，重定向到 login\nif (!(initialstate?.currentuser)) {\n  history.push(loginpath);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 修改前端样式\n\n在register\\index.tsx中\n\n * 增加确认密码框\n * 删改部分逻辑\n\n完整代码\n\nimport footer from '@/components/footer';\nimport { login } from '@/services/ant-design-pro/api';\nimport { getfakecaptcha } from '@/services/ant-design-pro/login';\nimport {\n  alipaycircleoutlined,\n  lockoutlined,\n  mobileoutlined,\n  taobaocircleoutlined,\n  useroutlined,\n  weibocircleoutlined,\n} from '@ant-design/icons';\nimport {\n  loginform,\n  proformcaptcha,\n  proformcheckbox,\n  proformtext,\n} from '@ant-design/pro-components';\nimport { alert, message, tabs } from 'antd';\nimport react, { usestate } from 'react';\nimport { history, usemodel } from 'umi';\nimport styles from './index.less';\nimport { system_logo } from '@/constants';\nconst loginmessage: react.fc<{\n  content: string;\n}> = ({ content }) => (\n  <alert\n    style={{\n      marginbottom: 24,\n    }}\n    message={content}\n    type=\"error\"\n    showicon\n  />\n);\nconst register: react.fc = () => {\n  const [userloginstate, setuserloginstate] = usestate<api.loginresult>({});\n  const [type, settype] = usestate<string>('account');\n\n  const handlesubmit = async (values: api.loginparams) => {\n    try {\n      // 注册\n      const user = await login({\n        ...values,\n        type,\n      });\n      // if (msg.status === 'ok') {\n      if (user) {\n        const defaultloginsuccessmessage = '注册成功！';\n        message.success(defaultloginsuccessmessage);\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        if (!history) return;\n        const { query } = history.location;\n        const { redirect } = query as {\n          redirect: string;\n        };\n        history.push(redirect || '/');\n        return;\n      }\n      setuserloginstate(user);\n    } catch (error) {\n      const defaultloginfailuremessage = '注册失败，请重试！';\n      message.error(defaultloginfailuremessage);\n    }\n  };\n  const { status, type: logintype } = userloginstate;\n  return (\n    <div classname={styles.container}>\n      <div classname={styles.content}>\n        <loginform\n          // logo={<img alt=\"logo\" src=\"/logo.svg\" />}\n          logo={<img alt=\"logo\" src={system_logo} />}\n          title=\"用户中心系统\"\n          subtitle={'a designing usercenter for studying——msingbai'}\n          initialvalues={{\n            autologin: true,\n          }}\n          onfinish={async (values) => {\n            await handlesubmit(values as api.loginparams);\n          }}\n        >\n          <tabs activekey={type} onchange={settype}>\n            <tabs.tabpane key=\"account\" tab={'账户密码注册'} />\n            {/*<tabs.tabpane key=\"mobile\" tab={'手机号注册'} />*/}\n          </tabs>\n\n          {status === 'error' && logintype === 'account' && (\n            // <loginmessage content={'错误的用户名和密码(admin/ant.design)'} />\n            <loginmessage content={'错误的账号和密码'} />\n          )}\n          {type === 'account' && (\n            <>\n              <proformtext\n                name=\"useraccount\"\n                fieldprops={{\n                  size: 'large',\n                  prefix: <useroutlined classname={styles.prefixicon} />,\n                }}\n                // placeholder={'用户名: admin or user'}\n                placeholder={'请输入账号'}\n                rules={[\n                  {\n                    required: true,\n                    // message: '用户名是必填项！',\n                    message: '账号是必填项！',\n                  },\n                ]}\n              />\n              <proformtext.password\n                name=\"userpassword\"\n                fieldprops={{\n                  size: 'large',\n                  prefix: <lockoutlined classname={styles.prefixicon} />,\n                }}\n                // placeholder={'密码: ant.design'}\n                placeholder={'请输入密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '密码是必填项！',\n                  },\n                  //增加长度检验\n                  {\n                    min: 8,\n                    type: 'string',\n                    message: '密码长度不能小于8位！',\n                  },\n                ]}\n              />\n              {/*确认密码*/}\n              <proformtext.password\n                name=\"checkpassword\"\n                fieldprops={{\n                  size: 'large',\n                  prefix: <lockoutlined classname={styles.prefixicon} />,\n                }}\n                // placeholder={'密码: ant.design'}\n                placeholder={'请确认密码'}\n                rules={[\n                  {\n                    required: true,\n                    message: '确认密码是必填项！',\n                  },\n                  //增加长度检验\n                  {\n                    min: 8,\n                    type: 'string',\n                    message: '密码长度不能小于8位！',\n                  },\n                ]}\n              />\n            </>\n          )}\n\n          {status === 'error' && logintype === 'mobile' && <loginmessage content=\"验证码错误\" />}\n        </loginform>\n      </div>\n      <footer />\n    </div>\n  );\n};\nexport default register;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n\n\n# 样式预览\n\n\n\n此时登录按钮没有变成注册，是因为looginform组件的原因\n\n\n# 前端-表单组件使用\n\n# 按钮修改\n\n找到组件库的源文件\n\nnode_modules/@ant-design/pro-form/lib/layouts/loginform/index.js\n\n\n\n回到注册页面 将按钮组件改标题\n\n\n\n可以看到已经改动成功啦\n\n\n\n# 提交逻辑\n\n定位到loginparams（src/services/ant-design-pro/typings.d.ts）\n\n新增注册的参数\n\n回到index.tsx将loginparams替换成registerparams\n\n# 注册逻辑\n\n增加校验密码逻辑\n\n\n\n增加注册接口\n\n\n\nregisterresultsrc/services/ant-design-pro/typings.d.ts\n\n删除login相关，register无关的代码\n\n// `const` loginmessage: react.fc<{\n//   `content`: string;\n// }> = ({ `content` }) => (\n//   <alert\n//     style={{\n//       marginbottom: 24,\n//     }}\n//     message={`content`}\n//     type=\"error\"\n//     showicon\n//   />\n// );\n\n`const` register: react.fc = () => {\n  // `const` [userloginstate, setuserloginstate] = `usestate`<api.loginresult>({});\n  `const` [type, settype] = `usestate`<string>('account');\n\n  // 表单提交\n  `const` handlesubmit = `async` (values: api.registerparams) => {\n    `const` { userpassword, checkpassword } = values;\n    // 校验\n    `if` (userpassword !== checkpassword) {\n      message.error('两次密码输入不一致');\n      `return`;\n    }\n\n    `try` {\n      // 注册\n      `const` id = `await` register(values); //user改为id\n      `if` (id > 0) {\n        `const` defaultloginsuccessmessage = '注册成功！';\n        message.success(defaultloginsuccessmessage);\n\n        /** 此方法会跳转到 redirect 参数所在的位置 */\n        `if` (history) `return`;\n        `const` { query } = history.location;\n        `const` { redirect } = query as {\n          redirect: string;\n        };\n        history.push(`/user/login?redirect=` <u>{ redirect }</u>);\n        `return`;\n      } `else` {\n        `throw` `new` error(`register error id = ` <u>${ id }</u>`);\n      }\n    } `catch` (error) {\n      `const` defaultloginfailuremessage = '注册失败，请重试！';\n      message.error(defaultloginfailuremessage);\n    }\n  };\n\n  // `const` { status, type: logintype } = userloginstate;\n  `return` (\n    <>\n      <tabs activekey={type} onchange={settype}>\n        <tabs.tabpane key=\"account\" tab=<u>{'账户密码注册'}</u> />\n      </tabs>\n\n      // {status === 'error' && logintype === 'account' && (\n      //   <loginmessage content=<u>{'错误的账户和密码'}</u> />\n      // )}\n      \n      ......\n\n      // {status === 'error' && logintype === 'mobile' && <loginmessage content=\"验证码错误\" />}\n    </loginform>\n    .....\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\n# 断点测试\n\n注册失败\n\n判断是前端的问题，\n\n\n\n灰色部分为前端发送的请求，里面多了一个userregisterrequest套住了，获取不到\n\nms是毫秒，千分之一秒\n\n测试了一下login的功能，前端没有问题，格式也是一致的\n\n取消断点\n\n测试已有账号的注册，返回正常\n\n测试新账号，能够注册成功，回到登陆界面\n\n\n\n此时有一个问题\n\n\n\n用户没有rediact参数\n\n删除+修改注册页面的这段代码\n\n        //const {redirect} = query as {\n          //redirect: string;\n        //};删除\n        history.push({\n          pathname: 'user/login',\n          query,\n        })\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 登录页面优化\n\n完整代码\n\n          <div\n            style={{\n              display: 'flex',                   //将div设置为flex容器\n              marginbottom: 24,\n              justifycontent: 'space-between',  //将子元素均分在容器内，使得他们间距相等\n              alignitems: 'center',             //使得子元素在垂直方向上居中对齐\n            }}\n          >\n            <proformcheckbox nostyle name=\"autologin\">\n              自动登录\n            </proformcheckbox>\n            <link to=\"/user/register\" > 注册账号 </link>\n            <a\n              style={{\n                float: 'right',\n              }}\n              href = \"mailto:xxx@email.com\"//发邮件联系管理员\n              target=\"_blank\" rel=\"noreferrer\"\n            >\n              忘记密码 ?\n            </a>\n          </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 优化后效果\n\n文字写于：广东",charsets:{cjk:!0}},{title:"管理模块+登录状态（前端）",frontmatter:{title:"管理模块+登录状态（前端）",date:"2025-04-08T16:05:04.000Z",permalink:"/projects/b75478/",categories:["项目","用户中心系统"],tags:["用户中心系统"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/10.%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97+%E7%99%BB%E5%BD%95%E7%8A%B6%E6%80%81%EF%BC%88%E5%89%8D%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/10.管理模块+登录状态（前端）.md",key:"v-0fce413c",path:"/projects/b75478/",headers:[{level:2,title:"登录态管理（currrent）",slug:"登录态管理-currrent",normalizedTitle:"登录态管理（currrent）",charIndex:47},{level:3,title:"后端",slug:"后端",normalizedTitle:"后端",charIndex:67},{level:3,title:"前端",slug:"前端",normalizedTitle:"前端",charIndex:15},{level:3,title:"设置头像",slug:"设置头像",normalizedTitle:"设置头像",charIndex:4220},{level:2,title:"用户管理功能",slug:"用户管理功能",normalizedTitle:"用户管理功能",charIndex:20},{level:3,title:"前端开发（一）",slug:"前端开发-一",normalizedTitle:"前端开发（一）",charIndex:4292},{level:3,title:"前端开发（二）",slug:"前端开发-二",normalizedTitle:"前端开发（二）",charIndex:4766}],excerpt:'<h1 id="_10-管理模块-登录状态-前端"><a class="header-anchor" href="#_10-管理模块-登录状态-前端">#</a> 10.管理模块+登录状态（前端）</h1>\n<p><strong>用户管理</strong>功能➕<strong>登录态管理</strong>(currrent)</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"登录态管理（currrent） 后端 前端 设置头像 用户管理功能 前端开发（一） 前端开发（二）",content:"# 10.管理模块+登录状态（前端）\n\n用户管理功能➕登录态管理(currrent)\n\n\n# 登录态管理（currrent）\n\n\n# 后端\n\n在UserController添加接口以获取当前登陆状态、信息\n\n    @GetMapping(\"/current\")\n    public User getCurrentUser(HttpServletRequest request) {\n        Object userObj = request.getSession().getAttribute(UserConstant.USER_LOGIN_STATE);\n        User currentUser = (User) userObj;//(User)表示强制转换\n        if (currentUser == null) {\n            return null;\n        }\n        long userId = currentUser.getId();\n        //todo校验用户是否合法\n        User user = userService.getById(userId);\n        return userService.getSafetyUser(user);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n在UserServiceImpl中的getSafetyUser加一个判断，用户是否为空\n\n    @Override\n    public User getSafetyUser(User originUser) {\n        if (originUser == null){\n            return null;\n        }\n        ....\n        }\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 前端\n\n * app.tsx中点击queryCurrentUser进入api.ts，修改代码，点击CurrentUser查看其返回的数据，结合数据库字段设计代码\n\napi.ts\n/** 获取当前的用户 GET /api/currentUser */\nexport async function currentUser(options?: { [key: string]: any }) {\n  return request<API.CurrentUser>('/api/user/currentUser', {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\ntypings.d.ts\ndeclare namespace API {\n  type CurrentUser = {\n    id: number;\n    username: string;\n    userAccount: string;\n    avatarUrl?: string;\n    gender: number;\n    phone: string;\n    email: string;\n    userStatus: number;\n    userRole: number;\n    createTime: Data;\n    };\n    address?: string;\n    phone?: string;\n  };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n * 将 app.tsx 中之前定义的白名单的代码提到前面，修改变量名，修改引用的变量名\n\nconst isDev = process.env.NODE_ENV === 'development';\nconst loginPath = '/user/login';\n/**\n * 无需用户登录态的页面\n */\nconst NO_NEED_LOGIN_WHITE_LIST = ['/user/register',loginPath];\n\n......\n\n// ProLayout 支持的api https://procomponents.ant.design/components/layout\nexport const layout: RunTimeLayoutConfig = ({ initialState, setInitialState }) => {\n  return {      \n      .....\n      if (NO_NEED_LOGIN_WHITE_LIST.includes(location.pathname)){\n        return;\n      }\n      ....\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n * 修改app.tsx 的下面代码\n\n/**\n * @see  https://umijs.org/zh-CN/plugins/plugin-initial-state\n * */\n.....\n  const fetchUserInfo = async () => {\n    try {\n      return await queryCurrentUser();\n    } catch (error) {\n      history.push(loginPath);\n    }\n    return undefined;\n  };\n  // 如果不需要登录页面，bu执行\n  if (NO_NEED_LOGIN_WHITE_LIST.includes(history.location.pathname)) {\n    return {\n      //@ts-ignore\n      fetchUserInfo,\n      settings: defaultSettings,\n    };\n  }\n  const currentUser = await fetchUserInfo();\n  return {\n    //@ts-ignore\n    fetchUserInfo,\n    currentUser,\n    settings: defaultSettings,\n  };\n}\n\n// ProLayout 支持的api https://procomponents.ant.design/components/layout\nexport const layout: RunTimeLayoutConfig = ({ initialState, setInitialState }) => {\n  return {\n    rightContentRender: () => <RightContent />,\n    disableContentMargin: false,\n    waterMarkProps: {\n      content: initialState?.currentUser?.username,\n    },\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n * 登陆测试，发现一直有一个问题，登陆后会显示登陆成功，但是有一个空白的错误\n\n今天知道了可以用开发者工具查看前端的控制台\n\n有很多错误，一个一个来\n\n第一个就是前端的api.ts文件里，接口名字和后端的不匹配\n\n/** 获取当前的用户 GET /api/currentUser */\n改成\n/** 获取当前的用户 GET /api/current */\n\n\n1\n2\n3\n\n\n改好后，请求成功了，发现登陆状态没有被记录\n\n一步步排查 首先是UserController中\n\n/**\n * 用户态登录键\n */\n //private static final String USER_LOGIN_STATE = \"userLoginState\"; 注释掉，改成\nString USER_LOGIN_STATE = \"userLoginState\";\n\n\n1\n2\n3\n4\n5\n\n\nUserConstant.java补充代码\n\n    /**\n     * 默认权限\n     */\n    int DEFAULT_ROLE = 0;\n\n    /**\n     * 管理员权限\n     */\n    int ADMIN_ROLE = 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n用户态登录键是一个键名，safetyUser是键值\n\n判断是/current请求没有任何信息，因为cookie值不一样了，表示在不同会话，并且后台发现/current的值是空\n\n\n\n\n\n\n\n先不管了 直接做下面的\n\n----------------------------------------\n\n在论坛里找到了别人遇到同样问题的解决办法用户管理项目关于两次请求sessioni - 编程导航 - 程序员编程学习交流社区\n\n> 在request里设置credentials=='include'就行 app.tsx：\n\nexport const request: RequestConfig = {\n  prefix: 'http://localhost:8080',\n  timeout: 10000,\n  credentials:'include',\n};\n\n\n1\n2\n3\n4\n5\n\n\n根据这篇：credentials: 'include'跨域问题解决方案-CSDN博客\n\n问题在于前端设置： credentials: ‘include’，（ 允许 cookie 共享，跨域问题，传Cookie是必须配置）\n\n不传递Cookie时，不允许配置credentials\n\n\n# 设置头像\n\nsrc/components/RightContent/AvatarDropdown.tsx\n\n\n\n\n\n\n# 用户管理功能\n\n\n# 前端开发（一）\n\n 1. 文件夹src/pages下新建Admin文件夹，复制同级目录user文件夹下的Register文件夹粘贴到Admin文件夹，更名为UserManage\n\n 2. 到config/routes.ts文件中添加路由\n\n 3. 访问这个地址,显示没有权限原因在于routes.ts文件中有一个属性是设置判断权限的路由组件是如何判断账号的权限呢？从某个地方可以全局获取\n    \n    ----------------------------------------\n    \n    * 首次访问页面（刷新页面），会进入app.tsx，执行getInitialState方法，其返回值会作为全局共享的数据\n    * services/access.tx文件中判断用户的访问权限，canAdmin的值为true时会被认为是具有管理员权限\n    * 进入文件中修改判断代码\n\n 4. 修改好后，进入管理页面进行测试，显示的是预期的注册功能（因为pages是从注册文件夹复制过来的）\n\n 5. 在路由配置中修改补充代码\n\n\n# 前端开发（二）\n\n使用ProComponents高级表单\n\n * \n * u\n   * 是\n   * 是\n   * 是\n\n 1. 删除src/pages/user/Register/index.tsx的代码，只保留初始化的部分\n    \n    ----------------------------------------\n    \n    补充代码\n    \n    import React from \"react\";\n    \n    const Register: React.FC = () => {\n      return (\n        <div id=\"userManage\">\n        </div>\n      );\n    };\n    export default Register;\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 2. 到ProTable - 高级表格 - ProComponents找到合适的表格复制代码（这里复制第一个）\n\n 3. 删除不需要用到的组件代码，修改我们需要的属性\n    \n    import { EllipsisOutlined, PlusOutlined } from '@ant-design/icons';\n    import type { ActionType, ProColumns } from '@ant-design/pro-components';\n    import { ProTable, TableDropdown } from '@ant-design/pro-components';\n    import {Button, Dropdown, Image, Space, Tag} from 'antd';\n    import { useRef } from 'react';\n    import request from 'umi-request';\n    import CurrentUser = API.CurrentUser;\n    export const waitTimePromise = async (time: number = 100) => {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(true);\n        }, time);\n      });\n    };\n    \n    export const waitTime = async (time: number = 100) => {\n      await waitTimePromise(time);\n    };\n    \n    const columns: ProColumns<API.CurrentUser>[] = [\n      {\n        dataIndex: 'id',\n        valueType: 'indexBorder',\n        width: 48,\n      },\n      {\n        title: '用户名',\n        dataIndex: 'username',\n        copyable: true,\n      },\n      {\n        title: '用户账户',\n        dataIndex: 'userAccount',\n        copyable: true,\n      },\n      {\n        title: '头像',\n        dataIndex: 'avatarUrl',\n        render: (_,record) => (\n          <div>\n            <Image src={record.avatarUrl} width={50} height={50}/>  //高度限制规格\n          </div>\n        ),\n      },\n      {\n        title: '性别',\n        dataIndex: 'gender',\n      },\n      {\n        title: '电话',\n        dataIndex: 'phone',\n        copyable: true,\n      },\n      {\n        title: '邮件',\n        dataIndex: 'email',\n        copyable: true,\n      },\n      {\n        title: '状态',\n        dataIndex: 'userStatus',\n      },\n      {\n        title: '角色',\n        dataIndex: 'userRole',\n        valueType: 'select',\n        valueEnum: {\n          0: { text: '普通用户', status:'Default', },\n          1: {\n            text: '管理员',\n            status: 'Success',\n          },\n        },\n      },\n      {\n        title: '创建时间',\n        key: 'createTime',\n        valueType: 'dateTime',\n      },\n      {\n        title: '操作',\n        valueType: 'option',\n        key: 'option',\n        render: (text, record, _, action) => [\n          <a\n            key=\"editable\"\n            onClick={() => {\n              action?.startEditable?.(record.id);\n            }}\n          >\n            编辑\n          </a>,\n          <a href={record.url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\n            查看\n          </a>,\n          <TableDropdown\n            key=\"actionGroup\"\n            onSelect={() => action?.reload()}\n            menus={[\n              { key: 'copy', name: '复制' },\n              { key: 'delete', name: '删除' },\n            ]}\n          />,\n        ],\n      },\n    ];\n    \n    export default () => {\n      const actionRef = useRef<ActionType>();\n      return (\n        <ProTable<API.CurrentUser>\n          columns={columns}\n          actionRef={actionRef}\n          cardBordered\n          request={async (params, sort, filter) => {\n            console.log(sort, filter);\n            await waitTime(2000);\n            return request<{\n              data: CurrentUser[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            });\n          }}\n          editable={{\n            type: 'multiple',\n          }}\n          columnsState={{\n            persistenceKey: 'pro-table-singe-demos',\n            persistenceType: 'localStorage',\n            defaultValue: {\n              option: { fixed: 'right', disable: true },\n            },\n            onChange(value) {\n              console.log('value: ', value);\n            },\n          }}\n          rowKey=\"id\"\n          search={{\n            labelWidth: 'auto',\n          }}\n          options={{\n            setting: {\n              listsHeight: 400,\n            },\n          }}\n          form={{\n            // 由于配置了 transform，提交的参数与定义的不同这里需要转化一下\n            syncToUrl: (values, type) => {\n              if (type === 'get') {\n                return {\n                  ...values,\n                  created_at: [values.startTime, values.endTime],\n                };\n              }\n              return values;\n            },\n          }}\n          pagination={{\n            pageSize: 5,\n            onChange: (page) => console.log(page),\n          }}\n          dateFormatter=\"string\"\n          headerTitle=\"高级表格\"\n          toolBarRender={() => [\n            /*\n            新建与选择菜单组件\n             */\n            <Button\n              key=\"button\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                actionRef.current?.reload();\n              }}\n              type=\"primary\"\n            >\n              新建\n            </Button>,\n            <Dropdown\n              key=\"menu\"\n              menu={{\n                items: [\n                  {\n                    label: '1st item',\n                    key: '1',\n                  },\n                  {\n                    label: '2nd item',\n                    key: '2',\n                  },\n                  {\n                    label: '3rd item',\n                    key: '3',\n                  },\n                ],\n              }}\n            >\n              <Button>\n                <EllipsisOutlined />\n              </Button>\n            </Dropdown>,\n          ]}\n        />\n      );\n    };\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    73\n    74\n    75\n    76\n    77\n    78\n    79\n    80\n    81\n    82\n    83\n    84\n    85\n    86\n    87\n    88\n    89\n    90\n    91\n    92\n    93\n    94\n    95\n    96\n    97\n    98\n    99\n    100\n    101\n    102\n    103\n    104\n    105\n    106\n    107\n    108\n    109\n    110\n    111\n    112\n    113\n    114\n    115\n    116\n    117\n    118\n    119\n    120\n    121\n    122\n    123\n    124\n    125\n    126\n    127\n    128\n    129\n    130\n    131\n    132\n    133\n    134\n    135\n    136\n    137\n    138\n    139\n    140\n    141\n    142\n    143\n    144\n    145\n    146\n    147\n    148\n    149\n    150\n    151\n    152\n    153\n    154\n    155\n    156\n    157\n    158\n    159\n    160\n    161\n    162\n    163\n    164\n    165\n    166\n    167\n    168\n    169\n    170\n    171\n    172\n    173\n    174\n    175\n    176\n    177\n    178\n    179\n    180\n    181\n    182\n    183\n    184\n    185\n    186\n    187\n    188\n    189\n    190\n    191\n    192\n    193\n    194\n    195\n    196\n    197\n    198\n    199\n    200\n    201\n    202\n    203\n    204\n    \n\n 4. 此时前端页面显示如下\n    \n    ----------------------------------------\n    \n    修改src/pages/Admin.tsx文件\n    \n    import { PageHeaderWrapper } from '@ant-design/pro-components';\n    import React from 'react';\n    \n    const Admin: React.FC = (props) => {\n      const {children} = props;\n      return (\n        <PageHeaderWrapper>\n          {children}\n        </PageHeaderWrapper>\n      );\n    };\n    export default Admin;\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    \n    \n    显示效果如下\n\n 5. api.ts文件里定义一个searchUsers接口（复制notices接口，进行修改）\n\n/** 搜索用户 GET /api/search */\nexport async function searchUsers(options?: { [key: string]: any }) {\n  return request<API.NoticeIconList>('/api/user/search', {\n    method: 'GET',\n    ...(options || {}),\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n发现函数没有被使用\n\n原因就在于这里，要改成自己的api，原地址是一个测试文件\n\n}>('http://localhost:8080/api/user/search', {\n\n\n1\n\n\n改完发现还是有问题的，因为没有传递管理页相关的参数，后端始终报错\n\n在编程导航网站里找到了其他朋友写好的代码跟着鱼皮直播（终）做到用户管理的时候，引 - 编程导航 - 程序员编程学习交流社区\n\n这一段的代码应该改成下面的\n\n      request={async (params, sort, filter) => {\n        console.log(sort, filter);\n        await waitTime(2000);\n        const userList = await searchUsers();\n        return {\n          data: userListt\n        }\n      }}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这样就显示出来了\n\n但还可以发现，创建时间是错误的，更新时间加上去之后也是错误的\n\n对比数据库里的数据\n\n对比前端发送请求得到响应的数据\n\n后端在把数据发送给前端时，数据被转化成了 ISO 8601 格式（2025-03-28T10:56:52.000+00:00）\n\nProtable支持的属性：通用配置 - ProComponents\n\n无语了(ˉ▽ˉ；)... 原因在于 key应该改为dataIndex\n\n  {\n    title: '创建时间',\n    key: 'createTime',\n    valueType: 'dateTime',\n  },\n\n\n1\n2\n3\n4\n5\n\n\n文字写于：广东",normalizedContent:"# 10.管理模块+登录状态（前端）\n\n用户管理功能➕登录态管理(currrent)\n\n\n# 登录态管理（currrent）\n\n\n# 后端\n\n在usercontroller添加接口以获取当前登陆状态、信息\n\n    @getmapping(\"/current\")\n    public user getcurrentuser(httpservletrequest request) {\n        object userobj = request.getsession().getattribute(userconstant.user_login_state);\n        user currentuser = (user) userobj;//(user)表示强制转换\n        if (currentuser == null) {\n            return null;\n        }\n        long userid = currentuser.getid();\n        //todo校验用户是否合法\n        user user = userservice.getbyid(userid);\n        return userservice.getsafetyuser(user);\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n在userserviceimpl中的getsafetyuser加一个判断，用户是否为空\n\n    @override\n    public user getsafetyuser(user originuser) {\n        if (originuser == null){\n            return null;\n        }\n        ....\n        }\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 前端\n\n * app.tsx中点击querycurrentuser进入api.ts，修改代码，点击currentuser查看其返回的数据，结合数据库字段设计代码\n\napi.ts\n/** 获取当前的用户 get /api/currentuser */\nexport async function currentuser(options?: { [key: string]: any }) {\n  return request<api.currentuser>('/api/user/currentuser', {\n    method: 'get',\n    ...(options || {}),\n  });\n}\n\ntypings.d.ts\ndeclare namespace api {\n  type currentuser = {\n    id: number;\n    username: string;\n    useraccount: string;\n    avatarurl?: string;\n    gender: number;\n    phone: string;\n    email: string;\n    userstatus: number;\n    userrole: number;\n    createtime: data;\n    };\n    address?: string;\n    phone?: string;\n  };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n * 将 app.tsx 中之前定义的白名单的代码提到前面，修改变量名，修改引用的变量名\n\nconst isdev = process.env.node_env === 'development';\nconst loginpath = '/user/login';\n/**\n * 无需用户登录态的页面\n */\nconst no_need_login_white_list = ['/user/register',loginpath];\n\n......\n\n// prolayout 支持的api https://procomponents.ant.design/components/layout\nexport const layout: runtimelayoutconfig = ({ initialstate, setinitialstate }) => {\n  return {      \n      .....\n      if (no_need_login_white_list.includes(location.pathname)){\n        return;\n      }\n      ....\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n * 修改app.tsx 的下面代码\n\n/**\n * @see  https://umijs.org/zh-cn/plugins/plugin-initial-state\n * */\n.....\n  const fetchuserinfo = async () => {\n    try {\n      return await querycurrentuser();\n    } catch (error) {\n      history.push(loginpath);\n    }\n    return undefined;\n  };\n  // 如果不需要登录页面，bu执行\n  if (no_need_login_white_list.includes(history.location.pathname)) {\n    return {\n      //@ts-ignore\n      fetchuserinfo,\n      settings: defaultsettings,\n    };\n  }\n  const currentuser = await fetchuserinfo();\n  return {\n    //@ts-ignore\n    fetchuserinfo,\n    currentuser,\n    settings: defaultsettings,\n  };\n}\n\n// prolayout 支持的api https://procomponents.ant.design/components/layout\nexport const layout: runtimelayoutconfig = ({ initialstate, setinitialstate }) => {\n  return {\n    rightcontentrender: () => <rightcontent />,\n    disablecontentmargin: false,\n    watermarkprops: {\n      content: initialstate?.currentuser?.username,\n    },\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n * 登陆测试，发现一直有一个问题，登陆后会显示登陆成功，但是有一个空白的错误\n\n今天知道了可以用开发者工具查看前端的控制台\n\n有很多错误，一个一个来\n\n第一个就是前端的api.ts文件里，接口名字和后端的不匹配\n\n/** 获取当前的用户 get /api/currentuser */\n改成\n/** 获取当前的用户 get /api/current */\n\n\n1\n2\n3\n\n\n改好后，请求成功了，发现登陆状态没有被记录\n\n一步步排查 首先是usercontroller中\n\n/**\n * 用户态登录键\n */\n //private static final string user_login_state = \"userloginstate\"; 注释掉，改成\nstring user_login_state = \"userloginstate\";\n\n\n1\n2\n3\n4\n5\n\n\nuserconstant.java补充代码\n\n    /**\n     * 默认权限\n     */\n    int default_role = 0;\n\n    /**\n     * 管理员权限\n     */\n    int admin_role = 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n用户态登录键是一个键名，safetyuser是键值\n\n判断是/current请求没有任何信息，因为cookie值不一样了，表示在不同会话，并且后台发现/current的值是空\n\n\n\n\n\n\n\n先不管了 直接做下面的\n\n----------------------------------------\n\n在论坛里找到了别人遇到同样问题的解决办法用户管理项目关于两次请求sessioni - 编程导航 - 程序员编程学习交流社区\n\n> 在request里设置credentials=='include'就行 app.tsx：\n\nexport const request: requestconfig = {\n  prefix: 'http://localhost:8080',\n  timeout: 10000,\n  credentials:'include',\n};\n\n\n1\n2\n3\n4\n5\n\n\n根据这篇：credentials: 'include'跨域问题解决方案-csdn博客\n\n问题在于前端设置： credentials: ‘include’，（ 允许 cookie 共享，跨域问题，传cookie是必须配置）\n\n不传递cookie时，不允许配置credentials\n\n\n# 设置头像\n\nsrc/components/rightcontent/avatardropdown.tsx\n\n\n\n\n\n\n# 用户管理功能\n\n\n# 前端开发（一）\n\n 1. 文件夹src/pages下新建admin文件夹，复制同级目录user文件夹下的register文件夹粘贴到admin文件夹，更名为usermanage\n\n 2. 到config/routes.ts文件中添加路由\n\n 3. 访问这个地址,显示没有权限原因在于routes.ts文件中有一个属性是设置判断权限的路由组件是如何判断账号的权限呢？从某个地方可以全局获取\n    \n    ----------------------------------------\n    \n    * 首次访问页面（刷新页面），会进入app.tsx，执行getinitialstate方法，其返回值会作为全局共享的数据\n    * services/access.tx文件中判断用户的访问权限，canadmin的值为true时会被认为是具有管理员权限\n    * 进入文件中修改判断代码\n\n 4. 修改好后，进入管理页面进行测试，显示的是预期的注册功能（因为pages是从注册文件夹复制过来的）\n\n 5. 在路由配置中修改补充代码\n\n\n# 前端开发（二）\n\n使用procomponents高级表单\n\n * \n * u\n   * 是\n   * 是\n   * 是\n\n 1. 删除src/pages/user/register/index.tsx的代码，只保留初始化的部分\n    \n    ----------------------------------------\n    \n    补充代码\n    \n    import react from \"react\";\n    \n    const register: react.fc = () => {\n      return (\n        <div id=\"usermanage\">\n        </div>\n      );\n    };\n    export default register;\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 2. 到protable - 高级表格 - procomponents找到合适的表格复制代码（这里复制第一个）\n\n 3. 删除不需要用到的组件代码，修改我们需要的属性\n    \n    import { ellipsisoutlined, plusoutlined } from '@ant-design/icons';\n    import type { actiontype, procolumns } from '@ant-design/pro-components';\n    import { protable, tabledropdown } from '@ant-design/pro-components';\n    import {button, dropdown, image, space, tag} from 'antd';\n    import { useref } from 'react';\n    import request from 'umi-request';\n    import currentuser = api.currentuser;\n    export const waittimepromise = async (time: number = 100) => {\n      return new promise((resolve) => {\n        settimeout(() => {\n          resolve(true);\n        }, time);\n      });\n    };\n    \n    export const waittime = async (time: number = 100) => {\n      await waittimepromise(time);\n    };\n    \n    const columns: procolumns<api.currentuser>[] = [\n      {\n        dataindex: 'id',\n        valuetype: 'indexborder',\n        width: 48,\n      },\n      {\n        title: '用户名',\n        dataindex: 'username',\n        copyable: true,\n      },\n      {\n        title: '用户账户',\n        dataindex: 'useraccount',\n        copyable: true,\n      },\n      {\n        title: '头像',\n        dataindex: 'avatarurl',\n        render: (_,record) => (\n          <div>\n            <image src={record.avatarurl} width={50} height={50}/>  //高度限制规格\n          </div>\n        ),\n      },\n      {\n        title: '性别',\n        dataindex: 'gender',\n      },\n      {\n        title: '电话',\n        dataindex: 'phone',\n        copyable: true,\n      },\n      {\n        title: '邮件',\n        dataindex: 'email',\n        copyable: true,\n      },\n      {\n        title: '状态',\n        dataindex: 'userstatus',\n      },\n      {\n        title: '角色',\n        dataindex: 'userrole',\n        valuetype: 'select',\n        valueenum: {\n          0: { text: '普通用户', status:'default', },\n          1: {\n            text: '管理员',\n            status: 'success',\n          },\n        },\n      },\n      {\n        title: '创建时间',\n        key: 'createtime',\n        valuetype: 'datetime',\n      },\n      {\n        title: '操作',\n        valuetype: 'option',\n        key: 'option',\n        render: (text, record, _, action) => [\n          <a\n            key=\"editable\"\n            onclick={() => {\n              action?.starteditable?.(record.id);\n            }}\n          >\n            编辑\n          </a>,\n          <a href={record.url} target=\"_blank\" rel=\"noopener noreferrer\" key=\"view\">\n            查看\n          </a>,\n          <tabledropdown\n            key=\"actiongroup\"\n            onselect={() => action?.reload()}\n            menus={[\n              { key: 'copy', name: '复制' },\n              { key: 'delete', name: '删除' },\n            ]}\n          />,\n        ],\n      },\n    ];\n    \n    export default () => {\n      const actionref = useref<actiontype>();\n      return (\n        <protable<api.currentuser>\n          columns={columns}\n          actionref={actionref}\n          cardbordered\n          request={async (params, sort, filter) => {\n            console.log(sort, filter);\n            await waittime(2000);\n            return request<{\n              data: currentuser[];\n            }>('https://proapi.azurewebsites.net/github/issues', {\n              params,\n            });\n          }}\n          editable={{\n            type: 'multiple',\n          }}\n          columnsstate={{\n            persistencekey: 'pro-table-singe-demos',\n            persistencetype: 'localstorage',\n            defaultvalue: {\n              option: { fixed: 'right', disable: true },\n            },\n            onchange(value) {\n              console.log('value: ', value);\n            },\n          }}\n          rowkey=\"id\"\n          search={{\n            labelwidth: 'auto',\n          }}\n          options={{\n            setting: {\n              listsheight: 400,\n            },\n          }}\n          form={{\n            // 由于配置了 transform，提交的参数与定义的不同这里需要转化一下\n            synctourl: (values, type) => {\n              if (type === 'get') {\n                return {\n                  ...values,\n                  created_at: [values.starttime, values.endtime],\n                };\n              }\n              return values;\n            },\n          }}\n          pagination={{\n            pagesize: 5,\n            onchange: (page) => console.log(page),\n          }}\n          dateformatter=\"string\"\n          headertitle=\"高级表格\"\n          toolbarrender={() => [\n            /*\n            新建与选择菜单组件\n             */\n            <button\n              key=\"button\"\n              icon={<plusoutlined />}\n              onclick={() => {\n                actionref.current?.reload();\n              }}\n              type=\"primary\"\n            >\n              新建\n            </button>,\n            <dropdown\n              key=\"menu\"\n              menu={{\n                items: [\n                  {\n                    label: '1st item',\n                    key: '1',\n                  },\n                  {\n                    label: '2nd item',\n                    key: '2',\n                  },\n                  {\n                    label: '3rd item',\n                    key: '3',\n                  },\n                ],\n              }}\n            >\n              <button>\n                <ellipsisoutlined />\n              </button>\n            </dropdown>,\n          ]}\n        />\n      );\n    };\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    73\n    74\n    75\n    76\n    77\n    78\n    79\n    80\n    81\n    82\n    83\n    84\n    85\n    86\n    87\n    88\n    89\n    90\n    91\n    92\n    93\n    94\n    95\n    96\n    97\n    98\n    99\n    100\n    101\n    102\n    103\n    104\n    105\n    106\n    107\n    108\n    109\n    110\n    111\n    112\n    113\n    114\n    115\n    116\n    117\n    118\n    119\n    120\n    121\n    122\n    123\n    124\n    125\n    126\n    127\n    128\n    129\n    130\n    131\n    132\n    133\n    134\n    135\n    136\n    137\n    138\n    139\n    140\n    141\n    142\n    143\n    144\n    145\n    146\n    147\n    148\n    149\n    150\n    151\n    152\n    153\n    154\n    155\n    156\n    157\n    158\n    159\n    160\n    161\n    162\n    163\n    164\n    165\n    166\n    167\n    168\n    169\n    170\n    171\n    172\n    173\n    174\n    175\n    176\n    177\n    178\n    179\n    180\n    181\n    182\n    183\n    184\n    185\n    186\n    187\n    188\n    189\n    190\n    191\n    192\n    193\n    194\n    195\n    196\n    197\n    198\n    199\n    200\n    201\n    202\n    203\n    204\n    \n\n 4. 此时前端页面显示如下\n    \n    ----------------------------------------\n    \n    修改src/pages/admin.tsx文件\n    \n    import { pageheaderwrapper } from '@ant-design/pro-components';\n    import react from 'react';\n    \n    const admin: react.fc = (props) => {\n      const {children} = props;\n      return (\n        <pageheaderwrapper>\n          {children}\n        </pageheaderwrapper>\n      );\n    };\n    export default admin;\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    \n    \n    显示效果如下\n\n 5. api.ts文件里定义一个searchusers接口（复制notices接口，进行修改）\n\n/** 搜索用户 get /api/search */\nexport async function searchusers(options?: { [key: string]: any }) {\n  return request<api.noticeiconlist>('/api/user/search', {\n    method: 'get',\n    ...(options || {}),\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n发现函数没有被使用\n\n原因就在于这里，要改成自己的api，原地址是一个测试文件\n\n}>('http://localhost:8080/api/user/search', {\n\n\n1\n\n\n改完发现还是有问题的，因为没有传递管理页相关的参数，后端始终报错\n\n在编程导航网站里找到了其他朋友写好的代码跟着鱼皮直播（终）做到用户管理的时候，引 - 编程导航 - 程序员编程学习交流社区\n\n这一段的代码应该改成下面的\n\n      request={async (params, sort, filter) => {\n        console.log(sort, filter);\n        await waittime(2000);\n        const userlist = await searchusers();\n        return {\n          data: userlistt\n        }\n      }}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这样就显示出来了\n\n但还可以发现，创建时间是错误的，更新时间加上去之后也是错误的\n\n对比数据库里的数据\n\n对比前端发送请求得到响应的数据\n\n后端在把数据发送给前端时，数据被转化成了 iso 8601 格式（2025-03-28t10:56:52.000+00:00）\n\nprotable支持的属性：通用配置 - procomponents\n\n无语了(ˉ▽ˉ；)... 原因在于 key应该改为dataindex\n\n  {\n    title: '创建时间',\n    key: 'createtime',\n    valuetype: 'datetime',\n  },\n\n\n1\n2\n3\n4\n5\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"注销模块+校验模块（前后端）",frontmatter:{title:"注销模块+校验模块（前后端）",date:"2025-04-11T20:59:25.000Z",permalink:"/projects/253f15/",categories:["项目","用户中心系统"],tags:["用户中心系统"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/11.%E6%B3%A8%E9%94%80%E6%A8%A1%E5%9D%97+%E6%A0%A1%E9%AA%8C%E6%A8%A1%E5%9D%97%EF%BC%88%E5%89%8D%E5%90%8E%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/11.注销模块+校验模块（前后端）.md",key:"v-a190c3b4",path:"/projects/253f15/",headers:[{level:2,title:"用户注销",slug:"用户注销",normalizedTitle:"用户注销",charIndex:64},{level:3,title:"后端开发",slug:"后端开发",normalizedTitle:"后端开发",charIndex:73},{level:3,title:"前端开发",slug:"前端开发",normalizedTitle:"前端开发",charIndex:2141},{level:2,title:"用户校验",slug:"用户校验",normalizedTitle:"用户校验",charIndex:2485},{level:2,title:"后端代码优化",slug:"后端代码优化",normalizedTitle:"后端代码优化",charIndex:2564},{level:3,title:"通用返回对象",slug:"通用返回对象",normalizedTitle:"通用返回对象",charIndex:2575}],excerpt:'<h1 id="_11-注销模块-校验模块-后端"><a class="header-anchor" href="#_11-注销模块-校验模块-后端">#</a> 11.注销模块+校验模块（后端）</h1>\n<p>用户中心的<strong>注销模块</strong>和<strong>校验模块</strong>，每个模块有两个部分，<strong>前端</strong>和<strong>后端</strong>一起o(<em>￣▽￣</em>)ブ</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"用户注销 后端开发 前端开发 用户校验 后端代码优化 通用返回对象",content:'# 11.注销模块+校验模块（后端）\n\n用户中心的注销模块和校验模块，每个模块有两个部分，前端和后端一起o(￣▽￣)ブ\n\n\n# 用户注销\n\n\n# 后端开发\n\n 1. 业务逻辑层\n    \n    * UserServic中写userLogout方法\n      \n      ----------------------------------------\n      \n      UserServiceImpl中实现方法\n    \n    * 修改一下代码，获取 session 中的数据，鼠标指示在 removeAttribute 上，发现返回值是 void，修改一下返回值【后续注销失败抛出异常即可，不需要定义一个返回值】，UserService中也修改一下\n\n 2. UserController中编写接口\n    \n    *     @PostMapping("/logout")\n          public Integer logout(HttpServletRequest request) {\n              if (request == null){\n                  return null;\n              }\n              return userService.userLogout(request);\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n    \n    * 将Service和UserServiceImpl的返回类型再改回去，改为int。注销成功返回为1，将Impl的返回值改为1\n      \n          @Override\n          public int userLogout(HttpServletRequest request) {\n              //移除用户登录态\n              request.getSession().removeAttribute(USER_LOGIN_STATE);\n              return 1;\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      \n\n 3. 文件中修改代码\n    \n    * UserService\n      \n          /**\n           * 用户注销\n           * \n           * @param request\n           * @return\n           */\n          int userLogout(HttpServletRequest request);\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n    \n    * UserServiceImpl\n      \n          /**\n           * 用户注销\n           * @param request\n           * @return\n           */\n          @Override\n          public int userLogout(HttpServletRequest request) {\n              //移除用户登录态\n              request.getSession().removeAttribute(USER_LOGIN_STATE);\n              return 1;\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n    \n    * UserController\n      \n          @PostMapping("/logout")\n          public Integer logout(HttpServletRequest request) {\n              if (request == null){\n                  return null;\n              }\n              return userService.userLogout(request);\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n\n\n# 前端开发\n\n 1. 启动前后端代码（后端：debug、前端：star-dev），登陆一个管理员账号\n\n 2. 修改代码实现用户注销\n    \n    > 退出登录按钮在导航条上，导航条是所有页面都有的组件（components），页面触发注销的位置是头像的下拉菜单（AvatarDropdown），所以我们定位到 src/components/RightContent/AvatarDropdown.tsx 文件\n    \n    * 搜索 logout，找到并进入 loginOut 方法\n    * 进入 outLogin 方法\n    * 就进入了到 api.ts 文件，修改 outLogin 的接口，保持名称和后端一致\n      * 测试一下，返回的响应值已经是1了\n\n\n# 用户校验\n\n用户校验是给使用这个系统的用户增加一个属性，planetcode，表示使用者需要凭借知识星球的编号方可注册使用，暂时用不上，跳过这个功能\n\n\n# 后端代码优化\n\n\n# 通用返回对象\n\n * 目的是给对象补充一些信息，告诉这个请求再业务层面是成功还是失败\n   \n   > 后端直接返回对象给前端，如果数据出现问题、后端报错、查询不到数据，前端不知道是为什么报错，之前我们在后端有设计这种报错码\n   \n   例如：\n   \n   {\n     "name": "yupi"\n   }\n   \n   \n   1\n   2\n   3\n   \n   \n   代码块（成功）：\n   \n   {\n     "code": 0 //业务状态码\n     "data": {\n       "name": "yupi"\n     }\n     "message": "ok"\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n   \n   代码块（失败）：\n   \n   {\n     "code": 50001 //业务状态码\n     "data": null\n     "message": "用户异常操作、xxxx"\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   > 之前异常返回的是-1，按以上设计错误码回更清晰\n\n * 设计\n   \n   * 自定义错误码\n   * 返回类支持返回正常和错误\n\n 1. 后端项目中的com.msingbai.usercenter 下新建 common 包，在 common 包下新建 BaseResponse.java，编写代码\n    \n    package com.msingbai.usercenter.common;\n    \n    import lombok.Data;\n    \n    import java.io.Serializable;\n    \n    @Data\n    public class BaseResponse <T> implements Serializable {\n    \n        private int code;\n    \n        private T data;\n    \n        private String message;\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    \n    \n    > 在Java中，<T> 是一种泛型（Generics）的用法。\n    > \n    > 泛型允许在类、接口或方法中使用类型参数，这样可以提高代码的复用性和类型安全性。\n    > \n    > 例如，如果有一个 BaseResponse 类，可以这样使用它：\n    > \n    > BaseResponse<String> response1 = new BaseResponse<>();\n    > BaseResponse<Integer> response2 = new BaseResponse<>();\n    > \n    > \n    > 1\n    > 2\n    > \n    > \n    > response1 用于存储字符串类型的数据，而 response2 用于存储整数类型的数据。这样，你就可以在 BaseResponse 类中编写通用的代码，而不需要为每种数据类型编写特定的代码。\n    \n    点击BaseResponse，按住Alt+Insert构造方法\n    \n    构造完，再补充一段代码如下\n    \n        public BaseResponse(int code, T data, String message) {\n            this.code = code;\n            this.data = data;\n            this.message = message;\n        }\n        \n        public BaseResponse(int code, T data) {\n            this(code, data, "");\n        }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 2. 将之前所有的请求使用 BaseResponse 封装一下\n    \n    > 对于应用程序中所有的网络请求或数据处理请求，使用 BaseResponse 类就能够统一处理和返回结果。\n    > \n    > 请求的数据（如用户信息等）被封装在 BaseResponse 的 data 字段中，这样可以保护数据不被外部直接访问，同时也可以在未来轻松地添加或修改响应中包含的数据字段。\n    \n    register\n    \n    ----------------------------------------\n    \n    login\n    \n    这样重复的部分工作量不小，我们可以编写一个工具类以及定制快捷键帮助我们自动化封装工作\n    \n    * common包下新建ResultUtils.java，编写代码\n    \n    * 定制一个快捷键File => Settings => Editor => Live Templates(实时模板)\n      \n      ----------------------------------------\n      \n      新建快捷键详细信息\n      \n      > 测试一下效果\n      > \n      > \n      > \n      > ----------------------------------------\n    \n    * 将UserController进行封装\n      \n          @PostMapping("/register")\n          public BaseResponse<Long> userRegister(@RequestBody UserRegisterRequest userRegisterRequest) {\n              if (userRegisterRequest == null) {\n                  return null;\n              }\n              System.out.println("Received request: " + userRegisterRequest);\n              String userAccount = userRegisterRequest.getUserAccount();\n              String userPassword = userRegisterRequest.getUserPassword();\n              String checkPassword = userRegisterRequest.getCheckPassword();\n              if (StringUtils.isAnyBlank(userAccount, userPassword, checkPassword)) {\n                  return null;\n              }\n              long result = userService.userRegister(userAccount, userPassword, checkPassword);\n              return ResultUtils.success(result);\n          }\n      \n          @PostMapping("/login")\n          public BaseResponse<User> userLogin(@RequestBody UserLoginRequest userLoginRequest,HttpServletRequest request) {\n              if (userLoginRequest == null) {\n                  return null;\n              }\n              //System.out.println("Login request: " + userLoginRequest);\n              String userAccount = userLoginRequest.getUserAccount();\n              String userPassword = userLoginRequest.getUserPassword();\n              if (StringUtils.isAnyBlank(userAccount, userPassword)) {\n                  return null;\n              }\n              User user = userService.userLogin(userAccount,userPassword,request);\n              return ResultUtils.success(user);\n      \n          }\n      \n          @GetMapping("/current")\n          public BaseResponse<User> getCurrentUser(HttpServletRequest request) {\n              //System.out.println("USER_LOGIN_STATE: " + request.getSession().getAttribute(USER_LOGIN_STATE));\n              Object userObj = request.getSession().getAttribute(USER_LOGIN_STATE);\n              User currentUser = (User) userObj;\n              if (currentUser == null) {\n                  System.out.println("用户未登录");\n                  return null;\n              }\n              long userId = currentUser.getId();\n              //todo校验用户是否合法\n              User user = userService.getById(userId);\n              User safetyUser = userService.getSafetyUser(user);\n              return ResultUtils.success(safetyUser);\n          }\n      \n          @GetMapping("/search")\n          public BaseResponse<List<User>> searchUsers(String username,HttpServletRequest request) {\n              if (!isAdmin(request)) {\n                  System.out.println("【搜索】非管理员权限");\n                  return null;\n              }\n              QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n              if (StringUtils.isNotBlank(username)) {\n                  queryWrapper.like("username", username);\n              }\n              System.out.println("【搜索】查询成功");\n              List<User> userlist = userService.list(queryWrapper);\n              List<User> list = userlist.stream().map(user -> userService.getSafetyUser(user)).collect(Collectors.toList());\n              return ResultUtils.success(list);\n          }\n      \n          @PostMapping("/delete")\n          public BaseResponse<Boolean> deleteUser(@RequestBody long id, HttpServletRequest request) {\n              if(!isAdmin(request)) {\n                  System.out.println("非管理员权限");\n                  return null;\n              }\n              if (id <= 0) {\n                  System.out.println("数据库中无人员");\n                  return null;\n              }\n              System.out.println("返回成功");\n              boolean b = userService.removeById(id);\n              return ResultUtils.success(b);\n          }\n      \n          @PostMapping("/logout")\n          public BaseResponse<Integer> logout(HttpServletRequest request) {\n              if (request == null){\n                  return null;\n              }\n              int result = userService.userLogout(request);\n              return ResultUtils.success(result);\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      62\n      63\n      64\n      65\n      66\n      67\n      68\n      69\n      70\n      71\n      72\n      73\n      74\n      75\n      76\n      77\n      78\n      79\n      80\n      81\n      82\n      83\n      84\n      85\n      86\n      87\n      \n 3. \n 4. \n\n文字写于：广东',normalizedContent:'# 11.注销模块+校验模块（后端）\n\n用户中心的注销模块和校验模块，每个模块有两个部分，前端和后端一起o(￣▽￣)ブ\n\n\n# 用户注销\n\n\n# 后端开发\n\n 1. 业务逻辑层\n    \n    * userservic中写userlogout方法\n      \n      ----------------------------------------\n      \n      userserviceimpl中实现方法\n    \n    * 修改一下代码，获取 session 中的数据，鼠标指示在 removeattribute 上，发现返回值是 void，修改一下返回值【后续注销失败抛出异常即可，不需要定义一个返回值】，userservice中也修改一下\n\n 2. usercontroller中编写接口\n    \n    *     @postmapping("/logout")\n          public integer logout(httpservletrequest request) {\n              if (request == null){\n                  return null;\n              }\n              return userservice.userlogout(request);\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n    \n    * 将service和userserviceimpl的返回类型再改回去，改为int。注销成功返回为1，将impl的返回值改为1\n      \n          @override\n          public int userlogout(httpservletrequest request) {\n              //移除用户登录态\n              request.getsession().removeattribute(user_login_state);\n              return 1;\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      \n\n 3. 文件中修改代码\n    \n    * userservice\n      \n          /**\n           * 用户注销\n           * \n           * @param request\n           * @return\n           */\n          int userlogout(httpservletrequest request);\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n    \n    * userserviceimpl\n      \n          /**\n           * 用户注销\n           * @param request\n           * @return\n           */\n          @override\n          public int userlogout(httpservletrequest request) {\n              //移除用户登录态\n              request.getsession().removeattribute(user_login_state);\n              return 1;\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n    \n    * usercontroller\n      \n          @postmapping("/logout")\n          public integer logout(httpservletrequest request) {\n              if (request == null){\n                  return null;\n              }\n              return userservice.userlogout(request);\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n\n\n# 前端开发\n\n 1. 启动前后端代码（后端：debug、前端：star-dev），登陆一个管理员账号\n\n 2. 修改代码实现用户注销\n    \n    > 退出登录按钮在导航条上，导航条是所有页面都有的组件（components），页面触发注销的位置是头像的下拉菜单（avatardropdown），所以我们定位到 src/components/rightcontent/avatardropdown.tsx 文件\n    \n    * 搜索 logout，找到并进入 loginout 方法\n    * 进入 outlogin 方法\n    * 就进入了到 api.ts 文件，修改 outlogin 的接口，保持名称和后端一致\n      * 测试一下，返回的响应值已经是1了\n\n\n# 用户校验\n\n用户校验是给使用这个系统的用户增加一个属性，planetcode，表示使用者需要凭借知识星球的编号方可注册使用，暂时用不上，跳过这个功能\n\n\n# 后端代码优化\n\n\n# 通用返回对象\n\n * 目的是给对象补充一些信息，告诉这个请求再业务层面是成功还是失败\n   \n   > 后端直接返回对象给前端，如果数据出现问题、后端报错、查询不到数据，前端不知道是为什么报错，之前我们在后端有设计这种报错码\n   \n   例如：\n   \n   {\n     "name": "yupi"\n   }\n   \n   \n   1\n   2\n   3\n   \n   \n   代码块（成功）：\n   \n   {\n     "code": 0 //业务状态码\n     "data": {\n       "name": "yupi"\n     }\n     "message": "ok"\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n   \n   代码块（失败）：\n   \n   {\n     "code": 50001 //业务状态码\n     "data": null\n     "message": "用户异常操作、xxxx"\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   > 之前异常返回的是-1，按以上设计错误码回更清晰\n\n * 设计\n   \n   * 自定义错误码\n   * 返回类支持返回正常和错误\n\n 1. 后端项目中的com.msingbai.usercenter 下新建 common 包，在 common 包下新建 baseresponse.java，编写代码\n    \n    package com.msingbai.usercenter.common;\n    \n    import lombok.data;\n    \n    import java.io.serializable;\n    \n    @data\n    public class baseresponse <t> implements serializable {\n    \n        private int code;\n    \n        private t data;\n    \n        private string message;\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    \n    \n    > 在java中，<t> 是一种泛型（generics）的用法。\n    > \n    > 泛型允许在类、接口或方法中使用类型参数，这样可以提高代码的复用性和类型安全性。\n    > \n    > 例如，如果有一个 baseresponse 类，可以这样使用它：\n    > \n    > baseresponse<string> response1 = new baseresponse<>();\n    > baseresponse<integer> response2 = new baseresponse<>();\n    > \n    > \n    > 1\n    > 2\n    > \n    > \n    > response1 用于存储字符串类型的数据，而 response2 用于存储整数类型的数据。这样，你就可以在 baseresponse 类中编写通用的代码，而不需要为每种数据类型编写特定的代码。\n    \n    点击baseresponse，按住alt+insert构造方法\n    \n    构造完，再补充一段代码如下\n    \n        public baseresponse(int code, t data, string message) {\n            this.code = code;\n            this.data = data;\n            this.message = message;\n        }\n        \n        public baseresponse(int code, t data) {\n            this(code, data, "");\n        }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 2. 将之前所有的请求使用 baseresponse 封装一下\n    \n    > 对于应用程序中所有的网络请求或数据处理请求，使用 baseresponse 类就能够统一处理和返回结果。\n    > \n    > 请求的数据（如用户信息等）被封装在 baseresponse 的 data 字段中，这样可以保护数据不被外部直接访问，同时也可以在未来轻松地添加或修改响应中包含的数据字段。\n    \n    register\n    \n    ----------------------------------------\n    \n    login\n    \n    这样重复的部分工作量不小，我们可以编写一个工具类以及定制快捷键帮助我们自动化封装工作\n    \n    * common包下新建resultutils.java，编写代码\n    \n    * 定制一个快捷键file => settings => editor => live templates(实时模板)\n      \n      ----------------------------------------\n      \n      新建快捷键详细信息\n      \n      > 测试一下效果\n      > \n      > \n      > \n      > ----------------------------------------\n    \n    * 将usercontroller进行封装\n      \n          @postmapping("/register")\n          public baseresponse<long> userregister(@requestbody userregisterrequest userregisterrequest) {\n              if (userregisterrequest == null) {\n                  return null;\n              }\n              system.out.println("received request: " + userregisterrequest);\n              string useraccount = userregisterrequest.getuseraccount();\n              string userpassword = userregisterrequest.getuserpassword();\n              string checkpassword = userregisterrequest.getcheckpassword();\n              if (stringutils.isanyblank(useraccount, userpassword, checkpassword)) {\n                  return null;\n              }\n              long result = userservice.userregister(useraccount, userpassword, checkpassword);\n              return resultutils.success(result);\n          }\n      \n          @postmapping("/login")\n          public baseresponse<user> userlogin(@requestbody userloginrequest userloginrequest,httpservletrequest request) {\n              if (userloginrequest == null) {\n                  return null;\n              }\n              //system.out.println("login request: " + userloginrequest);\n              string useraccount = userloginrequest.getuseraccount();\n              string userpassword = userloginrequest.getuserpassword();\n              if (stringutils.isanyblank(useraccount, userpassword)) {\n                  return null;\n              }\n              user user = userservice.userlogin(useraccount,userpassword,request);\n              return resultutils.success(user);\n      \n          }\n      \n          @getmapping("/current")\n          public baseresponse<user> getcurrentuser(httpservletrequest request) {\n              //system.out.println("user_login_state: " + request.getsession().getattribute(user_login_state));\n              object userobj = request.getsession().getattribute(user_login_state);\n              user currentuser = (user) userobj;\n              if (currentuser == null) {\n                  system.out.println("用户未登录");\n                  return null;\n              }\n              long userid = currentuser.getid();\n              //todo校验用户是否合法\n              user user = userservice.getbyid(userid);\n              user safetyuser = userservice.getsafetyuser(user);\n              return resultutils.success(safetyuser);\n          }\n      \n          @getmapping("/search")\n          public baseresponse<list<user>> searchusers(string username,httpservletrequest request) {\n              if (!isadmin(request)) {\n                  system.out.println("【搜索】非管理员权限");\n                  return null;\n              }\n              querywrapper<user> querywrapper = new querywrapper<>();\n              if (stringutils.isnotblank(username)) {\n                  querywrapper.like("username", username);\n              }\n              system.out.println("【搜索】查询成功");\n              list<user> userlist = userservice.list(querywrapper);\n              list<user> list = userlist.stream().map(user -> userservice.getsafetyuser(user)).collect(collectors.tolist());\n              return resultutils.success(list);\n          }\n      \n          @postmapping("/delete")\n          public baseresponse<boolean> deleteuser(@requestbody long id, httpservletrequest request) {\n              if(!isadmin(request)) {\n                  system.out.println("非管理员权限");\n                  return null;\n              }\n              if (id <= 0) {\n                  system.out.println("数据库中无人员");\n                  return null;\n              }\n              system.out.println("返回成功");\n              boolean b = userservice.removebyid(id);\n              return resultutils.success(b);\n          }\n      \n          @postmapping("/logout")\n          public baseresponse<integer> logout(httpservletrequest request) {\n              if (request == null){\n                  return null;\n              }\n              int result = userservice.userlogout(request);\n              return resultutils.success(result);\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      62\n      63\n      64\n      65\n      66\n      67\n      68\n      69\n      70\n      71\n      72\n      73\n      74\n      75\n      76\n      77\n      78\n      79\n      80\n      81\n      82\n      83\n      84\n      85\n      86\n      87\n      \n 3. \n 4. \n\n文字写于：广东',charsets:{cjk:!0}},{title:"请求响应处理器（前端）",frontmatter:{title:"请求响应处理器（前端）",date:"2025-04-22T15:35:50.000Z",permalink:"/projects/21a0e3/",categories:["项目","用户中心系统"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/13.%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%88%E5%89%8D%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/13.请求响应处理器（前端）.md",key:"v-d8c6f1d0",path:"/projects/21a0e3/",headers:[{level:2,title:"优化内容",slug:"优化内容",normalizedTitle:"优化内容",charIndex:39},{level:2,title:"全局请求响应拦截器封装",slug:"全局请求响应拦截器封装",normalizedTitle:"全局请求响应拦截器封装",charIndex:145},{level:2,title:"增加用户初始头像",slug:"增加用户初始头像",normalizedTitle:"增加用户初始头像",charIndex:5825}],excerpt:'<h1 id="_13-请求响应处理器-前端"><a class="header-anchor" href="#_13-请求响应处理器-前端">#</a> 13.请求响应处理器（前端）</h1>\n<p>前端代码优化，<strong>请求响应处理器</strong>封装</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"优化内容 全局请求响应拦截器封装 增加用户初始头像",content:"# 13.请求响应处理器（前端）\n\n前端代码优化，请求响应处理器封装\n\n\n# 优化内容\n\n * 对接前端的返回值\n * 全局响应处理\n   * 应用场景：需要对接口的通用响应进行统一处理，比如从response中取出data；根据code处理错误\n   * 参考封装工具的官方文档\n\n\n# 全局请求响应拦截器封装\n\n 1. 定义通用返回对象\n    \n    * UserCenter\\myapp\\src\\typings.d.ts\n    \n    * src/services/ant-design-pro/api.ts封装注册的响应类型\n    \n    * src/pages/user/Register/index.tsx修改注册功能的判断逻辑\n      \n        // 注册\n        const res = await register(values);\n        if (res.code === 0 && res.data > 0) {\n          const defaultLoginSuccessMessage = '注册成功！';\n          message.success(defaultLoginSuccessMessage);\n          /** 此方法会跳转到 redirect 参数所在的位置 */\n          /** 用户注册成功后跳转到登录页 */\n          if (!history) return;\n          const {query} = history.location;\n          // const {redirect} = query as {\n          //   redirect: string;\n          // };\n          history.push({\n            pathname: 'user/login',\n            query,\n          });\n          return;\n        }else{\n          throw new Error(res.description);\n        }\n      } catch (error: any) {\n        const defaultLoginFailureMessage = '注册失败，请重试！';\n        message.error(error.message ?? defaultLoginFailureMessage);\n      }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      \n      \n      测试成功\n      \n      ----------------------------------------\n    \n    * 封装其他的APIloginsearchnoticescurrent\n\n 2. 前端写一个全局响应拦截器\n    \n    * 进入src/.umi/plugin-request/request.ts，增加代码\n      \n        requestConfig.responseInterceptors = [\n          async function (response: Response, options:RequestOptionsInit):Response | Promise<Response> {\n            const data = await response.clone().json();\n            if (res.code === 0){\n              return res.data;\n            }\n          }\n        ]\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      \n      \n      \n    \n    * 将所有接口中响应的data取出了。继续编写代码\n\n 3. request.ts属于.umi，是框架自动生成的，每次启动会被覆盖掉，在.gitignore添加.umi，让编辑器帮我们识别这是项目生成的文件\n    \n    这里检查了发现没生效\n\n 4. 简单介绍：在Umi中，网络请求由Umi-request完成，它基于 fetch 封装， 兼具 fetch 与 axios 的特点，为开发者提供一个统一的 api 调用方式，简化使用，并提供诸如缓存、 超时、 字符编码处理、 错误处理等常用功能。新建一个请求类，覆盖umi的request方法\n    \n    * src文件夹下新建plugins文件夹，plugins文件夹下新建globalRequests.ts,补充代码\n      \n      /**\n       * request 网络请求工具\n       * 更详细的 api 文档: https://github.com/umijs/umi-request\n       */\n      \n      \n      \n      import {extend} from 'umi-request';\n      import {history} from 'umi';\n      import {stringify} from \"querystring\";\n      import {message} from \"antd\";\n      \n      \n      /**\n       * 配置request请求时的默认参数\n       */\n      const request = extend({\n        credentials: 'include', // 默认请求是否带上cookie\n        // requestType: 'form',\n      });\n      \n      /**\n       * 所以请求拦截器\n       */\n      request.interceptors.request.use((url, options): any => {\n        console.log(`do requset url = ${url}`);\n        return {\n          url,\n          options: {\n            ...options,\n            headers: {\n            },\n          },\n        };\n      });\n      \n      /**\n       * 所有响应拦截器\n       */\n      request.interceptors.response.use(async (response, options): Promise<any> => {\n        const res = await response.clone().json();\n        if (res.code === 0) {\n          return res.data;\n        }\n        if (res.code === 40100) {\n          message.error('请先登录');\n          history.replace({\n            pathname: '/user/login',\n            search: stringify({\n              redirect: location.pathname,\n            }),\n          });\n        } else {\n          message.error(res.description)\n        }\n        return res.data;\n      });\n      \n      export default request;\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      \n      \n      在api.ts的引入改成自定义的request\n\n 5. 测试，未登录时进入管理页，会提示先登录\n\n 6. 测试，注册界面正常来说 前端应该只会返回该用户名已被注册 但返回了两条 另一条是 Cannot read properties of null (reading 'code')原因在于前端的注册判断逻辑\n    \n    src/pages/user/Register/index.tsx中\n    \n    当 res.data 为 null 时，res.data > 0 将会抛出一个错误。因为无法读取 null 的属性，这就是 \"Cannot read properties of null (reading 'code')\" 错误的来源。\n    \n    修改逻辑，当code为数字时，会注册成功，否则自动执行\n    \n        try {\n          // 注册\n          const res = await register(values);\n    \n          // 检查响应是否有效\n          if (res && typeof res.code === 'number') {\n            if (res.code === 0 && res.data > 0) {\n              const defaultLoginSuccessMessage = '注册成功！';\n              message.success(defaultLoginSuccessMessage);\n    \n              // 跳转到登录页\n              if (!history) return;\n              const { query } = history.location;\n              history.push({\n                pathname: 'user/login',\n                query,\n              });\n    \n            } else {\n              throw new Error(res.description || '未知错误');\n            }\n          }\n    \n        }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    \n    \n    这次测试结果符合预期\n    \n    但又有了新问题，注册一个新账户后，没有任何提示\n    \n    并且抛出了一个空白错误可以发现右边是返回成功的响应，而前端抛出了一个空白错误\n    \n    增加一个输出，看看注册成功后返回的是什么\n    \n    console.log('注册返回结果：', res);\n    \n    \n    1\n    \n    \n    结果返回了data\n    \n    \n    \n    那就直接修改逻辑\n    \n    if (typeof res === 'number' && res > 0) {\n    \n    \n    1\n    \n    \n    如果是number，判断注册成功\n\n\n# 增加用户初始头像\n\n在后端的Impl中增加\n\n/* 3.插入数据 */\nUser user = new User();\nuser.setUserAccount(userAccount);\nuser.setUserPassword(encryptPassword);\nString AvatarUrl = (\"https://pic.code-nav.cn/user_avatar/1897656130643132418/thumbnail/hKKx7cXTxCQsQm0x.png\");\nuser.setAvatarUrl(AvatarUrl);\n\n\n1\n2\n3\n4\n5\n6\n\n\n文字写于：广东",normalizedContent:"# 13.请求响应处理器（前端）\n\n前端代码优化，请求响应处理器封装\n\n\n# 优化内容\n\n * 对接前端的返回值\n * 全局响应处理\n   * 应用场景：需要对接口的通用响应进行统一处理，比如从response中取出data；根据code处理错误\n   * 参考封装工具的官方文档\n\n\n# 全局请求响应拦截器封装\n\n 1. 定义通用返回对象\n    \n    * usercenter\\myapp\\src\\typings.d.ts\n    \n    * src/services/ant-design-pro/api.ts封装注册的响应类型\n    \n    * src/pages/user/register/index.tsx修改注册功能的判断逻辑\n      \n        // 注册\n        const res = await register(values);\n        if (res.code === 0 && res.data > 0) {\n          const defaultloginsuccessmessage = '注册成功！';\n          message.success(defaultloginsuccessmessage);\n          /** 此方法会跳转到 redirect 参数所在的位置 */\n          /** 用户注册成功后跳转到登录页 */\n          if (!history) return;\n          const {query} = history.location;\n          // const {redirect} = query as {\n          //   redirect: string;\n          // };\n          history.push({\n            pathname: 'user/login',\n            query,\n          });\n          return;\n        }else{\n          throw new error(res.description);\n        }\n      } catch (error: any) {\n        const defaultloginfailuremessage = '注册失败，请重试！';\n        message.error(error.message ?? defaultloginfailuremessage);\n      }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      \n      \n      测试成功\n      \n      ----------------------------------------\n    \n    * 封装其他的apiloginsearchnoticescurrent\n\n 2. 前端写一个全局响应拦截器\n    \n    * 进入src/.umi/plugin-request/request.ts，增加代码\n      \n        requestconfig.responseinterceptors = [\n          async function (response: response, options:requestoptionsinit):response | promise<response> {\n            const data = await response.clone().json();\n            if (res.code === 0){\n              return res.data;\n            }\n          }\n        ]\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      \n      \n      \n    \n    * 将所有接口中响应的data取出了。继续编写代码\n\n 3. request.ts属于.umi，是框架自动生成的，每次启动会被覆盖掉，在.gitignore添加.umi，让编辑器帮我们识别这是项目生成的文件\n    \n    这里检查了发现没生效\n\n 4. 简单介绍：在umi中，网络请求由umi-request完成，它基于 fetch 封装， 兼具 fetch 与 axios 的特点，为开发者提供一个统一的 api 调用方式，简化使用，并提供诸如缓存、 超时、 字符编码处理、 错误处理等常用功能。新建一个请求类，覆盖umi的request方法\n    \n    * src文件夹下新建plugins文件夹，plugins文件夹下新建globalrequests.ts,补充代码\n      \n      /**\n       * request 网络请求工具\n       * 更详细的 api 文档: https://github.com/umijs/umi-request\n       */\n      \n      \n      \n      import {extend} from 'umi-request';\n      import {history} from 'umi';\n      import {stringify} from \"querystring\";\n      import {message} from \"antd\";\n      \n      \n      /**\n       * 配置request请求时的默认参数\n       */\n      const request = extend({\n        credentials: 'include', // 默认请求是否带上cookie\n        // requesttype: 'form',\n      });\n      \n      /**\n       * 所以请求拦截器\n       */\n      request.interceptors.request.use((url, options): any => {\n        console.log(`do requset url = ${url}`);\n        return {\n          url,\n          options: {\n            ...options,\n            headers: {\n            },\n          },\n        };\n      });\n      \n      /**\n       * 所有响应拦截器\n       */\n      request.interceptors.response.use(async (response, options): promise<any> => {\n        const res = await response.clone().json();\n        if (res.code === 0) {\n          return res.data;\n        }\n        if (res.code === 40100) {\n          message.error('请先登录');\n          history.replace({\n            pathname: '/user/login',\n            search: stringify({\n              redirect: location.pathname,\n            }),\n          });\n        } else {\n          message.error(res.description)\n        }\n        return res.data;\n      });\n      \n      export default request;\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      \n      \n      在api.ts的引入改成自定义的request\n\n 5. 测试，未登录时进入管理页，会提示先登录\n\n 6. 测试，注册界面正常来说 前端应该只会返回该用户名已被注册 但返回了两条 另一条是 cannot read properties of null (reading 'code')原因在于前端的注册判断逻辑\n    \n    src/pages/user/register/index.tsx中\n    \n    当 res.data 为 null 时，res.data > 0 将会抛出一个错误。因为无法读取 null 的属性，这就是 \"cannot read properties of null (reading 'code')\" 错误的来源。\n    \n    修改逻辑，当code为数字时，会注册成功，否则自动执行\n    \n        try {\n          // 注册\n          const res = await register(values);\n    \n          // 检查响应是否有效\n          if (res && typeof res.code === 'number') {\n            if (res.code === 0 && res.data > 0) {\n              const defaultloginsuccessmessage = '注册成功！';\n              message.success(defaultloginsuccessmessage);\n    \n              // 跳转到登录页\n              if (!history) return;\n              const { query } = history.location;\n              history.push({\n                pathname: 'user/login',\n                query,\n              });\n    \n            } else {\n              throw new error(res.description || '未知错误');\n            }\n          }\n    \n        }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    \n    \n    这次测试结果符合预期\n    \n    但又有了新问题，注册一个新账户后，没有任何提示\n    \n    并且抛出了一个空白错误可以发现右边是返回成功的响应，而前端抛出了一个空白错误\n    \n    增加一个输出，看看注册成功后返回的是什么\n    \n    console.log('注册返回结果：', res);\n    \n    \n    1\n    \n    \n    结果返回了data\n    \n    \n    \n    那就直接修改逻辑\n    \n    if (typeof res === 'number' && res > 0) {\n    \n    \n    1\n    \n    \n    如果是number，判断注册成功\n\n\n# 增加用户初始头像\n\n在后端的impl中增加\n\n/* 3.插入数据 */\nuser user = new user();\nuser.setuseraccount(useraccount);\nuser.setuserpassword(encryptpassword);\nstring avatarurl = (\"https://pic.code-nav.cn/user_avatar/1897656130643132418/thumbnail/hkkx7cxtxcqsqm0x.png\");\nuser.setavatarurl(avatarurl);\n\n\n1\n2\n3\n4\n5\n6\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"异常处理器（后端优化）",frontmatter:{title:"异常处理器（后端优化）",date:"2025-04-12T11:18:56.000Z",permalink:"/projects/042bc4/",categories:["项目","用户中心系统"],tags:["用户中心系统"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/01.%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F/12.%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%88%E5%90%8E%E7%AB%AF%E4%BC%98%E5%8C%96%EF%BC%89.html",relativePath:"04.项目/01.用户中心系统/12.异常处理器（后端优化）.md",key:"v-aea27dee",path:"/projects/042bc4/",headers:[{level:2,title:"后端优化",slug:"后端优化",normalizedTitle:"后端优化",charIndex:11},{level:3,title:"自定义异常及其错误代码（debug中）",slug:"自定义异常及其错误代码-debug中",normalizedTitle:"自定义异常及其错误代码（debug中）",charIndex:39},{level:3,title:"全局异常处理器",slug:"全局异常处理器",normalizedTitle:"全局异常处理器",charIndex:4569},{level:4,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:5241},{level:4,title:"定义全局异常处理器",slug:"定义全局异常处理器",normalizedTitle:"定义全局异常处理器",charIndex:5263},{level:2,title:"推送至github",slug:"推送至github",normalizedTitle:"推送至github",charIndex:7655}],excerpt:'<h1 id="_12-异常处理器-后端优化"><a class="header-anchor" href="#_12-异常处理器-后端优化">#</a> 12.异常处理器（后端优化）</h1>\n<p>继续做<strong>后端优化</strong></p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"后端优化 自定义异常及其错误代码（debug中） 全局异常处理器 测试 定义全局异常处理器 推送至github",content:'# 12.异常处理器（后端优化）\n\n继续做后端优化\n\n\n# 后端优化\n\n\n# 自定义异常及其错误代码（debug中）\n\n 1. common包下新建ErrorCode.java（Enum枚举类型）\n    \n    * 补充代码\n    \n    package com.msingbai.usercenter.common;\n    \n    /**\n     * 错误码\n     */\n    public enum ErrorCode {\n        SUCCESS(0, "success", ""),\n        PARAMS_ERROR(4000, "请求参数错误", ""),\n        NULL_ERROR(4001, "请求参数为空", ""),\n        NO_LOGIN(40100, "未登录", ""),\n        NO_AUTH(40101, "无权限", "");\n    \n        private final int code;\n        /**\n         * 状态码信息\n         */\n        private final String message;\n        /**\n         * 状态码描述（详情）\n         */\n        private final String description;\n    \n        ErrorCode(int code, String message, String description) {\n            this.code = code;\n            this.message = message;\n            this.description = description;\n        }\n        \n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    \n    \n    * 按Alt+Insert选择Getter\n    \n    * 生成了下面的代码\n      \n          public String getMessage() {\n              return message;\n          }\n      \n          public String getDescription() {\n              return description;\n          }\n      \n          public int getCode() {\n              return code;\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n\n 2. 修改BaseResponse\n    \n    package com.msingbai.usercenter.common;\n    \n    import lombok.Data;\n    \n    import java.io.Serializable;\n    \n    @Data\n    public class BaseResponse <T> implements Serializable {\n    \n        private int code;\n    \n        private T data;\n    \n        private String message;\n    \n        private String description;\n    \n        public BaseResponse(int code, T data, String message, String description) {\n            this.code = code;\n            this.data = data;\n            this.message = message;\n            this.description = description;\n        }\n    \n        public BaseResponse(int code, T data, String message) {\n            this(code, data, "","");\n        }\n    \n        public BaseResponse(int code, T data) {\n            this(code, data, "", "");\n        }\n    \n        public BaseResponse(ErrorCode errorCode) {\n            this(errorCode.getCode(),null,errorCode.getMessage(),errorCode.getDescription());\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    \n\n 3. 完善ResultUtils\n    \n    package com.msingbai.usercenter.common;\n    \n    /**\n     * 返回工具类\n     *\n     */\n    public class ResultUtils {\n    \n        /**\n         * 成功\n         *\n         * @param data\n         * @return\n         * @param <T>\n         */\n        public static <T> BaseResponse<T> success(T data) {\n            return new BaseResponse<>(0,data,"success");\n        }\n    \n        /**\n         * 失败\n         *\n         * @param errorCode\n         * @return\n         * @param <T>\n         */\n        public static <T> BaseResponse<T> error(ErrorCode errorCode) {\n            return new BaseResponse<>(errorCode);\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    \n\n 4. UserController.java\n    \n       .....\n       @PostMapping("/register")\n        public BaseResponse<Long> userRegister(@RequestBody UserRegisterRequest userRegisterRequest) {\n            if (userRegisterRequest == null) {\n                return ResultUtils.error(ErrorCode.PARAMS_ERROR)；\n            }\n            .....\n                @PostMapping("/login")\n        public BaseResponse<User> userLogin(@RequestBody UserLoginRequest userLoginRequest,HttpServletRequest request) {\n            if (userLoginRequest == null) {\n                return ResultUtils.error(ErrorCode.PARAMS_ERROR)；\n            }\n            String userAccount = userLoginRequest.getUserAccount();\n            String userPassword = userLoginRequest.getUserPassword();\n            if (StringUtils.isAnyBlank(userAccount, userPassword)) {\n                return ResultUtils.error(ErrorCode.PARAMS_ERROR)；\n            }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    \n\n\n# 全局异常处理器\n\n 1. com.xxxx.usercenter新建exception包,exception包下新建BusinessException.java\n\n 2. 选择code和description\n\n 3. 增加下面这段代码，继续生成Getter\n    \n        public BusinessException(ErrorCode errorCode) {\n            super(errorCode.getMessage());\n            this.code = errorCode.getCode();\n            this.description = errorCode.getDescription();\n        }\n    \n        public BusinessException(ErrorCode errorCode, String description) {\n            super(errorCode.getMessage());\n            this.code = errorCode.getCode();\n            this.description = description;\n        }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n 4. 增加final字段\n\n# 测试\n\n输入一个错误的登录密码 返回\n\n# 定义全局异常处理器\n\n * exception包下新建GlobalExceptionHandler.java\n\n * ErrorCode中新增系统内部异常状态码\n\n * ResultUtils中新增三个构造函数\n   \n       /**\n        * 失败\n        * @param code\n        * @param message\n        * @param description\n        * @return\n        */\n       public static BaseResponse error(int code, String message, String description) {\n           return new BaseResponse(code,null,message,description);\n       }\n   \n       /**\n        * 失败\n        * @param errorCode\n        * @param message\n        * @param description\n        * @return\n        */\n       public static BaseResponse error(ErrorCode errorCode, String message, String description) {\n           return new BaseResponse(errorCode.getCode(),null,message,description);\n       }\n   \n       /**\n        * 失败\n        * @param errorCode\n        * @param description\n        * @return\n        */\n       public static BaseResponse error(ErrorCode errorCode, String description) {\n           return new BaseResponse(errorCode.getCode(),errorCode.getMessage(),description);\n       }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   \n\n * GlobalExceptionHandler中编写具体的异常处理代码\n\n * 修改UserControllerregister\n   \n   ----------------------------------------\n   \n   search\n   \n   ----------------------------------------\n   \n   current\n   \n   ----------------------------------------\n   \n   delete\n   \n   ----------------------------------------\n   \n   logout\n   \n   ----------------------------------------\n   \n   login\n\n * 修改UserServiceImpl\n   \n   ----------------------------------------\n   \n   \n\n * 测试，登录功能运行异常\n\n * Debug\n   \n   * 这个功能问题很多，技术力不足，不做了\n   * 2025/4/22 继续做\n\n在登录时 我输入了错误的密码 返回的错误类型是不存在，不符合预期\n\n\n\n问题在于这段\n\n查询条件不应该同时包含密码，如果输入错误的密码，也会返回找不到用户的错误，应该只根据账户进行查询，然后再验证密码。\n\n改成如下逻辑\n\n/* 2.加密 */\nString encryptPassword = DigestUtils.md5DigestAsHex((SALT + userPassword).getBytes());\n//账户不能重复\nQueryWrapper<User> queryWrapper = new QueryWrapper<>();\nqueryWrapper.eq("userAccount", userAccount);\nUser user = userMapper.selectOne(queryWrapper);\n//用户不存在\nif (user == null){\n    throw new BusinessException(ErrorCode.NULL_ERROR,"用户不存在");\n}\n// 4. 验证密码\nif (!encryptPassword.equals(user.getUserPassword())) {\n    throw new BusinessException(ErrorCode.PARAMS_ERROR, "密码错误");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n\n错误已经正常显示了\n\n\n# 推送至github\n\n文字写于：广东',normalizedContent:'# 12.异常处理器（后端优化）\n\n继续做后端优化\n\n\n# 后端优化\n\n\n# 自定义异常及其错误代码（debug中）\n\n 1. common包下新建errorcode.java（enum枚举类型）\n    \n    * 补充代码\n    \n    package com.msingbai.usercenter.common;\n    \n    /**\n     * 错误码\n     */\n    public enum errorcode {\n        success(0, "success", ""),\n        params_error(4000, "请求参数错误", ""),\n        null_error(4001, "请求参数为空", ""),\n        no_login(40100, "未登录", ""),\n        no_auth(40101, "无权限", "");\n    \n        private final int code;\n        /**\n         * 状态码信息\n         */\n        private final string message;\n        /**\n         * 状态码描述（详情）\n         */\n        private final string description;\n    \n        errorcode(int code, string message, string description) {\n            this.code = code;\n            this.message = message;\n            this.description = description;\n        }\n        \n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    \n    \n    * 按alt+insert选择getter\n    \n    * 生成了下面的代码\n      \n          public string getmessage() {\n              return message;\n          }\n      \n          public string getdescription() {\n              return description;\n          }\n      \n          public int getcode() {\n              return code;\n          }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n\n 2. 修改baseresponse\n    \n    package com.msingbai.usercenter.common;\n    \n    import lombok.data;\n    \n    import java.io.serializable;\n    \n    @data\n    public class baseresponse <t> implements serializable {\n    \n        private int code;\n    \n        private t data;\n    \n        private string message;\n    \n        private string description;\n    \n        public baseresponse(int code, t data, string message, string description) {\n            this.code = code;\n            this.data = data;\n            this.message = message;\n            this.description = description;\n        }\n    \n        public baseresponse(int code, t data, string message) {\n            this(code, data, "","");\n        }\n    \n        public baseresponse(int code, t data) {\n            this(code, data, "", "");\n        }\n    \n        public baseresponse(errorcode errorcode) {\n            this(errorcode.getcode(),null,errorcode.getmessage(),errorcode.getdescription());\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    \n\n 3. 完善resultutils\n    \n    package com.msingbai.usercenter.common;\n    \n    /**\n     * 返回工具类\n     *\n     */\n    public class resultutils {\n    \n        /**\n         * 成功\n         *\n         * @param data\n         * @return\n         * @param <t>\n         */\n        public static <t> baseresponse<t> success(t data) {\n            return new baseresponse<>(0,data,"success");\n        }\n    \n        /**\n         * 失败\n         *\n         * @param errorcode\n         * @return\n         * @param <t>\n         */\n        public static <t> baseresponse<t> error(errorcode errorcode) {\n            return new baseresponse<>(errorcode);\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    \n\n 4. usercontroller.java\n    \n       .....\n       @postmapping("/register")\n        public baseresponse<long> userregister(@requestbody userregisterrequest userregisterrequest) {\n            if (userregisterrequest == null) {\n                return resultutils.error(errorcode.params_error)；\n            }\n            .....\n                @postmapping("/login")\n        public baseresponse<user> userlogin(@requestbody userloginrequest userloginrequest,httpservletrequest request) {\n            if (userloginrequest == null) {\n                return resultutils.error(errorcode.params_error)；\n            }\n            string useraccount = userloginrequest.getuseraccount();\n            string userpassword = userloginrequest.getuserpassword();\n            if (stringutils.isanyblank(useraccount, userpassword)) {\n                return resultutils.error(errorcode.params_error)；\n            }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    \n\n\n# 全局异常处理器\n\n 1. com.xxxx.usercenter新建exception包,exception包下新建businessexception.java\n\n 2. 选择code和description\n\n 3. 增加下面这段代码，继续生成getter\n    \n        public businessexception(errorcode errorcode) {\n            super(errorcode.getmessage());\n            this.code = errorcode.getcode();\n            this.description = errorcode.getdescription();\n        }\n    \n        public businessexception(errorcode errorcode, string description) {\n            super(errorcode.getmessage());\n            this.code = errorcode.getcode();\n            this.description = description;\n        }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n 4. 增加final字段\n\n# 测试\n\n输入一个错误的登录密码 返回\n\n# 定义全局异常处理器\n\n * exception包下新建globalexceptionhandler.java\n\n * errorcode中新增系统内部异常状态码\n\n * resultutils中新增三个构造函数\n   \n       /**\n        * 失败\n        * @param code\n        * @param message\n        * @param description\n        * @return\n        */\n       public static baseresponse error(int code, string message, string description) {\n           return new baseresponse(code,null,message,description);\n       }\n   \n       /**\n        * 失败\n        * @param errorcode\n        * @param message\n        * @param description\n        * @return\n        */\n       public static baseresponse error(errorcode errorcode, string message, string description) {\n           return new baseresponse(errorcode.getcode(),null,message,description);\n       }\n   \n       /**\n        * 失败\n        * @param errorcode\n        * @param description\n        * @return\n        */\n       public static baseresponse error(errorcode errorcode, string description) {\n           return new baseresponse(errorcode.getcode(),errorcode.getmessage(),description);\n       }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   \n\n * globalexceptionhandler中编写具体的异常处理代码\n\n * 修改usercontrollerregister\n   \n   ----------------------------------------\n   \n   search\n   \n   ----------------------------------------\n   \n   current\n   \n   ----------------------------------------\n   \n   delete\n   \n   ----------------------------------------\n   \n   logout\n   \n   ----------------------------------------\n   \n   login\n\n * 修改userserviceimpl\n   \n   ----------------------------------------\n   \n   \n\n * 测试，登录功能运行异常\n\n * debug\n   \n   * 这个功能问题很多，技术力不足，不做了\n   * 2025/4/22 继续做\n\n在登录时 我输入了错误的密码 返回的错误类型是不存在，不符合预期\n\n\n\n问题在于这段\n\n查询条件不应该同时包含密码，如果输入错误的密码，也会返回找不到用户的错误，应该只根据账户进行查询，然后再验证密码。\n\n改成如下逻辑\n\n/* 2.加密 */\nstring encryptpassword = digestutils.md5digestashex((salt + userpassword).getbytes());\n//账户不能重复\nquerywrapper<user> querywrapper = new querywrapper<>();\nquerywrapper.eq("useraccount", useraccount);\nuser user = usermapper.selectone(querywrapper);\n//用户不存在\nif (user == null){\n    throw new businessexception(errorcode.null_error,"用户不存在");\n}\n// 4. 验证密码\nif (!encryptpassword.equals(user.getuserpassword())) {\n    throw new businessexception(errorcode.params_error, "密码错误");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n\n错误已经正常显示了\n\n\n# 推送至github\n\n文字写于：广东',charsets:{cjk:!0}},{title:"需求分析",frontmatter:{title:"需求分析",date:"2025-04-24T15:07:40.000Z",permalink:"/projects/272e22/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/01.%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/01.需求分析.md",key:"v-21868477",path:"/projects/272e22/",headers:[{level:2,title:"需求分析",slug:"需求分析",normalizedTitle:"需求分析",charIndex:5},{level:2,title:"技术栈",slug:"技术栈",normalizedTitle:"技术栈",charIndex:29}],excerpt:'<h1 id="_01-需求分析"><a class="header-anchor" href="#_01-需求分析">#</a> 01.需求分析</h1>\n<p>仿主流AI官网的AI聊天网站</p>\n<p>项目技术栈:</p>\n<p>前端：<strong>React(Nextjs)</strong></p>\n<p>后端：<strong>Supabase</strong> <strong>Drizzle ORM</strong> Tanstack Clerk</p>\n<p>大模型支持：<strong>阿里云百炼</strong></p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"需求分析 技术栈",content:"# 01.需求分析\n\n仿主流AI官网的AI聊天网站\n\n项目技术栈:\n\n前端：React(Nextjs)\n\n后端：Supabase Drizzle ORM Tanstack Clerk\n\n大模型支持：阿里云百炼\n\n\n# 需求分析\n\n类deepseek网站的页面开发\n\n 1. 登录注册功能\n\n 2. 对话功能\n    \n    * 左侧需要侧边栏，记录对话记录\n    * 右侧主页面，需要对话框，发送按钮，模型切换\n\n 3. 模型接入，这里采用阿里云百炼百炼控制台\n\n 4. 对话历史记录\n    \n    采用Supabase作为后端数据库Supabase | The Open Source Firebase Alternative‌.Supabase‌是一个开源数据处理服务平台，提供了数据库、身份验证、文件存储和自动生成的API等基本要素\n\n\n# 技术栈\n\nNextjs\n\nnext.js是一款轻量级的应用框架，主要用于构建静态网站和后端渲染网站。\n\n它在React的基础上提供了一些增强功能，包括服务器渲染（SSR）、静态生成（SSG）、路由等。Next.js的目标是简化React应用程序的开发流程，并提供更好的性能和开发体验。 官网地址：https://nextjs.org/\n\nSupabase\n\nSupabase 是 Firebase 的开源替代品，是一个后端即服务（BaaS）平台，使用 Postgres 数据库，能够添加用户注册和登录，提供存储服务，不用部署在服务器中，提供了Restful API。\n\n官网地址：https://supabase.com/\n\n**Drizzle **\n\nDrizzle 是一个库提供一系列的 opt-in 工具。能够实现 SQL 架构、查询、自动迁移，不需要服务器\n\n作为一个基于 node.js 的 ORM 框架，能够让开发者使用面向对象的方式来操作数据库当中的数据，是具有关系型和类 SQL 查询 API 的 ORM。\n\n官网地址：Drizzle ORM - next gen TypeScript ORM.\n\nTanStack\n\nTanStack是一套为 Web 开发实现获取、缓存、同步和更新服务器状态的库集合。提供了无头、类型安全且拥有很多功能的Web应用程序、路由、状态管理、数据可视化、数据网格/表格等工具。\n\n官网地址：TanStack | High Quality Open-Source Software for Web Developers\n\nClerk\n\nClerk 是一个专门用于处理用户认证和授权的后端服务平台。提供完整的用户注册、登录、身份验证、权限管理等功能，并且支持多种认证方式，如电子邮件、短信验证码、OAuth 等，能够集成在我们的项目中\n\n官网地址：Clerk | Authentication and User Management\n\n文字写于：广东",normalizedContent:"# 01.需求分析\n\n仿主流ai官网的ai聊天网站\n\n项目技术栈:\n\n前端：react(nextjs)\n\n后端：supabase drizzle orm tanstack clerk\n\n大模型支持：阿里云百炼\n\n\n# 需求分析\n\n类deepseek网站的页面开发\n\n 1. 登录注册功能\n\n 2. 对话功能\n    \n    * 左侧需要侧边栏，记录对话记录\n    * 右侧主页面，需要对话框，发送按钮，模型切换\n\n 3. 模型接入，这里采用阿里云百炼百炼控制台\n\n 4. 对话历史记录\n    \n    采用supabase作为后端数据库supabase | the open source firebase alternative‌.supabase‌是一个开源数据处理服务平台，提供了数据库、身份验证、文件存储和自动生成的api等基本要素\n\n\n# 技术栈\n\nnextjs\n\nnext.js是一款轻量级的应用框架，主要用于构建静态网站和后端渲染网站。\n\n它在react的基础上提供了一些增强功能，包括服务器渲染（ssr）、静态生成（ssg）、路由等。next.js的目标是简化react应用程序的开发流程，并提供更好的性能和开发体验。 官网地址：https://nextjs.org/\n\nsupabase\n\nsupabase 是 firebase 的开源替代品，是一个后端即服务（baas）平台，使用 postgres 数据库，能够添加用户注册和登录，提供存储服务，不用部署在服务器中，提供了restful api。\n\n官网地址：https://supabase.com/\n\n**drizzle **\n\ndrizzle 是一个库提供一系列的 opt-in 工具。能够实现 sql 架构、查询、自动迁移，不需要服务器\n\n作为一个基于 node.js 的 orm 框架，能够让开发者使用面向对象的方式来操作数据库当中的数据，是具有关系型和类 sql 查询 api 的 orm。\n\n官网地址：drizzle orm - next gen typescript orm.\n\ntanstack\n\ntanstack是一套为 web 开发实现获取、缓存、同步和更新服务器状态的库集合。提供了无头、类型安全且拥有很多功能的web应用程序、路由、状态管理、数据可视化、数据网格/表格等工具。\n\n官网地址：tanstack | high quality open-source software for web developers\n\nclerk\n\nclerk 是一个专门用于处理用户认证和授权的后端服务平台。提供完整的用户注册、登录、身份验证、权限管理等功能，并且支持多种认证方式，如电子邮件、短信验证码、oauth 等，能够集成在我们的项目中\n\n官网地址：clerk | authentication and user management\n\n文字写于：广东",charsets:{cjk:!0}},{title:"接入deepseek",frontmatter:{title:"接入deepseek",date:"2025-04-25T19:59:40.000Z",permalink:"/projects/38148f/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/03.%E6%8E%A5%E5%85%A5deepseek.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/03.接入deepseek.md",key:"v-43d01a18",path:"/projects/38148f/",headers:[{level:2,title:"模型接入",slug:"模型接入",normalizedTitle:"模型接入",charIndex:42},{level:2,title:"route路由-后端API处理",slug:"route路由-后端api处理",normalizedTitle:"route路由-后端api处理",charIndex:347}],excerpt:'<h1 id="_03-接入deepseek"><a class="header-anchor" href="#_03-接入deepseek">#</a> 03.接入deepseek</h1>\n<p>通过<strong>阿里云百炼</strong>，接入我们需要的ai大模型</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"模型接入 route路由-后端API处理",content:'# 03.接入deepseek\n\n通过阿里云百炼，接入我们需要的ai大模型\n\n\n# 模型接入\n\n阿里云百炼\n\n进行注册登录\n\n阿里云百炼为注册用户提供了免费的额度\n\n来到API参考，点开创建我的API key\n\n确认开通\n\n选择更多模型，选择Deepseek V3\n\n输入API-KEY的名称\n\n\n\n创建成功后复制对应的API-KEY，记录下来\n\n回到控制台，记录下baseurl\n\n回到项目中，在根目录创建.env文件，将刚才复制的API-KEY和BASE_URL填写在.env中\n\nDEEPSEEK_API_KEY="刚才复制的API-KEY"\nBASE_URL="https://dashscope.aliyuncs.com/compatible-mode/v1"\n\n\n1\n2\n\n\n\n# route路由-后端API处理\n\n在 Next.js 中，使用app 目录中的路由处理程序 (Route Handlers) 来处理 API 请求。\n\n创建app/api/chat/route.ts文件\n\n在本项目中route.ts 是为 /api/chat 这个路径提供路由处理程序的文件。\n\n在AI SDK UI: Chatbot 官网文档中复制app/api/chat/route.ts的代码\n\n官方文档的例子是用的openai，我们改成deepseek\n\nimport {createDeepSeek} from "@ai-sdk/deepseek";\n\n\n1\n\n\n增加调用deepseek的路径\n\nconst deepseek = createDeepSeek({\n    apiKey: process.env.DEEPSEEK_API_KEY,\n    baseURL: process.env.BASE_URL\n})\n\n\n1\n2\n3\n4\n\n\n\n\n完整代码：\n\n// 后端API\n/**\n * 将消息传给deepseek，得到result进行流式输出到message\n */\nimport { streamText } from \'ai\';\nimport {createDeepSeek} from "@ai-sdk/deepseek";\n\n// Allow streaming responses up to 30 seconds\nexport const maxDuration = 30;\n\nconst deepseek = createDeepSeek({\n    apiKey: process.env.DEEPSEEK_API_KEY,\n    baseURL: process.env.BASE_URL\n})\n\nexport async function POST(req: Request) {\n    const { messages } = await req.json();\n\n    const result = streamText({\n        model: deepseek(\'deepseek-v3\'),\n        system: \'You are a helpful assistant.\',\n        messages,\n    });\n\n    return result.toDataStreamResponse();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n回到页面进行测试\n\n\n\n这样就接入成功了\n\n文字写于：广东',normalizedContent:'# 03.接入deepseek\n\n通过阿里云百炼，接入我们需要的ai大模型\n\n\n# 模型接入\n\n阿里云百炼\n\n进行注册登录\n\n阿里云百炼为注册用户提供了免费的额度\n\n来到api参考，点开创建我的api key\n\n确认开通\n\n选择更多模型，选择deepseek v3\n\n输入api-key的名称\n\n\n\n创建成功后复制对应的api-key，记录下来\n\n回到控制台，记录下baseurl\n\n回到项目中，在根目录创建.env文件，将刚才复制的api-key和base_url填写在.env中\n\ndeepseek_api_key="刚才复制的api-key"\nbase_url="https://dashscope.aliyuncs.com/compatible-mode/v1"\n\n\n1\n2\n\n\n\n# route路由-后端api处理\n\n在 next.js 中，使用app 目录中的路由处理程序 (route handlers) 来处理 api 请求。\n\n创建app/api/chat/route.ts文件\n\n在本项目中route.ts 是为 /api/chat 这个路径提供路由处理程序的文件。\n\n在ai sdk ui: chatbot 官网文档中复制app/api/chat/route.ts的代码\n\n官方文档的例子是用的openai，我们改成deepseek\n\nimport {createdeepseek} from "@ai-sdk/deepseek";\n\n\n1\n\n\n增加调用deepseek的路径\n\nconst deepseek = createdeepseek({\n    apikey: process.env.deepseek_api_key,\n    baseurl: process.env.base_url\n})\n\n\n1\n2\n3\n4\n\n\n\n\n完整代码：\n\n// 后端api\n/**\n * 将消息传给deepseek，得到result进行流式输出到message\n */\nimport { streamtext } from \'ai\';\nimport {createdeepseek} from "@ai-sdk/deepseek";\n\n// allow streaming responses up to 30 seconds\nexport const maxduration = 30;\n\nconst deepseek = createdeepseek({\n    apikey: process.env.deepseek_api_key,\n    baseurl: process.env.base_url\n})\n\nexport async function post(req: request) {\n    const { messages } = await req.json();\n\n    const result = streamtext({\n        model: deepseek(\'deepseek-v3\'),\n        system: \'you are a helpful assistant.\',\n        messages,\n    });\n\n    return result.todatastreamresponse();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n回到页面进行测试\n\n\n\n这样就接入成功了\n\n文字写于：广东',charsets:{cjk:!0}},{title:"首页&聊天页开发",frontmatter:{title:"首页&聊天页开发",date:"2025-04-25T16:37:08.000Z",permalink:"/projects/42cbd8/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/02.%E9%A6%96%E9%A1%B5&%E8%81%8A%E5%A4%A9%E9%A1%B5%E5%BC%80%E5%8F%91.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/02.首页&聊天页开发.md",key:"v-2338f61b",path:"/projects/42cbd8/",headers:[{level:2,title:"初始化next项目",slug:"初始化next项目",normalizedTitle:"初始化next项目",charIndex:34},{level:2,title:"首页",slug:"首页",normalizedTitle:"首页",charIndex:5},{level:3,title:"导航栏设计",slug:"导航栏设计",normalizedTitle:"导航栏设计",charIndex:133},{level:3,title:"问候语块",slug:"问候语块",normalizedTitle:"问候语块",charIndex:637},{level:3,title:"输入框模块",slug:"输入框模块",normalizedTitle:"输入框模块",charIndex:762},{level:3,title:"模型选择模块",slug:"模型选择模块",normalizedTitle:"模型选择模块",charIndex:1166},{level:3,title:"右下角提交按钮",slug:"右下角提交按钮",normalizedTitle:"右下角提交按钮",charIndex:1208},{level:2,title:"聊天页",slug:"聊天页",normalizedTitle:"聊天页",charIndex:8},{level:3,title:"聊天模块",slug:"聊天模块",normalizedTitle:"聊天模块",charIndex:3656},{level:2,title:"深浅色模式切换",slug:"深浅色模式切换",normalizedTitle:"深浅色模式切换",charIndex:9066},{level:2,title:"Google字体问题",slug:"google字体问题",normalizedTitle:"google字体问题",charIndex:9467}],excerpt:'<h1 id="_02-首页-聊天页开发"><a class="header-anchor" href="#_02-首页-聊天页开发">#</a> 02.首页&amp;聊天页开发</h1>\n<p>AI官网页的<strong>首页</strong>和<strong>聊天页</strong>开发</p>\n',lastUpdated:"2025/4/27 23:24:07",lastUpdatedTimestamp:1745767447e3,headersStr:"初始化next项目 首页 导航栏设计 问候语块 输入框模块 模型选择模块 右下角提交按钮 聊天页 聊天模块 深浅色模式切换 Google字体问题",content:'# 02.首页&聊天页开发\n\nAI官网页的首页和聊天页开发\n\n\n# 初始化next项目\n\n创建next项目，在终端执行\n\nnpm create-next-app@latest\n\n * 初始化各项配置\n\n像下面的图片即创建完成√\n\n打开测试页面\n\n\n# 首页\n\n\n# 导航栏设计\n\n控制首页展示的文件在src/app/layout.tsx中\n\n * 设计：左侧为对话相关的内容，作为导航栏。插入导航栏块\n\n\n\n * 新增Navibar组件 src/components/Navibar.tsx\n   \n   import React from "react";\n   \n   type Props = {}\n   \n   const Navibar = (props:Props) => {\n       return (\n           <div>Navibar</div>\n       )\n   }\n   \n   export default Navibar;\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   创建成功\n   \n   由于我的系统默认颜色是深色，所以next项目默认也是深色文件了，这里的Navibar看不见，后续步骤进行调整\n\n * src/app/page.tsx 打开page文件，删除默认代码\n\nHome 能够作为函数组件导出\n\n\n# 问候语块\n\n * 在首页的中间位置安放问候语块\n   \n   设置为全屏高（h-screen），使用 Flexbox 布局（flex flex-col items-center），使其子元素垂直居中\n   \n   页面实况：\n   \n   \n\n\n# 输入框模块\n\n输入框模块\n\n使用 React 的状态管理来处理输入内容的变化。\n\n * textarea 元素，用于多行文本输入。\n\n * onChange={(e) => setInput(e.target.value)}：当 textarea 的内容发生变化时，更新 input 状态变量的值为当前的输入内容。\n\n * value={input}：将 textarea 的值绑定到 input 状态变量上。\n\n这里的 input和setInput用到了useState 钩子，引入生命钩子并定义两个状态变量\n\nimport {useState} from "react";\n\n.....\nexport default function Home() {\n  const [input, setInput] = useState("");\n....\n\n\n1\n2\n3\n4\n5\n6\n\n\n页面实况：\n\n\n\n\n# 模型选择模块\n\n\n\n创建一个带有条件样式和交互效果的按钮\n\n页面实况：\n\n\n\n\n# 右下角提交按钮\n\n右下角通过提交将输入内容提交给AI\n\n\n\n这里我们导入mui库，它可以提供UI组件Installation - Material UI\n\n进行安装组件库\n\nnpm install @mui/icons-material @mui/material @emotion/styled @emotion/react\n\n\n1\n\n\n安装好后，在我们的page文件里进行导入，插入到提交按钮中\n\nimport EastIcon from \'@mui/icons-material/East\'\n\n......\n          {/* 右下角提交按钮 */}\n            <div className="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full">\n              <EastIcon></EastIcon>\n\n            </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n页面实况：\n\n\n\n首页完整代码：\n\n\'use client\'\n\nimport Image from "next/image";\nimport {useState} from "react";\nimport EastIcon from \'@mui/icons-material/East\'\n\n\nexport default function Home() {\n\n  const [input, setInput] = useState("");\n  const [model,setModel] = useState("deepseek-v3");\n  const handelChangeModel = () => {\n    setModel(model === \'deepseek-v3\' ? \'deepseek-r1\' : \'deepseek-v3\');\n  }\n\n  return (\n    <div className="h-screen flex flex-col items-center">\n      <div className="h-1/5"></div>\n      <div className="w-1/2">\n        <p className="text-bold text-2xl text-center">\n          有什么可以帮您的吗\n        </p>\n\n        <div className="flex flex-col items-center justify-center mt-4\n        shadow-lg border-[1px] border-gray-300 h-32 rounded-lg">\n          <textarea\n            className="w-full rounded-lg p-3 h-30 focus:outline-none"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            >\n          </textarea>\n          <div className="flex flex-row items-center justify-between w-full h-12 mb-2">\n            <div>\n              {/*左下角深度思考按钮*/}\n              <div className={`flex flex-row items-center justify-center rounded-lg \n              border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ? \n                  "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                   onClick={handelChangeModel}\n              >\n                <p className="text-sm">\n                  深度思考(R1)\n                </p>\n              </div>\n            </div>\n          {/* 右下角提交按钮 */}\n            <div className="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full">\n              <EastIcon></EastIcon>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n\n# 聊天页\n\n\n# 聊天模块\n\n创建聊天页文件src/app/chat/[chat_id]/page.tsx\n\n进入nextjs官网文档Routing: Dynamic Routes | Next.js\n\n按照路径格式创建好文件，复制给出的页面例子\n\n把它复制到我们的聊天页文件中进行修改\n\n\n\n点击Menu，在官方文档里找到chatbotAI SDK UI: Chatbot\n\n将例子中的代码复制下来进行保存。它为我们提供了写好的简单聊天问答\n\n\n\n此时切换页面路由进行测试，在本地的：localhost:3000/chat/1\n\n可以看到有一个输入框可以进行聊天了\n\n\n\n输入文字进行测试\n\n\n\n更改布局，使得AI发送的消息在左边，用户发送的消息放在右边,更改气泡框颜色\n\n\n\n页面自动下滑功能\n\n使用useRef钩子，它可以用来存储一个可变的值,这个值在组件的整个生命周期内保持不变。使得消息能够保持在页面中\n\n\n\n\n\n使用useEffect钩子,实现自动滚动到页面底部的功能\n\n    // 自动下滑\n    const endRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if (endRef.current){\n            endRef?.current?.scrollIntoView({behavior: "smooth"})\n        }\n    }, [messages])\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n当 messages 更新时，useEffect 钩子会触发，自动滚动到这个 div 的位置，实际上是滚动到消息列表的底部。{behavior: "smooth"} 参数确保滚动是平滑的\n\n这样就会使页面自动下滑\n\n输入框模块\n\n仿照首页src/app/page.tsx的输入框，复制对应代码\n\n        <div className="flex flex-col items-center justify-center mt-4\n        shadow-lg border-[1px] border-gray-300 h-32 rounded-lg">\n          <textarea\n            className="w-full rounded-lg p-3 h-30 focus:outline-none"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            >\n          </textarea>\n          <div className="flex flex-row items-center justify-between w-full h-12 mb-2">\n            <div>\n              {/*左下角深度思考按钮*/}\n              <div className={`flex flex-row items-center justify-center rounded-lg \n              border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ? \n                  "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                   onClick={handelChangeModel}\n              >\n                <p className="text-sm">\n                  深度思考(R1)\n                </p>\n              </div>\n            </div>\n          {/* 右下角提交按钮 */}\n            <div className="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full">\n              <EastIcon></EastIcon>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n\n定义一个切换模型的方法\n\n增加点击功能，同时在首页也补充此功能\n\n\n\n这样就开发完成了\n\n\n\n聊天页完整代码\n\n\'use client\';\n\nimport {useChat} from \'@ai-sdk/react\';\nimport {useEffect, useRef, useState} from "react";\nimport EastIcon from "@mui/icons-material/East";\n\nexport default function Page() {\n    const {messages, input, handleInputChange, handleSubmit} = useChat({});\n\n    const [model,setModel] = useState("deepseek-v3");\n    const handelChangeModel = () => {\n        setModel(model === \'deepseek-v3\' ? \'deepseek-r1\' : \'deepseek-v3\');\n    }\n    // 自动下滑\n    const endRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        if (endRef.current){\n            endRef?.current?.scrollIntoView({behavior: "smooth"})\n        }\n    }, [messages])\n\n    return (\n        <div className=\'flex flex-col h-screen justify-between items-center\'>\n            <div className=\'flex flex-col w-2/3 gap-8 overflow-auto\n            justify-between flex-1\'>\n                <div className=\'h-4\'></div>\n                <div className=\'flex flex-col gap-8 flex-1\'>\n                    {messages?.map(message => (\n                        <div\n                            key={message.id}\n                            className={`rounded-lg flex flex-row ${message?.role\n                            === \'assistant\' ? \'justify-start mr-18\' : "justify-end ml-10"}`}\n                        >\n                            <p className={`inline-block p-2 rounded-lg ${message?.role\n                             === \'assistant\' ? \'bg-blue-300\' : \'bg-slate-100\'}`}>\n                                {message.content}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n                <div className=\'h-4\' ref={endRef}></div>\n            </div>\n\n        {/*  输入框  */}\n            <div className="flex flex-col items-center justify-center mt-4\n        shadow-lg border-[1px] border-gray-300 h-32 rounded-lg w-2/3">\n          <textarea\n              className="w-full rounded-lg p-3 h-30 focus:outline-none"\n              value={input}\n              onChange={handleInputChange}\n          >\n          </textarea>\n                <div className="flex flex-row items-center justify-between w-full h-12 mb-2">\n                    <div>\n                        {/*左下角深度思考按钮*/}\n                        <div className={`flex flex-row items-center justify-center rounded-lg \n              border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ?\n                            "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                        onClick={handelChangeModel}\n                        >\n                            <p className="text-sm">\n                                深度思考(R1)\n                            </p>\n                        </div>\n                    </div>\n                    {/* 右下角提交按钮 */}\n                    <div className="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full"\n                    onClick={handleSubmit}>\n                        <EastIcon></EastIcon>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\n\n# 深浅色模式切换\n\n根据这篇文章\n\n🌈 为你的网站增加点灵性：随系统变色网站切换主题色已经是非常常见的功能了，提供浅色和暗色两种色调可以满足用户的使用习惯 - 掘金\n\n在src\\app\\globals.css中更改应用程序的主题颜色，从深色改为浅色\n\n/*@media (prefers-color-scheme: dark) {*/\n/*  :root {*/\n/*    --background: #0a0a0a;*/\n/*    --foreground: #ededed;*/\n/*  }*/\n/*}*/\n/* 注释掉原来的深色模式 */\n\n@media (prefers-color-scheme: light) {\n    :root {\n      --background: #f2f2f2;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Google字体问题\n\n\n\n中国大陆用户在访问 Google Fonts 时，浏览器请求可能被网络屏障拦截，或需要通过复杂的迂回路径和多个中间节点才能完成。\n\n在src/app/globals.css中，有未定义的错误\n\n\n\n在root中补充以下代码\n\n:root {\n  --background: #ffffff;\n  --foreground: #171717;\n  //下面两行是补充的代码\n  --font-geist-sans: Arial, Helvetica, sans-serif;\n  --font-geist-mono: "Courier New", Courier, monospace;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n暂时不影响使用\n\n文字写于：广东',normalizedContent:'# 02.首页&聊天页开发\n\nai官网页的首页和聊天页开发\n\n\n# 初始化next项目\n\n创建next项目，在终端执行\n\nnpm create-next-app@latest\n\n * 初始化各项配置\n\n像下面的图片即创建完成√\n\n打开测试页面\n\n\n# 首页\n\n\n# 导航栏设计\n\n控制首页展示的文件在src/app/layout.tsx中\n\n * 设计：左侧为对话相关的内容，作为导航栏。插入导航栏块\n\n\n\n * 新增navibar组件 src/components/navibar.tsx\n   \n   import react from "react";\n   \n   type props = {}\n   \n   const navibar = (props:props) => {\n       return (\n           <div>navibar</div>\n       )\n   }\n   \n   export default navibar;\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   创建成功\n   \n   由于我的系统默认颜色是深色，所以next项目默认也是深色文件了，这里的navibar看不见，后续步骤进行调整\n\n * src/app/page.tsx 打开page文件，删除默认代码\n\nhome 能够作为函数组件导出\n\n\n# 问候语块\n\n * 在首页的中间位置安放问候语块\n   \n   设置为全屏高（h-screen），使用 flexbox 布局（flex flex-col items-center），使其子元素垂直居中\n   \n   页面实况：\n   \n   \n\n\n# 输入框模块\n\n输入框模块\n\n使用 react 的状态管理来处理输入内容的变化。\n\n * textarea 元素，用于多行文本输入。\n\n * onchange={(e) => setinput(e.target.value)}：当 textarea 的内容发生变化时，更新 input 状态变量的值为当前的输入内容。\n\n * value={input}：将 textarea 的值绑定到 input 状态变量上。\n\n这里的 input和setinput用到了usestate 钩子，引入生命钩子并定义两个状态变量\n\nimport {usestate} from "react";\n\n.....\nexport default function home() {\n  const [input, setinput] = usestate("");\n....\n\n\n1\n2\n3\n4\n5\n6\n\n\n页面实况：\n\n\n\n\n# 模型选择模块\n\n\n\n创建一个带有条件样式和交互效果的按钮\n\n页面实况：\n\n\n\n\n# 右下角提交按钮\n\n右下角通过提交将输入内容提交给ai\n\n\n\n这里我们导入mui库，它可以提供ui组件installation - material ui\n\n进行安装组件库\n\nnpm install @mui/icons-material @mui/material @emotion/styled @emotion/react\n\n\n1\n\n\n安装好后，在我们的page文件里进行导入，插入到提交按钮中\n\nimport easticon from \'@mui/icons-material/east\'\n\n......\n          {/* 右下角提交按钮 */}\n            <div classname="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full">\n              <easticon></easticon>\n\n            </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n页面实况：\n\n\n\n首页完整代码：\n\n\'use client\'\n\nimport image from "next/image";\nimport {usestate} from "react";\nimport easticon from \'@mui/icons-material/east\'\n\n\nexport default function home() {\n\n  const [input, setinput] = usestate("");\n  const [model,setmodel] = usestate("deepseek-v3");\n  const handelchangemodel = () => {\n    setmodel(model === \'deepseek-v3\' ? \'deepseek-r1\' : \'deepseek-v3\');\n  }\n\n  return (\n    <div classname="h-screen flex flex-col items-center">\n      <div classname="h-1/5"></div>\n      <div classname="w-1/2">\n        <p classname="text-bold text-2xl text-center">\n          有什么可以帮您的吗\n        </p>\n\n        <div classname="flex flex-col items-center justify-center mt-4\n        shadow-lg border-[1px] border-gray-300 h-32 rounded-lg">\n          <textarea\n            classname="w-full rounded-lg p-3 h-30 focus:outline-none"\n            value={input}\n            onchange={(e) => setinput(e.target.value)}\n            >\n          </textarea>\n          <div classname="flex flex-row items-center justify-between w-full h-12 mb-2">\n            <div>\n              {/*左下角深度思考按钮*/}\n              <div classname={`flex flex-row items-center justify-center rounded-lg \n              border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ? \n                  "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                   onclick={handelchangemodel}\n              >\n                <p classname="text-sm">\n                  深度思考(r1)\n                </p>\n              </div>\n            </div>\n          {/* 右下角提交按钮 */}\n            <div classname="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full">\n              <easticon></easticon>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n\n# 聊天页\n\n\n# 聊天模块\n\n创建聊天页文件src/app/chat/[chat_id]/page.tsx\n\n进入nextjs官网文档routing: dynamic routes | next.js\n\n按照路径格式创建好文件，复制给出的页面例子\n\n把它复制到我们的聊天页文件中进行修改\n\n\n\n点击menu，在官方文档里找到chatbotai sdk ui: chatbot\n\n将例子中的代码复制下来进行保存。它为我们提供了写好的简单聊天问答\n\n\n\n此时切换页面路由进行测试，在本地的：localhost:3000/chat/1\n\n可以看到有一个输入框可以进行聊天了\n\n\n\n输入文字进行测试\n\n\n\n更改布局，使得ai发送的消息在左边，用户发送的消息放在右边,更改气泡框颜色\n\n\n\n页面自动下滑功能\n\n使用useref钩子，它可以用来存储一个可变的值,这个值在组件的整个生命周期内保持不变。使得消息能够保持在页面中\n\n\n\n\n\n使用useeffect钩子,实现自动滚动到页面底部的功能\n\n    // 自动下滑\n    const endref = useref<htmldivelement>(null);\n    useeffect(() => {\n        if (endref.current){\n            endref?.current?.scrollintoview({behavior: "smooth"})\n        }\n    }, [messages])\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n当 messages 更新时，useeffect 钩子会触发，自动滚动到这个 div 的位置，实际上是滚动到消息列表的底部。{behavior: "smooth"} 参数确保滚动是平滑的\n\n这样就会使页面自动下滑\n\n输入框模块\n\n仿照首页src/app/page.tsx的输入框，复制对应代码\n\n        <div classname="flex flex-col items-center justify-center mt-4\n        shadow-lg border-[1px] border-gray-300 h-32 rounded-lg">\n          <textarea\n            classname="w-full rounded-lg p-3 h-30 focus:outline-none"\n            value={input}\n            onchange={(e) => setinput(e.target.value)}\n            >\n          </textarea>\n          <div classname="flex flex-row items-center justify-between w-full h-12 mb-2">\n            <div>\n              {/*左下角深度思考按钮*/}\n              <div classname={`flex flex-row items-center justify-center rounded-lg \n              border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ? \n                  "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                   onclick={handelchangemodel}\n              >\n                <p classname="text-sm">\n                  深度思考(r1)\n                </p>\n              </div>\n            </div>\n          {/* 右下角提交按钮 */}\n            <div classname="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full">\n              <easticon></easticon>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n\n定义一个切换模型的方法\n\n增加点击功能，同时在首页也补充此功能\n\n\n\n这样就开发完成了\n\n\n\n聊天页完整代码\n\n\'use client\';\n\nimport {usechat} from \'@ai-sdk/react\';\nimport {useeffect, useref, usestate} from "react";\nimport easticon from "@mui/icons-material/east";\n\nexport default function page() {\n    const {messages, input, handleinputchange, handlesubmit} = usechat({});\n\n    const [model,setmodel] = usestate("deepseek-v3");\n    const handelchangemodel = () => {\n        setmodel(model === \'deepseek-v3\' ? \'deepseek-r1\' : \'deepseek-v3\');\n    }\n    // 自动下滑\n    const endref = useref<htmldivelement>(null);\n    useeffect(() => {\n        if (endref.current){\n            endref?.current?.scrollintoview({behavior: "smooth"})\n        }\n    }, [messages])\n\n    return (\n        <div classname=\'flex flex-col h-screen justify-between items-center\'>\n            <div classname=\'flex flex-col w-2/3 gap-8 overflow-auto\n            justify-between flex-1\'>\n                <div classname=\'h-4\'></div>\n                <div classname=\'flex flex-col gap-8 flex-1\'>\n                    {messages?.map(message => (\n                        <div\n                            key={message.id}\n                            classname={`rounded-lg flex flex-row ${message?.role\n                            === \'assistant\' ? \'justify-start mr-18\' : "justify-end ml-10"}`}\n                        >\n                            <p classname={`inline-block p-2 rounded-lg ${message?.role\n                             === \'assistant\' ? \'bg-blue-300\' : \'bg-slate-100\'}`}>\n                                {message.content}\n                            </p>\n                        </div>\n                    ))}\n                </div>\n                <div classname=\'h-4\' ref={endref}></div>\n            </div>\n\n        {/*  输入框  */}\n            <div classname="flex flex-col items-center justify-center mt-4\n        shadow-lg border-[1px] border-gray-300 h-32 rounded-lg w-2/3">\n          <textarea\n              classname="w-full rounded-lg p-3 h-30 focus:outline-none"\n              value={input}\n              onchange={handleinputchange}\n          >\n          </textarea>\n                <div classname="flex flex-row items-center justify-between w-full h-12 mb-2">\n                    <div>\n                        {/*左下角深度思考按钮*/}\n                        <div classname={`flex flex-row items-center justify-center rounded-lg \n              border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ?\n                            "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                        onclick={handelchangemodel}\n                        >\n                            <p classname="text-sm">\n                                深度思考(r1)\n                            </p>\n                        </div>\n                    </div>\n                    {/* 右下角提交按钮 */}\n                    <div classname="flex items-center justify-center border-2 mr-4 border-black p-1\n            rounded-full"\n                    onclick={handlesubmit}>\n                        <easticon></easticon>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\n\n# 深浅色模式切换\n\n根据这篇文章\n\n🌈 为你的网站增加点灵性：随系统变色网站切换主题色已经是非常常见的功能了，提供浅色和暗色两种色调可以满足用户的使用习惯 - 掘金\n\n在src\\app\\globals.css中更改应用程序的主题颜色，从深色改为浅色\n\n/*@media (prefers-color-scheme: dark) {*/\n/*  :root {*/\n/*    --background: #0a0a0a;*/\n/*    --foreground: #ededed;*/\n/*  }*/\n/*}*/\n/* 注释掉原来的深色模式 */\n\n@media (prefers-color-scheme: light) {\n    :root {\n      --background: #f2f2f2;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# google字体问题\n\n\n\n中国大陆用户在访问 google fonts 时，浏览器请求可能被网络屏障拦截，或需要通过复杂的迂回路径和多个中间节点才能完成。\n\n在src/app/globals.css中，有未定义的错误\n\n\n\n在root中补充以下代码\n\n:root {\n  --background: #ffffff;\n  --foreground: #171717;\n  //下面两行是补充的代码\n  --font-geist-sans: arial, helvetica, sans-serif;\n  --font-geist-mono: "courier new", courier, monospace;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n暂时不影响使用\n\n文字写于：广东',charsets:{cjk:!0}},{title:"数据库搭建",frontmatter:{title:"数据库搭建",date:"2025-04-24T23:37:33.000Z",permalink:"/projects/55f22c/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/04.%E6%95%B0%E6%8D%AE%E5%BA%93%E6%90%AD%E5%BB%BA.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/04.数据库搭建.md",key:"v-2e2102c7",path:"/projects/55f22c/",headers:[{level:2,title:"注册账号，创建数据库项目",slug:"注册账号-创建数据库项目",normalizedTitle:"注册账号，创建数据库项目",charIndex:63},{level:3,title:"需求分析",slug:"需求分析",normalizedTitle:"需求分析",charIndex:80},{level:2,title:"ORM",slug:"orm",normalizedTitle:"orm",charIndex:452},{level:3,title:"数据库初始化",slug:"数据库初始化",normalizedTitle:"数据库初始化",charIndex:460},{level:3,title:"定义创建数据库表方法",slug:"定义创建数据库表方法",normalizedTitle:"定义创建数据库表方法",charIndex:4034},{level:3,title:"聊天模块",slug:"聊天模块",normalizedTitle:"聊天模块",charIndex:4558},{level:3,title:"内容模块",slug:"内容模块",normalizedTitle:"内容模块",charIndex:4595}],excerpt:'<h1 id="_04-数据库搭建"><a class="header-anchor" href="#_04-数据库搭建">#</a> 04.数据库搭建</h1>\n<p>数据库采用<strong>supabase</strong></p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"注册账号，创建数据库项目 需求分析 ORM 数据库初始化 定义创建数据库表方法 聊天模块 内容模块",content:'# 04.数据库搭建\n\n数据库采用supabase\n\n登入supabasehttps://supabase.com/\n\n\n# 注册账号，创建数据库项目\n\n\n# 需求分析\n\n数据库需要包含的表\n\n * 聊天表格chatsTable\n   * id用户id使用的大模型\n   * userId，用户名\n   * title，标题\n   * model，使用的大模型\n * 消息表格messagesTable\n   * id，用户id\n   * chatId，聊天页的编号\n   * role，对话的角色，分为AI或者用户\n   * content，聊天的内容\n\n 1. 点击注册，可以使用github关联\n\n 2. 进入个人Dashboard 仪表板\n\n 3. 创建项目 记得将密码保存起来，放在.env文件里\n\n 4. 点击左上角的connect\n    \n    ----------------------------------------\n    \n    将链接地址保存在.env文件中\n\n\n# ORM\n\n\n# 数据库初始化\n\nORM是指对象关系映射技术（Object Relational Mapping），用于实现面向对象编程语言里不同类型系统的数据之间的转换。\n\n我们使用 drizzle ORM\n\n * 找到Get Started\n\n * 有我们需要的Supabase，打开官方文档 Drizzle ORM - PostgreSQL\n\n * Step1.根据官方文档安装依赖\n\n * Step2.安装好后，回到我们的.env 将刚才保存的URL和密码按以下格式改好\n   \n   DATABASE_URL=postgresql://postgres:[PASSWORD]@db.upvkqcmscrcetlwlfimu.supabase.co:5432/postgres\n   \n   \n   1\n   \n\n * Step3.在src/db中创建index.ts文件进行连接的初始化，我们需要同步数据，所以复制官方文档的代码 进行修改\n   \n   import { drizzle } from \'drizzle-orm/postgres-js\'\n   import postgres from \'postgres\'\n   \n       const client = postgres(process.env.DATABASE_URL)\n       const db = drizzle({ client });\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * Step4.创建数据库表。在db文件夹里创建一个新文件schema.ts\n   \n   import { integer, pgTable, varchar } from "drizzle-orm/pg-core";\n   \n   export const usersTable = pgTable("users", {\n     id: integer().primaryKey().generatedAlwaysAsIdentity(),\n     name: varchar({ length: 255 }).notNull(),\n     age: integer().notNull(),\n     email: varchar({ length: 255 }).notNull().unique(),\n   });\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n   \n   官方帮助我们定义了一个User表，包含用户id、用户名字、年龄、邮箱\n   \n   我们仿照这个格式定义一个chatsTable(聊天表格),包含用户id，名字，标题，使用的大模型\n   \n   export const chatsTable = pgTable("chats", {\n       id: serial().primaryKey(),\n       userId:text("user_id").notNull(),\n       title:text("title").notNull(),\n       model:text("model").notNull(),\n   })\n   \n   //以上代码后续会出现错误 下面是更改之后的\n   export const chatsTable = pgTable("chats", {\n       id: serial("id").primaryKey(),\n       userId: text("user_id").notNull(),\n       title: text("title").notNull(),\n       model: text("model").notNull()\n   })\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n   \n   并且引入好依赖\n   \n   import {integer, pgTable, serial, varchar , text} from "drizzle-orm/pg-core";\n   \n   \n   1\n   \n   \n   定义一个(messagesTable)消息表格，包含用户id、聊天页的编号、对话的角色，分为AI或者用户、聊天的内容\n\nexport const messagesTable = pgTable("messages", {\n    id: serial().primaryKey(),\n    chatId:text("chat_id").notNull(),\n    role:text("role").notNull(),\n    content:text("content").notNull(),\n})\n\n//以上代码后续会出现错误 下面是更改之后的\nexport const messagesTable = pgTable("messages", {\n    id: serial("id").primaryKey(),\n    chatId: integer("chat_id").references(() => chatsTable.id),\n    role: text("role").notNull(),\n    content: text("content").notNull()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n我们需要再定义两个类型\n\nexport type ChatModel =typeof chatsTable.$inferSelect\nexport type MessageModel =typeof messagesTable.$inferSelect\n\n\n1\n2\n\n\n利用 Prisma 的类型推断功能，根据数据库表的查询结果自动定义相应的类型。\n\n * Step5.在根目录（和package.json同级）新增一个配置文件drizzle.config.ts 复制代码,这里记录了schema（概要|描述数据库的组织和结构）的路径、dialect表示输出的方式\n   \n   import \'dotenv/config\';\n   import { defineConfig } from \'drizzle-kit\';\n   \n   export default defineConfig({\n     out: \'./drizzle\',\n     schema: \'./src/db/schema.ts\',\n     dialect: \'postgresql\',\n     dbCredentials: {\n       url: process.env.DATABASE_URL!,\n     },\n   });\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * Step6.将User表删除，我们用了Clerk定义，后续把自己写的后端接上的时候再用。\n\n * Step7.将我们修改过后的代码应用于数据库，在终端执行命令npx drizzle-kit push 测试连接失败❌ ETIMEDOUT表示连接超时查了一下资料\n   \n   IPv6 地址的格式是 8组4位十六进制数，用冒号分隔\n   \n   > 2406:da18:243:740f:21f6:96ab:3aeb:14fa\n   \n   而 IPv4 地址是 *4组1-3位十进制数，用点分隔\n   \n   > 192.168.1.1\n   \n   不支持ipv6改用另外两个连接，就是把env文件里的url地址改为这两个\n   \n   此方法是在项目教学的评论区找到的，建立一个能够交流的社区能够很好的帮助到其他人呀。\n\n * 连接成功✔回到supabase项目中 查看连接\n\n发现两个表格的"id"项没有出现预期的关联，原因是建表的语句里少了键值\n\n并且chat_id的属性需要从text转化成integer。由于我们改变了数据类型，由于我们改变了数据类型， Drizzle-Kit 在迁移过程中无法自动将 chat_id 列从其当前类型，直接回到supabase进行修改，发现还是不行（流汗了） 直接删除表重新创建吧\n\n此时成功\n\n\n\n\n# 定义创建数据库表方法\n\nJS的模块语言\n\n * export 关键字：表示这个函数可以被其他模块导入和使用。这是 TypeScript 和 JavaScript 中模块化编程的一部分。\n\n * const 关键字：声明一个常量，表示这个函数一旦被定义，其引用不能被重新赋值。\n\n * async 关键字：表示这个函数是一个异步函数。异步函数允许在函数内部使用 await 关键字，用于等待异步操作（如数据库操作）完成。\n\n * await 关键字：用于等待异步操作完成。await 只能在 async 函数中使用。\n\n * 箭头函数语法：=> 表示这是一个箭头函数，箭头函数是 ES6 中引入的一种更简洁的函数写法。箭头函数没有自己的 this 上下文，它会捕获其所在上下文的 this 值。\n\n * # try...catch 块\n   \n   * try 块：包含可能抛出错误的代码。如果代码执行过程中发生错误，错误会被捕获并传递到 catch 块中。\n   * catch 块：捕获 try 块中抛出的错误，并进行处理。error 是捕获到的错误对象。\n\n构建创建操作数据库表的函数\n\nchat_id对应多个message，是一对多\n\n\n# 聊天模块\n\n创建聊天的表格，记录标题，用户id，以及使用的大模型，可以说是内容模块的“身份证“。\n\n插入title，userid，model\n\n// chats\nexport const createChat = async (title: string, userId: string, model: string) => {\n    try {\n        const [newChat] = await db.insert(chatsTable).values({\n            title,\n            userId,\n            model\n        }).returning()\n        return newChat\n    } catch (error) {\n        console.log("error creating chat", error)\n        return null\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n定义一个get方法，从数据库中获取聊天的数据\n\nexport const getChat = async (chatId: number, userId: string) => {\n    try {\n        //用and连接查询\n        const chat = await db.select().from(chatsTable).where(and(eq(chatsTable.id, chatId), eq(chatsTable.userId, userId)))\n        if (chat.length === 0) {\n            return null\n        }\n        return chat[0]\n    } catch (error) {\n        console.log("error getting chat", error)\n        return null\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n侧边栏获取聊天函数\n\nexport const getChats = async (userId: string) => {\n    try {\n        const chats = await db.select().from(chatsTable).where(eq(chatsTable.userId, userId)).orderBy(desc(chatsTable.id))\n\n        return chats\n    } catch (error) {\n        console.log("error getting chats", error)\n        return null\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 内容模块\n\n按同样的结构，定义查询消息的方法\n\n\n// messages\nexport const createMessage = async (chat_id: number, content: string, role: string) => {\n    try {\n        const [newMessage] = await db.insert(messagesTable).values({\n            content: content,\n            chatId: chat_id,\n            role: role\n        }).returning()\n        return newMessage\n    } catch (error) {\n        console.log("error createMessage", error)\n        return null\n    }\n}\n\n//根据chatid获取消息\nexport const getMessagesByChatId = async (chatId: number) => {\n    try {\n        const messages = await db.select().from(messagesTable).where(eq(messagesTable.chatId, chatId))\n        return messages\n    } catch (error) {\n        console.log("error getMessagesByChatId", error)\n        return null\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n这样数据库就搭建好了\n\n文字写于：广东',normalizedContent:'# 04.数据库搭建\n\n数据库采用supabase\n\n登入supabasehttps://supabase.com/\n\n\n# 注册账号，创建数据库项目\n\n\n# 需求分析\n\n数据库需要包含的表\n\n * 聊天表格chatstable\n   * id用户id使用的大模型\n   * userid，用户名\n   * title，标题\n   * model，使用的大模型\n * 消息表格messagestable\n   * id，用户id\n   * chatid，聊天页的编号\n   * role，对话的角色，分为ai或者用户\n   * content，聊天的内容\n\n 1. 点击注册，可以使用github关联\n\n 2. 进入个人dashboard 仪表板\n\n 3. 创建项目 记得将密码保存起来，放在.env文件里\n\n 4. 点击左上角的connect\n    \n    ----------------------------------------\n    \n    将链接地址保存在.env文件中\n\n\n# orm\n\n\n# 数据库初始化\n\norm是指对象关系映射技术（object relational mapping），用于实现面向对象编程语言里不同类型系统的数据之间的转换。\n\n我们使用 drizzle orm\n\n * 找到get started\n\n * 有我们需要的supabase，打开官方文档 drizzle orm - postgresql\n\n * step1.根据官方文档安装依赖\n\n * step2.安装好后，回到我们的.env 将刚才保存的url和密码按以下格式改好\n   \n   database_url=postgresql://postgres:[password]@db.upvkqcmscrcetlwlfimu.supabase.co:5432/postgres\n   \n   \n   1\n   \n\n * step3.在src/db中创建index.ts文件进行连接的初始化，我们需要同步数据，所以复制官方文档的代码 进行修改\n   \n   import { drizzle } from \'drizzle-orm/postgres-js\'\n   import postgres from \'postgres\'\n   \n       const client = postgres(process.env.database_url)\n       const db = drizzle({ client });\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * step4.创建数据库表。在db文件夹里创建一个新文件schema.ts\n   \n   import { integer, pgtable, varchar } from "drizzle-orm/pg-core";\n   \n   export const userstable = pgtable("users", {\n     id: integer().primarykey().generatedalwaysasidentity(),\n     name: varchar({ length: 255 }).notnull(),\n     age: integer().notnull(),\n     email: varchar({ length: 255 }).notnull().unique(),\n   });\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n   \n   官方帮助我们定义了一个user表，包含用户id、用户名字、年龄、邮箱\n   \n   我们仿照这个格式定义一个chatstable(聊天表格),包含用户id，名字，标题，使用的大模型\n   \n   export const chatstable = pgtable("chats", {\n       id: serial().primarykey(),\n       userid:text("user_id").notnull(),\n       title:text("title").notnull(),\n       model:text("model").notnull(),\n   })\n   \n   //以上代码后续会出现错误 下面是更改之后的\n   export const chatstable = pgtable("chats", {\n       id: serial("id").primarykey(),\n       userid: text("user_id").notnull(),\n       title: text("title").notnull(),\n       model: text("model").notnull()\n   })\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n   \n   并且引入好依赖\n   \n   import {integer, pgtable, serial, varchar , text} from "drizzle-orm/pg-core";\n   \n   \n   1\n   \n   \n   定义一个(messagestable)消息表格，包含用户id、聊天页的编号、对话的角色，分为ai或者用户、聊天的内容\n\nexport const messagestable = pgtable("messages", {\n    id: serial().primarykey(),\n    chatid:text("chat_id").notnull(),\n    role:text("role").notnull(),\n    content:text("content").notnull(),\n})\n\n//以上代码后续会出现错误 下面是更改之后的\nexport const messagestable = pgtable("messages", {\n    id: serial("id").primarykey(),\n    chatid: integer("chat_id").references(() => chatstable.id),\n    role: text("role").notnull(),\n    content: text("content").notnull()\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n我们需要再定义两个类型\n\nexport type chatmodel =typeof chatstable.$inferselect\nexport type messagemodel =typeof messagestable.$inferselect\n\n\n1\n2\n\n\n利用 prisma 的类型推断功能，根据数据库表的查询结果自动定义相应的类型。\n\n * step5.在根目录（和package.json同级）新增一个配置文件drizzle.config.ts 复制代码,这里记录了schema（概要|描述数据库的组织和结构）的路径、dialect表示输出的方式\n   \n   import \'dotenv/config\';\n   import { defineconfig } from \'drizzle-kit\';\n   \n   export default defineconfig({\n     out: \'./drizzle\',\n     schema: \'./src/db/schema.ts\',\n     dialect: \'postgresql\',\n     dbcredentials: {\n       url: process.env.database_url!,\n     },\n   });\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * step6.将user表删除，我们用了clerk定义，后续把自己写的后端接上的时候再用。\n\n * step7.将我们修改过后的代码应用于数据库，在终端执行命令npx drizzle-kit push 测试连接失败❌ etimedout表示连接超时查了一下资料\n   \n   ipv6 地址的格式是 8组4位十六进制数，用冒号分隔\n   \n   > 2406:da18:243:740f:21f6:96ab:3aeb:14fa\n   \n   而 ipv4 地址是 *4组1-3位十进制数，用点分隔\n   \n   > 192.168.1.1\n   \n   不支持ipv6改用另外两个连接，就是把env文件里的url地址改为这两个\n   \n   此方法是在项目教学的评论区找到的，建立一个能够交流的社区能够很好的帮助到其他人呀。\n\n * 连接成功✔回到supabase项目中 查看连接\n\n发现两个表格的"id"项没有出现预期的关联，原因是建表的语句里少了键值\n\n并且chat_id的属性需要从text转化成integer。由于我们改变了数据类型，由于我们改变了数据类型， drizzle-kit 在迁移过程中无法自动将 chat_id 列从其当前类型，直接回到supabase进行修改，发现还是不行（流汗了） 直接删除表重新创建吧\n\n此时成功\n\n\n\n\n# 定义创建数据库表方法\n\njs的模块语言\n\n * export 关键字：表示这个函数可以被其他模块导入和使用。这是 typescript 和 javascript 中模块化编程的一部分。\n\n * const 关键字：声明一个常量，表示这个函数一旦被定义，其引用不能被重新赋值。\n\n * async 关键字：表示这个函数是一个异步函数。异步函数允许在函数内部使用 await 关键字，用于等待异步操作（如数据库操作）完成。\n\n * await 关键字：用于等待异步操作完成。await 只能在 async 函数中使用。\n\n * 箭头函数语法：=> 表示这是一个箭头函数，箭头函数是 es6 中引入的一种更简洁的函数写法。箭头函数没有自己的 this 上下文，它会捕获其所在上下文的 this 值。\n\n * # try...catch 块\n   \n   * try 块：包含可能抛出错误的代码。如果代码执行过程中发生错误，错误会被捕获并传递到 catch 块中。\n   * catch 块：捕获 try 块中抛出的错误，并进行处理。error 是捕获到的错误对象。\n\n构建创建操作数据库表的函数\n\nchat_id对应多个message，是一对多\n\n\n# 聊天模块\n\n创建聊天的表格，记录标题，用户id，以及使用的大模型，可以说是内容模块的“身份证“。\n\n插入title，userid，model\n\n// chats\nexport const createchat = async (title: string, userid: string, model: string) => {\n    try {\n        const [newchat] = await db.insert(chatstable).values({\n            title,\n            userid,\n            model\n        }).returning()\n        return newchat\n    } catch (error) {\n        console.log("error creating chat", error)\n        return null\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n定义一个get方法，从数据库中获取聊天的数据\n\nexport const getchat = async (chatid: number, userid: string) => {\n    try {\n        //用and连接查询\n        const chat = await db.select().from(chatstable).where(and(eq(chatstable.id, chatid), eq(chatstable.userid, userid)))\n        if (chat.length === 0) {\n            return null\n        }\n        return chat[0]\n    } catch (error) {\n        console.log("error getting chat", error)\n        return null\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n侧边栏获取聊天函数\n\nexport const getchats = async (userid: string) => {\n    try {\n        const chats = await db.select().from(chatstable).where(eq(chatstable.userid, userid)).orderby(desc(chatstable.id))\n\n        return chats\n    } catch (error) {\n        console.log("error getting chats", error)\n        return null\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 内容模块\n\n按同样的结构，定义查询消息的方法\n\n\n// messages\nexport const createmessage = async (chat_id: number, content: string, role: string) => {\n    try {\n        const [newmessage] = await db.insert(messagestable).values({\n            content: content,\n            chatid: chat_id,\n            role: role\n        }).returning()\n        return newmessage\n    } catch (error) {\n        console.log("error createmessage", error)\n        return null\n    }\n}\n\n//根据chatid获取消息\nexport const getmessagesbychatid = async (chatid: number) => {\n    try {\n        const messages = await db.select().from(messagestable).where(eq(messagestable.chatid, chatid))\n        return messages\n    } catch (error) {\n        console.log("error getmessagesbychatid", error)\n        return null\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n这样数据库就搭建好了\n\n文字写于：广东',charsets:{cjk:!0}},{title:"登陆系统-clerk",frontmatter:{title:"登陆系统-clerk",date:"2025-04-27T03:33:36.000Z",permalink:"/projects/97c25a/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/06.%E7%99%BB%E9%99%86%E7%B3%BB%E7%BB%9F-clerk.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/06.登陆系统-clerk.md",key:"v-735b8498",path:"/projects/97c25a/",headers:[{level:2,title:"安装 @clerk/nextjs",slug:"安装-clerk-nextjs",normalizedTitle:"安装 @clerk/nextjs",charIndex:135},{level:2,title:"设置 Clerk API 密钥",slug:"设置-clerk-api-密钥",normalizedTitle:"设置 clerk api 密钥",charIndex:188},{level:2,title:"添加登录页",slug:"添加登录页",normalizedTitle:"添加登录页",charIndex:355}],excerpt:'<h1 id="_06-登陆系统-clerk"><a class="header-anchor" href="#_06-登陆系统-clerk">#</a> 06.登陆系统-Clerk</h1>\n<p>Clerk提供了身份验证程序可以让通过邮箱登录。</p>\n',lastUpdated:"2025/4/27 23:24:07",lastUpdatedTimestamp:1745767447e3,headersStr:"安装 @clerk/nextjs 设置 Clerk API 密钥 添加登录页",content:"# 06.登陆系统-Clerk\n\nClerk提供了身份验证程序可以让通过邮箱登录。\n\n只需添加 < SignIn/>、< SignUp/>、< UserButton/>、< UserProfile/> 即可获得完整的用户管理功能。\n\n文员 |身份验证和用户管理\n\n\n# 安装 @clerk/nextjs\n\nnpm install @clerk/nextjs\n\n\n1\n\n\n\n# 设置 Clerk API 密钥\n\nSign in | Clerk通过邮箱注册并登录Clerk\n\n 1. 创建应用\n\n选择邮箱登录\n\n2.将API密钥复制到env文件\n\n3.创建src/middleware.ts，复制代码\n\n4.添加ClerkProvider\n\n记得在结尾处添加结束标签\n\n继续添加代码 点击continue\n\n\n# 添加登录页\n\n * 阅读文档，将build signin相关代码添加到app/sign-in/[[...sign-in]]/page.tsx\n\n * 调整middleware.ts的代码\n\n当前路由需要时公共路由\n\n * 更新.env的环境变量\n\n添加\n\nNEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in\n\n\n1\n\n\n启动应用测试\n\n\n\n成功跳转到了首页\n\n\n\n文字写于：广东",normalizedContent:"# 06.登陆系统-clerk\n\nclerk提供了身份验证程序可以让通过邮箱登录。\n\n只需添加 < signin/>、< signup/>、< userbutton/>、< userprofile/> 即可获得完整的用户管理功能。\n\n文员 |身份验证和用户管理\n\n\n# 安装 @clerk/nextjs\n\nnpm install @clerk/nextjs\n\n\n1\n\n\n\n# 设置 clerk api 密钥\n\nsign in | clerk通过邮箱注册并登录clerk\n\n 1. 创建应用\n\n选择邮箱登录\n\n2.将api密钥复制到env文件\n\n3.创建src/middleware.ts，复制代码\n\n4.添加clerkprovider\n\n记得在结尾处添加结束标签\n\n继续添加代码 点击continue\n\n\n# 添加登录页\n\n * 阅读文档，将build signin相关代码添加到app/sign-in/[[...sign-in]]/page.tsx\n\n * 调整middleware.ts的代码\n\n当前路由需要时公共路由\n\n * 更新.env的环境变量\n\n添加\n\nnext_public_clerk_sign_in_url=/sign-in\n\n\n1\n\n\n启动应用测试\n\n\n\n成功跳转到了首页\n\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"首页完善（前端）",frontmatter:{title:"首页完善（前端）",date:"2025-04-26T05:02:41.000Z",permalink:"/projects/482be9/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/05.%E9%A6%96%E9%A1%B5%E5%AE%8C%E5%96%84%EF%BC%88%E5%89%8D%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/05.首页完善（前端）.md",key:"v-3dffb064",path:"/projects/482be9/",headers:[{level:2,title:"首页完善",slug:"首页完善",normalizedTitle:"首页完善",charIndex:5}],excerpt:'<h1 id="_05-首页完善-前端"><a class="header-anchor" href="#_05-首页完善-前端">#</a> 05.<strong>首页</strong>完善(前端)</h1>\n<p><strong>首页</strong>完善（上）</p>\n',lastUpdated:"2025/4/27 23:24:07",lastUpdatedTimestamp:1745767447e3,headersStr:"首页完善",content:'# 05.首页完善(前端)\n\n首页完善（上）\n\nOverview | TanStack Query React Docs\n\nreact-query是一个针对 React 应用的状态管理器，可以简化许多任务，例如处理 HTTP 请求状态、在客户端保存数据以防止多次请求、使用 hooks 共享数据等等。\n\n安装\n\n$npm i @tanstack/react-query\n\n\n1\n\n\n查询文档Quick Start | TanStack Query React Docs\n\n需要定义一个组件 将client包裹起来，QueryClient可用于与缓存交互\n\n\n# 首页完善\n\n * 定义一个tsx组件，src/components/QueryClientProvider.tsx，将官方示例复制过来\n\n修改代码\n\n\'use client\'//增加\n\nimport {\n    useQuery,\n    useMutation,\n    useQueryClient,\n    QueryClient,\n    QueryClientProvider,\n} from \'@tanstack/react-query\'\n\n// Create a client\nconst queryClient = new QueryClient()\n\nfunction App({children}: {children: React.ReactNode}) {//修改\n    return (\n        // Provide the client to your App\n        //删除Todos改成children\n        <QueryClientProvider client={queryClient}>\n            {children}\n        </QueryClientProvider>\n    )\n}\n\nexport default App //定义App作为可被引用的组件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n * 在layout.tsx中插入QueryClientProvider组件\n\n  import QueryClientProvider from "@/components/QueryClientProvider";\n  \n  .....\n  children: React.ReactNode;\n}>) {\n  return (\n  <QueryClientProvider>\n  ......\n      </html>\n  </QueryClientProvider>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n * 在首页src/app/page.tsx中使用这个钩子\n\n\n\n * 此处需要安装axios库,import上图红色的组件，useUser是clerk提供的登录功能，在后一篇我们会安装它\n\n * 设置router，成功后跳转创建好的聊天页面\n\nrouter.push(`/chat/${res.data.id}`)\n\n\n1\n\n\n\n\n * 首页的提交按钮此时还没有执行逻辑，添加进去\n\n * 完整代码\n   \n   \'use client\'\n   \n   import Image from "next/image";\n   import {useState} from "react";\n   import EastIcon from \'@mui/icons-material/East\'\n   import {useMutation, useQueryClient} from "@tanstack/react-query";\n   import axios from "axios"\n   import {useRouter} from "next/router";\n   import {useUser} from "@clerk/nextjs";\n   \n   \n   export default function Home() {\n   \n     const [input, setInput] = useState("");\n     const [model,setModel] = useState("deepseek-v3");\n     const handelChangeModel = () => {\n       setModel(model === \'deepseek-v3\' ? \'deepseek-r1\' : \'deepseek-v3\');\n     }\n     // Access the client\n     const queryClient = useQueryClient()\n     const router = useRouter()\n   \n     const {user} = useUser()\n   \n     // Mutations\n     const {mutate: createChat} = useMutation({\n       mutationFn: async() =>{\n         return axios.post(\'/api/create-chat\',{\n           title: input,\n           model: model\n         })\n       },\n       onSuccess: (res) => {\n         router.push(`/chat/${res.data.id}`)\n         queryClient.invalidateQueries({ queryKey: [\'chats\'] })\n       },\n     })\n   \n   const handleSubmit=() =>{\n       if(input.trim()===\'\'){\n         return\n       }\n   \n       if(!user){\n         router.push("/sign-in")\n         return\n       }\n   \n       createChat()\n   }\n     return (\n       <div className="h-screen flex flex-col items-center">\n         <div className="h-1/5"></div>\n         <div className="w-1/2">\n           <p className="text-bold text-2xl text-center">\n             有什么可以帮您的吗\n           </p>\n   \n           <div className="flex flex-col items-center justify-center mt-4\n           shadow-lg border-[1px] border-gray-300 h-32 rounded-lg">\n             <textarea\n               className="w-full rounded-lg p-3 h-30 focus:outline-none"\n               value={input}\n               onChange={(e) => setInput(e.target.value)}\n               >\n             </textarea>\n             <div className="flex flex-row items-center justify-between w-full h-12 mb-2">\n               <div>\n                 {/*左下角深度思考按钮*/}\n                 <div className={`flex flex-row items-center justify-center rounded-lg \n                 border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ? \n                     "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                      onClick={handelChangeModel}\n                 >\n                   <p className="text-sm">\n                     深度思考(R1)\n                   </p>\n                 </div>\n               </div>\n             {/* 右下角提交按钮 */}\n               <div className="flex items-center justify-center border-2 mr-4 border-black p-1\n               rounded-full"\n                 onClick={handleSubmit}\n               >\n                 <EastIcon></EastIcon>\n   \n               </div>\n             </div>\n   \n           </div>\n         </div>\n       </div>\n     );\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   \n\n前端的请求完成了，还需要在后端写相应的逻辑处理\n\n文字写于：广东',normalizedContent:'# 05.首页完善(前端)\n\n首页完善（上）\n\noverview | tanstack query react docs\n\nreact-query是一个针对 react 应用的状态管理器，可以简化许多任务，例如处理 http 请求状态、在客户端保存数据以防止多次请求、使用 hooks 共享数据等等。\n\n安装\n\n$npm i @tanstack/react-query\n\n\n1\n\n\n查询文档quick start | tanstack query react docs\n\n需要定义一个组件 将client包裹起来，queryclient可用于与缓存交互\n\n\n# 首页完善\n\n * 定义一个tsx组件，src/components/queryclientprovider.tsx，将官方示例复制过来\n\n修改代码\n\n\'use client\'//增加\n\nimport {\n    usequery,\n    usemutation,\n    usequeryclient,\n    queryclient,\n    queryclientprovider,\n} from \'@tanstack/react-query\'\n\n// create a client\nconst queryclient = new queryclient()\n\nfunction app({children}: {children: react.reactnode}) {//修改\n    return (\n        // provide the client to your app\n        //删除todos改成children\n        <queryclientprovider client={queryclient}>\n            {children}\n        </queryclientprovider>\n    )\n}\n\nexport default app //定义app作为可被引用的组件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n * 在layout.tsx中插入queryclientprovider组件\n\n  import queryclientprovider from "@/components/queryclientprovider";\n  \n  .....\n  children: react.reactnode;\n}>) {\n  return (\n  <queryclientprovider>\n  ......\n      </html>\n  </queryclientprovider>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n * 在首页src/app/page.tsx中使用这个钩子\n\n\n\n * 此处需要安装axios库,import上图红色的组件，useuser是clerk提供的登录功能，在后一篇我们会安装它\n\n * 设置router，成功后跳转创建好的聊天页面\n\nrouter.push(`/chat/${res.data.id}`)\n\n\n1\n\n\n\n\n * 首页的提交按钮此时还没有执行逻辑，添加进去\n\n * 完整代码\n   \n   \'use client\'\n   \n   import image from "next/image";\n   import {usestate} from "react";\n   import easticon from \'@mui/icons-material/east\'\n   import {usemutation, usequeryclient} from "@tanstack/react-query";\n   import axios from "axios"\n   import {userouter} from "next/router";\n   import {useuser} from "@clerk/nextjs";\n   \n   \n   export default function home() {\n   \n     const [input, setinput] = usestate("");\n     const [model,setmodel] = usestate("deepseek-v3");\n     const handelchangemodel = () => {\n       setmodel(model === \'deepseek-v3\' ? \'deepseek-r1\' : \'deepseek-v3\');\n     }\n     // access the client\n     const queryclient = usequeryclient()\n     const router = userouter()\n   \n     const {user} = useuser()\n   \n     // mutations\n     const {mutate: createchat} = usemutation({\n       mutationfn: async() =>{\n         return axios.post(\'/api/create-chat\',{\n           title: input,\n           model: model\n         })\n       },\n       onsuccess: (res) => {\n         router.push(`/chat/${res.data.id}`)\n         queryclient.invalidatequeries({ querykey: [\'chats\'] })\n       },\n     })\n   \n   const handlesubmit=() =>{\n       if(input.trim()===\'\'){\n         return\n       }\n   \n       if(!user){\n         router.push("/sign-in")\n         return\n       }\n   \n       createchat()\n   }\n     return (\n       <div classname="h-screen flex flex-col items-center">\n         <div classname="h-1/5"></div>\n         <div classname="w-1/2">\n           <p classname="text-bold text-2xl text-center">\n             有什么可以帮您的吗\n           </p>\n   \n           <div classname="flex flex-col items-center justify-center mt-4\n           shadow-lg border-[1px] border-gray-300 h-32 rounded-lg">\n             <textarea\n               classname="w-full rounded-lg p-3 h-30 focus:outline-none"\n               value={input}\n               onchange={(e) => setinput(e.target.value)}\n               >\n             </textarea>\n             <div classname="flex flex-row items-center justify-between w-full h-12 mb-2">\n               <div>\n                 {/*左下角深度思考按钮*/}\n                 <div classname={`flex flex-row items-center justify-center rounded-lg \n                 border-[1px] px-2 py-1 ml-2 cursor-pointer ${model === \'deepseek-r1\' ? \n                     "border-blue-300 bg-blue-200" : "border-gray-300"}`}\n                      onclick={handelchangemodel}\n                 >\n                   <p classname="text-sm">\n                     深度思考(r1)\n                   </p>\n                 </div>\n               </div>\n             {/* 右下角提交按钮 */}\n               <div classname="flex items-center justify-center border-2 mr-4 border-black p-1\n               rounded-full"\n                 onclick={handlesubmit}\n               >\n                 <easticon></easticon>\n   \n               </div>\n             </div>\n   \n           </div>\n         </div>\n       </div>\n     );\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   76\n   77\n   78\n   79\n   80\n   81\n   82\n   83\n   84\n   85\n   86\n   87\n   88\n   89\n   90\n   91\n   92\n   93\n   94\n   \n\n前端的请求完成了，还需要在后端写相应的逻辑处理\n\n文字写于：广东',charsets:{cjk:!0}},{title:"首页完善（后端）",frontmatter:{title:"首页完善（后端）",date:"2025-04-27T08:14:54.000Z",permalink:"/projects/8bb9c5/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/07.%E9%A6%96%E9%A1%B5%E5%AE%8C%E5%96%84%EF%BC%88%E5%90%8E%E7%AB%AF%EF%BC%89.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/07.首页完善（后端）.md",key:"v-4327e1bc",path:"/projects/8bb9c5/",headers:[{level:2,title:"首页完善",slug:"首页完善",normalizedTitle:"首页完善",charIndex:5},{level:2,title:"导航栏",slug:"导航栏",normalizedTitle:"导航栏",charIndex:14},{level:3,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:788},{level:3,title:"后端API",slug:"后端api",normalizedTitle:"后端api",charIndex:1922}],excerpt:'<h1 id="_07-首页完善-后端-导航栏"><a class="header-anchor" href="#_07-首页完善-后端-导航栏">#</a> 07.首页完善（后端）+导航栏</h1>\n<p><strong>首页</strong>完善（下）和<strong>导航栏</strong>模块</p>\n',lastUpdated:"2025/5/19 01:36:42",lastUpdatedTimestamp:1747589802e3,headersStr:"首页完善 导航栏 目录 后端API",content:"# 07.首页完善（后端）+导航栏\n\n首页完善（下）和导航栏模块\n\n\n# 首页完善\n\n创建src/app/api/create-chat/route.ts\n\n写一个POST的异步请求，检测是否有登录，登陆后创建一个新的chat\n\nimport { createChat } from \"@/db\"\nimport { auth } from \"@clerk/nextjs/server\";\n\n\nexport async function POST(req:Request){\n    const {title,model} = await req.json()\n\n    const {userId} = await auth() //检测是否有登录\n    if (userId){\n        //1.创建一个chat\n        const newChat = await createChat(title,userId,model)\n\n        // 2.返回新创建的chat_id\n        return new Response(JSON.stringify({id:newChat?.id}),{status:200})\n    }\n    return new Response(null, {status:200})\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n在首页输入字符，会自动创建一个新的页面\n\n\n\n在supabase中可以看到创建了以对话内容为标题的数据\n\n\n# 导航栏\n\n在src/components/Navibar.tsx文件中，声明'use client' 表示该文件被视为客户端捆绑的一部分\n\n修改return部分的代码，创建按钮返回首页\n\n此时效果如下\n\n\n\n\n# 目录\n\n使用useQuery\n\n    const {data: chats} = useQuery({\n        queryKey:['chats'],\n        queryFn:() => {\n            return axios.get(`/api/get-chats`)\n        },\n        enabled: !!user?.id\n    })\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n目录块\n\n        {/*  目录  */}\n            <div className='flex flex-col items-center justify-center gap-2 p-6'>\n                {chats?.data?.map((chat:ChatModel) =>(\n                    <div\n                        className = 'w-full h-10'\n                        key={chat.id}\n                        onClick={() => {\n                            router.push(`/chats/${chat.id}`)\n                        }}\n                        >\n                   <p className={`font-extralight text-sm line-clamp-1`}>{chat.title}</p>\n                    </div>\n                ) )}\n            </div>\n        </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n高亮设置：如果读取的是当前会话，给当前会话一个高亮\n\n...... \n\n    const pathname = usePathname()\n......\n                           <p className={`font-extralight text-sm line-clamp-1 ${pathname === `/chat/${chat.id} ` ? 'text-blue-700':''}`}>{chat.title}</p>\n                    \n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n# 后端API\n\n创建文件src/app/api/get-chats/route.ts\n\nimport {auth} from \"@clerk/nextjs/server\";\nimport {getChats} from \"@/db\";\n\nexport async function POST(req:Request){\n    const {userId} = await auth()\n    if (userId){\n        const chats = await getChats(userId)\n        return new Response(JSON.stringify(chats),{status:200})\n    }\n\n    return new Response(null, {status:200})\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n测试\n\n\n\n405代码是表示返回了API方法不匹配的问题\n\n后端发送了POST请求，前端只支持GET请求\n\n将前端的get改为post\n\n            return axios.post(`/api/get-chats`)\n\n\n1\n\n\n回到页面\n\n能够查询到历史记录，但显示和高亮有一点问题\n\n\n\n需要调整 className 中的 Tailwind CSS 类\n\n * 将 text-sm 改为 text-lg，使字体大小变大。\n\n * 当前对话框不仅有高亮，还有背景色 'text-blue-700 bg-blue-100'\n\n * 给p标签加上内边距 p-4\n\n * p标签添加圆角效果\n\n\n\n效果图 点击不同对话会自动切换路由\n\n\n\n文字写于：广东",normalizedContent:"# 07.首页完善（后端）+导航栏\n\n首页完善（下）和导航栏模块\n\n\n# 首页完善\n\n创建src/app/api/create-chat/route.ts\n\n写一个post的异步请求，检测是否有登录，登陆后创建一个新的chat\n\nimport { createchat } from \"@/db\"\nimport { auth } from \"@clerk/nextjs/server\";\n\n\nexport async function post(req:request){\n    const {title,model} = await req.json()\n\n    const {userid} = await auth() //检测是否有登录\n    if (userid){\n        //1.创建一个chat\n        const newchat = await createchat(title,userid,model)\n\n        // 2.返回新创建的chat_id\n        return new response(json.stringify({id:newchat?.id}),{status:200})\n    }\n    return new response(null, {status:200})\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n在首页输入字符，会自动创建一个新的页面\n\n\n\n在supabase中可以看到创建了以对话内容为标题的数据\n\n\n# 导航栏\n\n在src/components/navibar.tsx文件中，声明'use client' 表示该文件被视为客户端捆绑的一部分\n\n修改return部分的代码，创建按钮返回首页\n\n此时效果如下\n\n\n\n\n# 目录\n\n使用usequery\n\n    const {data: chats} = usequery({\n        querykey:['chats'],\n        queryfn:() => {\n            return axios.get(`/api/get-chats`)\n        },\n        enabled: !!user?.id\n    })\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n目录块\n\n        {/*  目录  */}\n            <div classname='flex flex-col items-center justify-center gap-2 p-6'>\n                {chats?.data?.map((chat:chatmodel) =>(\n                    <div\n                        classname = 'w-full h-10'\n                        key={chat.id}\n                        onclick={() => {\n                            router.push(`/chats/${chat.id}`)\n                        }}\n                        >\n                   <p classname={`font-extralight text-sm line-clamp-1`}>{chat.title}</p>\n                    </div>\n                ) )}\n            </div>\n        </div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n高亮设置：如果读取的是当前会话，给当前会话一个高亮\n\n...... \n\n    const pathname = usepathname()\n......\n                           <p classname={`font-extralight text-sm line-clamp-1 ${pathname === `/chat/${chat.id} ` ? 'text-blue-700':''}`}>{chat.title}</p>\n                    \n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n# 后端api\n\n创建文件src/app/api/get-chats/route.ts\n\nimport {auth} from \"@clerk/nextjs/server\";\nimport {getchats} from \"@/db\";\n\nexport async function post(req:request){\n    const {userid} = await auth()\n    if (userid){\n        const chats = await getchats(userid)\n        return new response(json.stringify(chats),{status:200})\n    }\n\n    return new response(null, {status:200})\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n测试\n\n\n\n405代码是表示返回了api方法不匹配的问题\n\n后端发送了post请求，前端只支持get请求\n\n将前端的get改为post\n\n            return axios.post(`/api/get-chats`)\n\n\n1\n\n\n回到页面\n\n能够查询到历史记录，但显示和高亮有一点问题\n\n\n\n需要调整 classname 中的 tailwind css 类\n\n * 将 text-sm 改为 text-lg，使字体大小变大。\n\n * 当前对话框不仅有高亮，还有背景色 'text-blue-700 bg-blue-100'\n\n * 给p标签加上内边距 p-4\n\n * p标签添加圆角效果\n\n\n\n效果图 点击不同对话会自动切换路由\n\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"保留上下文对话",frontmatter:{title:"保留上下文对话",date:"2025-04-27T20:29:06.000Z",permalink:"/projects/b6c8ea/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/08.%E4%BF%9D%E7%95%99%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AF%B9%E8%AF%9D.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/08.保留上下文对话.md",key:"v-57ae1201",path:"/projects/b6c8ea/",headers:[{level:2,title:"保存用户信息（后端）",slug:"保存用户信息-后端",normalizedTitle:"保存用户信息（后端）",charIndex:23},{level:2,title:"获取聊天接口",slug:"获取聊天接口",normalizedTitle:"获取聊天接口",charIndex:164},{level:2,title:"获取消息接口",slug:"获取消息接口",normalizedTitle:"获取消息接口",charIndex:821},{level:2,title:"测试",slug:"测试",normalizedTitle:"测试",charIndex:1516}],excerpt:'<h1 id="_08-保留上下文对话"><a class="header-anchor" href="#_08-保留上下文对话">#</a> 08.保留上下文对话</h1>\n<p>这是摘要</p>\n',lastUpdated:"2025/4/27 23:24:07",lastUpdatedTimestamp:1745767447e3,headersStr:"保存用户信息（后端） 获取聊天接口 获取消息接口 测试",content:'# 08.保留上下文对话\n\n这是摘要\n\n\n# 保存用户信息（后端）\n\n在src/app/api/chat/route.ts文件中 校验是否已经登录\n\n存入用户信息\n\n我们扩充了参数，需要在前端也添加上新增的参数\n\n\n\nuseParams()是用于从 URL 中获取参数的钩子\n\n使用useQuery创建一个post请求\n\n\n# 获取聊天接口\n\n新建src/app/api/get-chat/route.ts\n\nimport {unauthorized} from "next/navigation";\nimport {getChat} from "@/db";\nimport {auth} from "@clerk/nextjs/server";\n\nexport async function POST(req:Request){\n    const {chat_id} = await req.json()\n\n    //判断是否登录，登陆后方可读取\n    const { userId } = await auth()\n    if (!userId) {\n        return new Response(JSON.stringify({error:unauthorized}),{\n            status: 401,\n        })\n    }\n\n    //返回chat\n    const chat = await getChat(chat_id,userId)\n    return new Response(JSON.stringify({chat}),{status: 200})\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n在聊天页src/app/chat/[chat_id]/page.tsx调用返回的参数\n\n\n\n\n# 获取消息接口\n\n在src/app/chat/[chat_id]/page.tsx中定义返回消息的前端方法\n\n在后端API中创建src/app/api/get-messages/route.ts\n\nimport {getMessagesByChatId} from "@/db";\nimport {auth} from "@clerk/nextjs/server";\n\nexport async function POST(req:Request){\n    const {chat_id,chat_user_id} = await req.json()\n    const { userId } = await auth()\n\n    //判断是否已登录\n    if (!userId || chat_user_id !== userId) {\n        return new Response(JSON.stringify({error:\'unauthorized\'}),{\n            status: 401,\n        })\n    }\n\n    //返回message\n    const messages = await getMessagesByChatId(chat_id);\n    return new Response(JSON.stringify({messages}),{status: 200})\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n补充page页Message的入参\n\n测试\n\n\n\nPOST的地址不对\n\n原因在于前端src/app/chat/[chat_id]/page.tsx的请求路径写的是相对路径\n\n在 /chat/[chat_id] 页面下发起这个请求时\n\nNext.js会基于当前路由路径解析这个相对路径，导致实际请求变成了 /chat/api/get-chat\n\n在请求最开始添加/表示绝对路径（上上张图已更改）\n\n再测试\n\n\n\n表示身份验证未通过\n\n创建条件语句，测试一下是哪个问题\n\n是第二个问题\n\n比较两者的输出\n\n是前一个变量没有被定义\n\n找到问题了\n\n\n\n后端API实现里返回的数据多用了一个大括号\n\n在 JavaScript 和 TypeScript 中，JSON.stringify 方法用于将一个对象或值转换为 JSON 字符串。在 JSON.stringify 中传递一个对象时，它会将该对象的所有可枚举属性序列化为 JSON 格式。\n\nchat 是一个对象 例子\n\n//没有加{}\n{\n  id: 5,\n  userId: \'user_2wHxPcxxxxxxxxxxxxxx\',\n  title: \'测试保存记录\',\n  model: \'deepseek-v3\'\n}\n//加了{}\n{"chat":{"id":"123","userId":"user123","messages":["Hello","World"]}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n会把结果包裹在一个额外的chat对象中，删去即可\n\n\n\n\n\n\n# 测试\n\n退出页面后，对话记录仍有保留\n\n\n\n在SupaBase中创建了对话记录\n\n文字写于：广东',normalizedContent:'# 08.保留上下文对话\n\n这是摘要\n\n\n# 保存用户信息（后端）\n\n在src/app/api/chat/route.ts文件中 校验是否已经登录\n\n存入用户信息\n\n我们扩充了参数，需要在前端也添加上新增的参数\n\n\n\nuseparams()是用于从 url 中获取参数的钩子\n\n使用usequery创建一个post请求\n\n\n# 获取聊天接口\n\n新建src/app/api/get-chat/route.ts\n\nimport {unauthorized} from "next/navigation";\nimport {getchat} from "@/db";\nimport {auth} from "@clerk/nextjs/server";\n\nexport async function post(req:request){\n    const {chat_id} = await req.json()\n\n    //判断是否登录，登陆后方可读取\n    const { userid } = await auth()\n    if (!userid) {\n        return new response(json.stringify({error:unauthorized}),{\n            status: 401,\n        })\n    }\n\n    //返回chat\n    const chat = await getchat(chat_id,userid)\n    return new response(json.stringify({chat}),{status: 200})\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n在聊天页src/app/chat/[chat_id]/page.tsx调用返回的参数\n\n\n\n\n# 获取消息接口\n\n在src/app/chat/[chat_id]/page.tsx中定义返回消息的前端方法\n\n在后端api中创建src/app/api/get-messages/route.ts\n\nimport {getmessagesbychatid} from "@/db";\nimport {auth} from "@clerk/nextjs/server";\n\nexport async function post(req:request){\n    const {chat_id,chat_user_id} = await req.json()\n    const { userid } = await auth()\n\n    //判断是否已登录\n    if (!userid || chat_user_id !== userid) {\n        return new response(json.stringify({error:\'unauthorized\'}),{\n            status: 401,\n        })\n    }\n\n    //返回message\n    const messages = await getmessagesbychatid(chat_id);\n    return new response(json.stringify({messages}),{status: 200})\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n补充page页message的入参\n\n测试\n\n\n\npost的地址不对\n\n原因在于前端src/app/chat/[chat_id]/page.tsx的请求路径写的是相对路径\n\n在 /chat/[chat_id] 页面下发起这个请求时\n\nnext.js会基于当前路由路径解析这个相对路径，导致实际请求变成了 /chat/api/get-chat\n\n在请求最开始添加/表示绝对路径（上上张图已更改）\n\n再测试\n\n\n\n表示身份验证未通过\n\n创建条件语句，测试一下是哪个问题\n\n是第二个问题\n\n比较两者的输出\n\n是前一个变量没有被定义\n\n找到问题了\n\n\n\n后端api实现里返回的数据多用了一个大括号\n\n在 javascript 和 typescript 中，json.stringify 方法用于将一个对象或值转换为 json 字符串。在 json.stringify 中传递一个对象时，它会将该对象的所有可枚举属性序列化为 json 格式。\n\nchat 是一个对象 例子\n\n//没有加{}\n{\n  id: 5,\n  userid: \'user_2whxpcxxxxxxxxxxxxxx\',\n  title: \'测试保存记录\',\n  model: \'deepseek-v3\'\n}\n//加了{}\n{"chat":{"id":"123","userid":"user123","messages":["hello","world"]}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n会把结果包裹在一个额外的chat对象中，删去即可\n\n\n\n\n\n\n# 测试\n\n退出页面后，对话记录仍有保留\n\n\n\n在supabase中创建了对话记录\n\n文字写于：广东',charsets:{cjk:!0}},{title:"第一次对话完善",frontmatter:{title:"第一次对话完善",date:"2025-04-27T22:36:02.000Z",permalink:"/projects/0d846d/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:["仿Deepseek官网AI聊天网站"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/02.%E4%BB%BFDeepseek%E5%AE%98%E7%BD%91AI%E8%81%8A%E5%A4%A9%E7%BD%91%E7%AB%99/09.%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AF%B9%E8%AF%9D%E5%AE%8C%E5%96%84.html",relativePath:"04.项目/02.仿Deepseek官网AI聊天网站/09.第一次对话完善.md",key:"v-75275396",path:"/projects/0d846d/",headers:[{level:2,title:"第一次对话完善",slug:"第一次对话完善",normalizedTitle:"第一次对话完善",charIndex:5},{level:2,title:"项目1.0运行效果",slug:"项目1-0运行效果",normalizedTitle:"项目1.0运行效果",charIndex:851},{level:2,title:"模型切换",slug:"模型切换",normalizedTitle:"模型切换",charIndex:867},{level:2,title:"待更新",slug:"待更新",normalizedTitle:"待更新",charIndex:901}],excerpt:'<h1 id="_09-第一次对话完善"><a class="header-anchor" href="#_09-第一次对话完善">#</a> 09.第一次对话完善</h1>\n<p>第一次对话时，创建后再<strong>自动发送对话内容</strong></p>\n',lastUpdated:"2025/4/27 23:24:07",lastUpdatedTimestamp:1745767447e3,headersStr:"第一次对话完善 项目1.0运行效果 模型切换 待更新",content:"# 09.第一次对话完善\n\n第一次对话时，创建后再自动发送对话内容\n\n\n# 第一次对话完善\n\n第一次对话时，会创建第一次对话的消息为标题的页面\n\n但并没有将第一次对话的内容发送给大模型\n\n进行优化\n\n在src/app/chat/[chat_id]/page.tsx页面\n\n如果chat的data的title存在，并且这个chat没有历史数据\n\n在useChat的hook里添加append，调用后端API 向聊天历史中添加（追加）新的消息\n\n补充代码 增加的内容即第一次对话时传递的title\n\n    const handleFirstMessage = async() => {\n        if(chat?.data?.title && previousMessages?.data?.length === 0) {\n            await append({\n                role:'user',\n                content: chat?.data?.title\n            },{\n                model:model,\n                chat_id:chat_id,\n                chat_user_id: chat?.data?.userId\n            });\n        }\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n使用useEffect钩子，页面渲染时触发此函数\n\n    const handleFirstMessage = async() => {\n        ......\n    }\n\nuseEffect(() => {\n    handleFirstMessage()\n}, [chat?.data?.title,previousMessages]);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 项目1.0运行效果\n\n\n\n\n# 模型切换\n\n将model参数传入数据库，供后续更改模型\n\n\n\n\n# 待更新\n\n页面渲染问题\n\n对话返回的是markdown格式，我们尚未把markdown格式的文本按原格式渲染出来\n\n\n\n文字写于：广东",normalizedContent:"# 09.第一次对话完善\n\n第一次对话时，创建后再自动发送对话内容\n\n\n# 第一次对话完善\n\n第一次对话时，会创建第一次对话的消息为标题的页面\n\n但并没有将第一次对话的内容发送给大模型\n\n进行优化\n\n在src/app/chat/[chat_id]/page.tsx页面\n\n如果chat的data的title存在，并且这个chat没有历史数据\n\n在usechat的hook里添加append，调用后端api 向聊天历史中添加（追加）新的消息\n\n补充代码 增加的内容即第一次对话时传递的title\n\n    const handlefirstmessage = async() => {\n        if(chat?.data?.title && previousmessages?.data?.length === 0) {\n            await append({\n                role:'user',\n                content: chat?.data?.title\n            },{\n                model:model,\n                chat_id:chat_id,\n                chat_user_id: chat?.data?.userid\n            });\n        }\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n使用useeffect钩子，页面渲染时触发此函数\n\n    const handlefirstmessage = async() => {\n        ......\n    }\n\nuseeffect(() => {\n    handlefirstmessage()\n}, [chat?.data?.title,previousmessages]);\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 项目1.0运行效果\n\n\n\n\n# 模型切换\n\n将model参数传入数据库，供后续更改模型\n\n\n\n\n# 待更新\n\n页面渲染问题\n\n对话返回的是markdown格式，我们尚未把markdown格式的文本按原格式渲染出来\n\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"尤克里里音月",frontmatter:{title:"尤克里里音月",date:"2025-03-19T18:02:09.000Z",permalink:"/projects/8113ff/",categories:["项目","尤克里里音月-Flutter"],tags:["尤克里里","Flutter"],readingShow:"top"},regularPath:"/04.%E9%A1%B9%E7%9B%AE/03.%E5%B0%A4%E5%85%8B%E9%87%8C%E9%87%8C%E9%9F%B3%E6%9C%88-Flutter%EF%BC%88%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E9%98%B6%E6%AE%B5%EF%BC%89/01.%E5%B0%A4%E5%85%8B%E9%87%8C%E9%87%8C%E9%9F%B3%E6%9C%88.html",relativePath:"04.项目/03.尤克里里音月-Flutter（需求分析阶段）/01.尤克里里音月.md",key:"v-1087fa54",path:"/projects/8113ff/",headers:[{level:2,title:"环境配置",slug:"环境配置",normalizedTitle:"环境配置",charIndex:205},{level:2,title:"VSCode",slug:"vscode",normalizedTitle:"vscode",charIndex:662},{level:2,title:"踩坑",slug:"踩坑",normalizedTitle:"踩坑",charIndex:741}],excerpt:"<p>最近在练琴 owo</p>\n<p>Flutter项目初尝试，后续待续</p>\n",lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"环境配置 VSCode 踩坑",content:'最近在练琴 owo\n\nFlutter项目初尝试，后续待续\n\n\n# 01.尤克里里音月\n\n今天练琴时刚好把调音器打开了，发现调音器波动了一下，联想到了全民K歌里的音准识别，如果弹琴时也有这样一个功能，记录音准，那么就能实现自动记录，而且比视频记录的方式好太多了 那可以自己开发一款这样的app呀，很兴奋，说干就干。查了一下资料，安卓和ios都可以用的话，先学flutter开始Flutter中文网 官网\n\n\n# 环境配置\n\n我用的是IDEA 下载好插件，再下载Flutter的SDK**（Software Development Kit）**\n\n\n\n想在安卓上测试软件，还要下载一个android-studio下载 Android Studio 和应用工具 - Android 开发者 | Android Developers\n\nAndroid studio是基于IDEA二次开发的，汉化包可以通用\n\n> 这是汉化教程 Android studio 2024.3.1 版本汉化-CSDN博客\n\n制作 Android 应用 |扑动\n\n调好google的usb devices调试，方便在手机上调试\n\n> [!] Network resources\n> X A network error occurred while checking "https://maven.google.com/": 信号灯超时时间已到\n> \n> maven解决办法flutter安装过程中遇到的问题_flutter_IT阿剂-华为开发者空间\n\n\n# VSCode\n\n构建您的第一个 Flutter 应用\n\n按照官方的代码，导入依赖报了红\n\n\n\n导入这两个依赖\n\n在pubspec.yaml文件里\n\n\n\n\n# 踩坑\n\n换了一个安卓sdk后好多报错\n\n解决办法：\n\n * 运行 flutter clean 命令清理项目。\n * 然后运行 flutter run 重建项目。\n\n文字写于：广东',normalizedContent:'最近在练琴 owo\n\nflutter项目初尝试，后续待续\n\n\n# 01.尤克里里音月\n\n今天练琴时刚好把调音器打开了，发现调音器波动了一下，联想到了全民k歌里的音准识别，如果弹琴时也有这样一个功能，记录音准，那么就能实现自动记录，而且比视频记录的方式好太多了 那可以自己开发一款这样的app呀，很兴奋，说干就干。查了一下资料，安卓和ios都可以用的话，先学flutter开始flutter中文网 官网\n\n\n# 环境配置\n\n我用的是idea 下载好插件，再下载flutter的sdk**（software development kit）**\n\n\n\n想在安卓上测试软件，还要下载一个android-studio下载 android studio 和应用工具 - android 开发者 | android developers\n\nandroid studio是基于idea二次开发的，汉化包可以通用\n\n> 这是汉化教程 android studio 2024.3.1 版本汉化-csdn博客\n\n制作 android 应用 |扑动\n\n调好google的usb devices调试，方便在手机上调试\n\n> [!] network resources\n> x a network error occurred while checking "https://maven.google.com/": 信号灯超时时间已到\n> \n> maven解决办法flutter安装过程中遇到的问题_flutter_it阿剂-华为开发者空间\n\n\n# vscode\n\n构建您的第一个 flutter 应用\n\n按照官方的代码，导入依赖报了红\n\n\n\n导入这两个依赖\n\n在pubspec.yaml文件里\n\n\n\n\n# 踩坑\n\n换了一个安卓sdk后好多报错\n\n解决办法：\n\n * 运行 flutter clean 命令清理项目。\n * 然后运行 flutter run 重建项目。\n\n文字写于：广东',charsets:{cjk:!0}},{title:"博客建设记录",frontmatter:{title:"博客建设记录",date:"2025-03-06T03:27:36.000Z",permalink:"/frontend/791d80/",categories:["前端"],tags:["前端","Vuepress"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/01.Vuepress/01.%E5%8D%9A%E5%AE%A2%E5%BB%BA%E8%AE%BE%E8%AE%B0%E5%BD%95.html",relativePath:"05.前端/01.Vuepress/01.博客建设记录.md",key:"v-7c6d73aa",path:"/frontend/791d80/",headers:[{level:2,title:"01.加入了gitalk",slug:"_01-加入了gitalk",normalizedTitle:"01.加入了gitalk",charIndex:24},{level:2,title:"02.将源代码推送到了master分支",slug:"_02-将源代码推送到了master分支",normalizedTitle:"02.将源代码推送到了master分支",charIndex:217},{level:2,title:"03.出现了YAML格式解析错误",slug:"_03-出现了yaml格式解析错误",normalizedTitle:"03.出现了yaml格式解析错误",charIndex:530},{level:2,title:"04.如何在Vuepress中插入图片",slug:"_04-如何在vuepress中插入图片",normalizedTitle:"04.如何在vuepress中插入图片",charIndex:1008},{level:2,title:"05.推送ci工作流的报错",slug:"_05-推送ci工作流的报错",normalizedTitle:"05.推送ci工作流的报错",charIndex:1265},{level:2,title:"06.webp图像格式无法在博客中渲染",slug:"_06-webp图像格式无法在博客中渲染",normalizedTitle:"06.webp图像格式无法在博客中渲染",charIndex:1575},{level:2,title:"07.Vuepress插入Latex公式",slug:"_07-vuepress插入latex公式",normalizedTitle:"07.vuepress插入latex公式",charIndex:1611},{level:2,title:"08.增加了百度统计",slug:"_08-增加了百度统计",normalizedTitle:"08.增加了百度统计",charIndex:2678},{level:2,title:"增加了社交图标[知乎]",slug:"增加了社交图标-知乎",normalizedTitle:"增加了社交图标[知乎]",charIndex:2693},{level:2,title:"增加了文章摘要",slug:"增加了文章摘要",normalizedTitle:"增加了文章摘要",charIndex:2709},{level:2,title:"-调整了首页大图的高度、背景大图的透明度",slug:"调整了首页大图的高度、背景大图的透明度",normalizedTitle:"-调整了首页大图的高度、背景大图的透明度",charIndex:2955},{level:2,title:"09.解决了【读吧】【更多】目录不显示的问题 2025/4/17",slug:"_09-解决了【读吧】【更多】目录不显示的问题-2025-4-17",normalizedTitle:"09.解决了【读吧】【更多】目录不显示的问题 2025/4/17",charIndex:2980}],excerpt:"<p>技术博客建设记录</p>\n",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:"01.加入了gitalk 02.将源代码推送到了master分支 03.出现了YAML格式解析错误 04.如何在Vuepress中插入图片 05.推送ci工作流的报错 06.webp图像格式无法在博客中渲染 07.Vuepress插入Latex公式 08.增加了百度统计 增加了社交图标[知乎] 增加了文章摘要 -调整了首页大图的高度、背景大图的透明度 09.解决了【读吧】【更多】目录不显示的问题 2025/4/17",content:'技术博客建设记录\n\n\n# 博客建设记录\n\n\n# 01.加入了gitalk\n\n创建一个 OAuth Apps 在 Github 设置中找到Settings / Developer settings / OAuth Apps / new OAuth Apps, 创建一个应用 创建成功有 Client ID 和 Client Secret ，保存下来。\n\n在plugin.js里修改Client ID和Client Secret\n\n\n# 02.将源代码推送到了master分支\n\npages分支是默认分支，创建master时会自动克隆pages的源码，需要我们先清空再推送\n\n> //推送shell\n> \n> cd E:/VueCode/Blog/仓库名.github.io //仓库名 git init git remote add origin https://github.com/仓库名/仓库名.github.io.git git checkout master git add . git commit -m "Initial commit with new content" git push -u origin master --force\n\n\n# 03.出现了YAML格式解析错误\n\n原因是添加导航栏的前端.md文件时，出现了两个---\n\n> msingbai.github.io@0.0.1 dev > vuepress dev docs wait Extracting site metadata... YAMLException: end of the stream or a document separator is expected at line 3, column 14: pageComponent:\n> \n> ......\n\n * 错误提示指出问题出现在 pageComponent 的定义处，可能是因为 YAML 文件的格式不正确。YAML 文件对缩进和语法非常敏感，常见的问题包括：\n   \n   * 缩进不一致（YAML 使用空格缩进，不能使用 Tab）。\n   \n   * 错误的引号或符号（如多余的逗号、冒号等）。\n   \n   * 缺少必要的分隔符（如 ---）。\n     \n     排查多个md文件后发现问题，删除多余的分隔符，成功\n     \n     \n\n\n# 04.如何在Vuepress中插入图片\n\nTypora提供了一种方法，可以将复制的图片保存到指定文件夹\n\nVuePress 默认会将 public 文件夹中的内容直接映射到站点的根路径。\n\n因此，可以将图片放在 public 文件夹中，然后通过相对路径引用。\n\n例如：\n\n * 将图片放在 public/images/ 文件夹中。\n * 在 Markdown 中引用：\n\nmarkdown复制\n\n![图片描述](/images/example.jpg)\n\n\n1\n\n\n\n\n这样在站点中可以引用上传好的图片了\n\n\n# 05.推送ci工作流的报错\n\n2025/3/18\n\n\n\n给仓库新加了一条master主分支，原来的page的分支优先级改为副分支，之后每次push master邮箱就会收到新邮件\n\n打开之后，发现github会根据workflow/ci 文件执行命令，报错包括node的版本，以及找不到deploy.sh文件，这是因为我为了方便把deploy改了名字，复制一个文件，把它改回原来的名字可以解决\n\n> 目前已注释掉ci文件\n> \n> 这个文件是执行推送到linux上的\n> \n> E:\\VueCode\\Blog\\msingbai.github.io\\node_modules\\i.github\\workflows\n\n\n# 06.webp图像格式无法在博客中渲染\n\nTypora能够显示\n\n\n# 07.Vuepress插入Latex公式\n\n用到的是markdown-it-mathjax3插件\n\n修改总配置文件和插件的配置文件\n\n1.config.js\n\nmodule.exports = {\nextendsMarkdown: md => {\n    md.use(require(\'markdown-it-mathjax3\'))\n    md.linkify.set({ fuzzyEmail: false }) // 可选，用于禁用模糊电子邮件链接\n},\n    markdown: {\n    lineNumbers: true, // 显示代码块的行号\n    extractHeaders: ["h2", "h3", "h4"], // 支持 h2、h3、h4 标题\n    plugins:[\'markdown-it-mathjax3\'],\n    externalLinks: { target: \'_blank\', rel: \'nofollow noopener noreferrer\' }\n  }，\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2.plugin.js\n\n// 插件配置\nmodule.exports = [\n  // 自定义插件，即本地插件\n  [\n    {\n      name: "custom-plugins",\n      globalUIComponents: ["BlockToggle", "GlobalTip", "Aplayer"], // 2.x 版本 globalUIComponents 改名为 clientAppRootComponentFiles\n    },\n  ],\n  [\n    // 配置 Markdown 插件\n    [\n  "markdown-it-mathjax3", // 添加 markdown-it-mathjax3 插件\n  {\n    markdown: {\n      lineNumbers: true,\n      extractHeaders: ["h2", "h3", "h4"],\n      externalLinks: { target: \'_blank\', rel: \'nofollow noopener noreferrer\' }\n    }\n  }\n]\n  ],]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 08.增加了百度统计\n\n\n# 增加了社交图标[知乎]\n\n\n# 增加了文章摘要\n\n参考：\n\nvuepress+百度统计 API 调用+源码_vuepress记录浏览量-CSDN博客\n\nvuepress+百度统计显示博客浏览量_vuepress 百度统计-CSDN博客\n\nvue 项目引入iconfront-CSDN博客\n\nHexo写作：Markdown、Mathjax和HTML语法 - 知乎\n\n> 导言区之后到\x3c!--more--\x3e之前的部分是摘要。\n\nhttps://ziyuan.baidu.com/site\n\n百度站长平台，可添加百度索引\n\n\n# -调整了首页大图的高度、背景大图的透明度\n\n\n# 09.解决了【读吧】【更多】目录不显示的问题 2025/4/17\n\n原因在docs\\00.目录页\\00.导航栏-目录页里每一个文件的key需要完全与文件夹名字对应上\n\n\n# 待解决\n\n01.目录页更新时间问题\n\n\n\n右下角的更新时间是以导航页的md文件,以这个页面为例子，也就是前端.md的更新时间为准的，并不以目录的文件更新时间为准，待解决\n\n文字写于：广东',normalizedContent:'技术博客建设记录\n\n\n# 博客建设记录\n\n\n# 01.加入了gitalk\n\n创建一个 oauth apps 在 github 设置中找到settings / developer settings / oauth apps / new oauth apps, 创建一个应用 创建成功有 client id 和 client secret ，保存下来。\n\n在plugin.js里修改client id和client secret\n\n\n# 02.将源代码推送到了master分支\n\npages分支是默认分支，创建master时会自动克隆pages的源码，需要我们先清空再推送\n\n> //推送shell\n> \n> cd e:/vuecode/blog/仓库名.github.io //仓库名 git init git remote add origin https://github.com/仓库名/仓库名.github.io.git git checkout master git add . git commit -m "initial commit with new content" git push -u origin master --force\n\n\n# 03.出现了yaml格式解析错误\n\n原因是添加导航栏的前端.md文件时，出现了两个---\n\n> msingbai.github.io@0.0.1 dev > vuepress dev docs wait extracting site metadata... yamlexception: end of the stream or a document separator is expected at line 3, column 14: pagecomponent:\n> \n> ......\n\n * 错误提示指出问题出现在 pagecomponent 的定义处，可能是因为 yaml 文件的格式不正确。yaml 文件对缩进和语法非常敏感，常见的问题包括：\n   \n   * 缩进不一致（yaml 使用空格缩进，不能使用 tab）。\n   \n   * 错误的引号或符号（如多余的逗号、冒号等）。\n   \n   * 缺少必要的分隔符（如 ---）。\n     \n     排查多个md文件后发现问题，删除多余的分隔符，成功\n     \n     \n\n\n# 04.如何在vuepress中插入图片\n\ntypora提供了一种方法，可以将复制的图片保存到指定文件夹\n\nvuepress 默认会将 public 文件夹中的内容直接映射到站点的根路径。\n\n因此，可以将图片放在 public 文件夹中，然后通过相对路径引用。\n\n例如：\n\n * 将图片放在 public/images/ 文件夹中。\n * 在 markdown 中引用：\n\nmarkdown复制\n\n![图片描述](/images/example.jpg)\n\n\n1\n\n\n\n\n这样在站点中可以引用上传好的图片了\n\n\n# 05.推送ci工作流的报错\n\n2025/3/18\n\n\n\n给仓库新加了一条master主分支，原来的page的分支优先级改为副分支，之后每次push master邮箱就会收到新邮件\n\n打开之后，发现github会根据workflow/ci 文件执行命令，报错包括node的版本，以及找不到deploy.sh文件，这是因为我为了方便把deploy改了名字，复制一个文件，把它改回原来的名字可以解决\n\n> 目前已注释掉ci文件\n> \n> 这个文件是执行推送到linux上的\n> \n> e:\\vuecode\\blog\\msingbai.github.io\\node_modules\\i.github\\workflows\n\n\n# 06.webp图像格式无法在博客中渲染\n\ntypora能够显示\n\n\n# 07.vuepress插入latex公式\n\n用到的是markdown-it-mathjax3插件\n\n修改总配置文件和插件的配置文件\n\n1.config.js\n\nmodule.exports = {\nextendsmarkdown: md => {\n    md.use(require(\'markdown-it-mathjax3\'))\n    md.linkify.set({ fuzzyemail: false }) // 可选，用于禁用模糊电子邮件链接\n},\n    markdown: {\n    linenumbers: true, // 显示代码块的行号\n    extractheaders: ["h2", "h3", "h4"], // 支持 h2、h3、h4 标题\n    plugins:[\'markdown-it-mathjax3\'],\n    externallinks: { target: \'_blank\', rel: \'nofollow noopener noreferrer\' }\n  }，\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n2.plugin.js\n\n// 插件配置\nmodule.exports = [\n  // 自定义插件，即本地插件\n  [\n    {\n      name: "custom-plugins",\n      globaluicomponents: ["blocktoggle", "globaltip", "aplayer"], // 2.x 版本 globaluicomponents 改名为 clientapprootcomponentfiles\n    },\n  ],\n  [\n    // 配置 markdown 插件\n    [\n  "markdown-it-mathjax3", // 添加 markdown-it-mathjax3 插件\n  {\n    markdown: {\n      linenumbers: true,\n      extractheaders: ["h2", "h3", "h4"],\n      externallinks: { target: \'_blank\', rel: \'nofollow noopener noreferrer\' }\n    }\n  }\n]\n  ],]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 08.增加了百度统计\n\n\n# 增加了社交图标[知乎]\n\n\n# 增加了文章摘要\n\n参考：\n\nvuepress+百度统计 api 调用+源码_vuepress记录浏览量-csdn博客\n\nvuepress+百度统计显示博客浏览量_vuepress 百度统计-csdn博客\n\nvue 项目引入iconfront-csdn博客\n\nhexo写作：markdown、mathjax和html语法 - 知乎\n\n> 导言区之后到\x3c!--more--\x3e之前的部分是摘要。\n\nhttps://ziyuan.baidu.com/site\n\n百度站长平台，可添加百度索引\n\n\n# -调整了首页大图的高度、背景大图的透明度\n\n\n# 09.解决了【读吧】【更多】目录不显示的问题 2025/4/17\n\n原因在docs\\00.目录页\\00.导航栏-目录页里每一个文件的key需要完全与文件夹名字对应上\n\n\n# 待解决\n\n01.目录页更新时间问题\n\n\n\n右下角的更新时间是以导航页的md文件,以这个页面为例子，也就是前端.md的更新时间为准的，并不以目录的文件更新时间为准，待解决\n\n文字写于：广东',charsets:{cjk:!0}},{title:"首页优化",frontmatter:{title:"首页优化",date:"2025-04-01T21:25:58.000Z",permalink:"/frontend/643c6f/",categories:["前端","Vuepress"],tags:[null],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/01.Vuepress/03.%E9%A6%96%E9%A1%B5%E4%BC%98%E5%8C%96.html",relativePath:"05.前端/01.Vuepress/03.首页优化.md",key:"v-07e08c87",path:"/frontend/643c6f/",excerpt:"<p>1.首页大图取消早中晚变化，大小调整 100vh-&gt;60vh</p>\n<p>2.首页三个feature图标调整</p>\n",lastUpdated:"2025/4/1 23:25:24",lastUpdatedTimestamp:1743521124e3,headersStr:null,content:'1.首页大图取消早中晚变化，大小调整 100vh->60vh\n\n2.首页三个feature图标调整\n\n\n# 03.首页优化\n\nfeature图标调整\n\n在阅读官方文档时发现了很多功能\n\n找到了vdoing主题的文件夹\n\n> node_modules\\vuepress-theme-vdoing\n> \n> "node_modules\\vuepress-theme-vdoing\\components\\Home.vue"\n\n右键检查元素可以在开发者控制台看html代码\n\n直接设置了img标签的属性 结果是没达到效果\n\n\n\n可能是div的优先级比较高，要更改这个div 的style\n\n最终解决方案：\n\n在node_modules\\vuepress-theme-vdoing\\components\\Home.vue中找到控制features块的代码\n\n                  <img\n                    class="feature-img"\n                    v-if="feature.imgUrl"\n                    :src="$withBase(feature.imgUrl)"\n                    :alt="feature.title"\n                    :style="feature.imgStyle"\n                  />\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n插入\n\n  :style="feature.imgStyle"\n\n\n1\n\n\n同时在index.md文件中加入\n\n  - title: 阅读\n    details: 一些阅读轨迹\n    link: /read/\n    imgUrl: example.png\n    imgStyle: "width: 10% ;height: 10%"\n\n\n1\n2\n3\n4\n5\n\n\n效果图\n\n\n\n文字写于：广东',normalizedContent:'1.首页大图取消早中晚变化，大小调整 100vh->60vh\n\n2.首页三个feature图标调整\n\n\n# 03.首页优化\n\nfeature图标调整\n\n在阅读官方文档时发现了很多功能\n\n找到了vdoing主题的文件夹\n\n> node_modules\\vuepress-theme-vdoing\n> \n> "node_modules\\vuepress-theme-vdoing\\components\\home.vue"\n\n右键检查元素可以在开发者控制台看html代码\n\n直接设置了img标签的属性 结果是没达到效果\n\n\n\n可能是div的优先级比较高，要更改这个div 的style\n\n最终解决方案：\n\n在node_modules\\vuepress-theme-vdoing\\components\\home.vue中找到控制features块的代码\n\n                  <img\n                    class="feature-img"\n                    v-if="feature.imgurl"\n                    :src="$withbase(feature.imgurl)"\n                    :alt="feature.title"\n                    :style="feature.imgstyle"\n                  />\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n插入\n\n  :style="feature.imgstyle"\n\n\n1\n\n\n同时在index.md文件中加入\n\n  - title: 阅读\n    details: 一些阅读轨迹\n    link: /read/\n    imgurl: example.png\n    imgstyle: "width: 10% ;height: 10%"\n\n\n1\n2\n3\n4\n5\n\n\n效果图\n\n\n\n文字写于：广东',charsets:{cjk:!0}},{title:"vuepress添加百度统计记录访客量",frontmatter:{title:"vuepress添加百度统计记录访客量",date:"2025-03-31T15:00:24.000Z",permalink:"/frontend/1e42d2/",categories:["前端","Vuepress"],tags:["Vuepress"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/01.Vuepress/02.vuepress%E6%B7%BB%E5%8A%A0%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1%E8%AE%B0%E5%BD%95%E8%AE%BF%E5%AE%A2%E9%87%8F.html",relativePath:"05.前端/01.Vuepress/02.vuepress添加百度统计记录访客量.md",key:"v-9a72da8c",path:"/frontend/1e42d2/",excerpt:'<h1 id="_02-vuepress添加百度统计记录访客量"><a class="header-anchor" href="#_02-vuepress添加百度统计记录访客量">#</a> 02.Vuepress添加百度统计记录访客量</h1>\n<p>百度统计实现博客<strong>访问量</strong>记录功能</p>\n',lastUpdated:"2025/4/1 17:40:18",lastUpdatedTimestamp:1743500418e3,headersStr:null,content:"# 02.Vuepress添加百度统计记录访客量\n\n百度统计实现博客访问量记录功能\n\n折腾了三天，技术力不够噢= =\n\n最后用了busuanzi\n\n百度统计可以在百度统计的后台上看到更多内容\n\n文字写于：广东",normalizedContent:"# 02.vuepress添加百度统计记录访客量\n\n百度统计实现博客访问量记录功能\n\n折腾了三天，技术力不够噢= =\n\n最后用了busuanzi\n\n百度统计可以在百度统计的后台上看到更多内容\n\n文字写于：广东",charsets:{cjk:!0}},{title:"购买了域名",frontmatter:{title:"购买了域名",date:"2025-04-15T05:40:35.000Z",permalink:"/frontend/a7583a/",categories:["前端","Vuepress"],tags:["Vuepress"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/01.Vuepress/04.%E8%B4%AD%E4%B9%B0%E4%BA%86%E5%9F%9F%E5%90%8D.html",relativePath:"05.前端/01.Vuepress/04.购买了域名.md",key:"v-6b548583",path:"/frontend/a7583a/",excerpt:'<h1 id="_04-购买了域名"><a class="header-anchor" href="#_04-购买了域名">#</a> 04.购买了域名</h1>\n<p>给网站一个<strong>自定义域名</strong>吧🎈</p>\n',lastUpdated:"2025/4/15 06:29:08",lastUpdatedTimestamp:1744669748e3,headersStr:null,content:"# 04.购买了域名\n\n给网站一个自定义域名吧🎈\n\n在namesilo上购买了top域名\n\n进行DNS解析博客配置域名_博客域名-CSDN博客\n\n进入top域名，发现遇到了404错误\n\n一般是在这里没有设置好\n\n每推送一次master，这里不改变，但是每在本地deploy一次，就需要重新设置\n\n在deploy里添加\n\n添加百度站长工具\n\nhttps://ziyuan.baidu.com/site\n\n如果遇到了301错误百度站长HTML添加301错误,搜索资源平台(百度站长)添加网站 使用文件验证 验证失败，原因：未知原因：301的解决办法...-CSDN博客\n\n一般是http和https的分别，在选择的时候，选择自己网站使用的协议\n\n选择html标签验证，验证自己是网站的拥有者\n\n在\\docs\\.vuepress\\config.js中添加html标签\n\n验证成功\n\n\n\n进行baiduPush的文件修改\n\n修改成自己的\n\n文字写于：广东",normalizedContent:"# 04.购买了域名\n\n给网站一个自定义域名吧🎈\n\n在namesilo上购买了top域名\n\n进行dns解析博客配置域名_博客域名-csdn博客\n\n进入top域名，发现遇到了404错误\n\n一般是在这里没有设置好\n\n每推送一次master，这里不改变，但是每在本地deploy一次，就需要重新设置\n\n在deploy里添加\n\n添加百度站长工具\n\nhttps://ziyuan.baidu.com/site\n\n如果遇到了301错误百度站长html添加301错误,搜索资源平台(百度站长)添加网站 使用文件验证 验证失败，原因：未知原因：301的解决办法...-csdn博客\n\n一般是http和https的分别，在选择的时候，选择自己网站使用的协议\n\n选择html标签验证，验证自己是网站的拥有者\n\n在\\docs\\.vuepress\\config.js中添加html标签\n\n验证成功\n\n\n\n进行baidupush的文件修改\n\n修改成自己的\n\n文字写于：广东",charsets:{cjk:!0}},{title:"HTML基础",frontmatter:{title:"HTML基础",date:"2025-03-12T13:54:15.000Z",permalink:"/frontend/13ea93/",categories:["前端","前端基础"],tags:["HTML","MARKDOWN"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/02.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/01.HTML%E5%9F%BA%E7%A1%80.html",relativePath:"05.前端/02.前端基础/01.HTML基础.md",key:"v-460bb69d",path:"/frontend/13ea93/",headers:[{level:2,title:"HTML标签",slug:"html标签",normalizedTitle:"html标签",charIndex:29},{level:2,title:"HTML文件结构",slug:"html文件结构",normalizedTitle:"html文件结构",charIndex:344},{level:2,title:"HTML练习",slug:"html练习",normalizedTitle:"html练习",charIndex:796},{level:2,title:"HTML标签属性",slug:"html标签属性",normalizedTitle:"html标签属性",charIndex:879},{level:2,title:"块元素与行内元素",slug:"块元素与行内元素",normalizedTitle:"块元素与行内元素",charIndex:1501},{level:3,title:"块元素(block)",slug:"块元素-block",normalizedTitle:"块元素(block)",charIndex:1514},{level:3,title:"行内元素(inline)",slug:"行内元素-inline",normalizedTitle:"行内元素(inline)",charIndex:1753},{level:4,title:"div标签",slug:"div标签",normalizedTitle:"div标签",charIndex:2e3},{level:4,title:"span标签",slug:"span标签",normalizedTitle:"span标签",charIndex:2201},{level:2,title:"HTML表单",slug:"html表单",normalizedTitle:"html表单",charIndex:2253},{level:3,title:"表单的基本结构",slug:"表单的基本结构",normalizedTitle:"表单的基本结构",charIndex:2420},{level:2,title:"踩坑",slug:"踩坑",normalizedTitle:"踩坑",charIndex:2626},{level:3,title:"解决方案：",slug:"解决方案",normalizedTitle:"解决方案：",charIndex:2906},{level:4,title:"ai给出的问题原因和解决思路",slug:"ai给出的问题原因和解决思路",normalizedTitle:"ai给出的问题原因和解决思路",charIndex:2936},{level:3,title:"VuePress 的文件结构和静态资源处理",slug:"vuepress-的文件结构和静态资源处理",normalizedTitle:"vuepress 的文件结构和静态资源处理",charIndex:3119},{level:3,title:"如何正确访问 HTML 文件",slug:"如何正确访问-html-文件",normalizedTitle:"如何正确访问 html 文件",charIndex:3399},{level:3,title:"最终方案：",slug:"最终方案",normalizedTitle:"最终方案：",charIndex:3624}],excerpt:"<p>前端三件套之HTML</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"HTML标签 HTML文件结构 HTML练习 HTML标签属性 块元素与行内元素 块元素(block) 行内元素(inline) div标签 span标签 HTML表单 表单的基本结构 踩坑 解决方案： ai给出的问题原因和解决思路 VuePress 的文件结构和静态资源处理 如何正确访问 HTML 文件 最终方案：",content:'前端三件套之HTML\n\n\n# 01.HTML基础\n\n\n# HTML标签\n\nHTML的全称是 Hypertext Markup Language(超文本标记语言)\n\n通过HTML标签（也叫元素）来定义文本、图像、链接等待。是由尖括号包围的关键字\n\n通常标签都是成对出现，包括开始标签和结束标签，内容位于标签内\n\n<p>这是一个段落。</p>\n<h1>这是一个一级标题。</h1>\n<ahref="#">这是一个超链接。</a>\n\n\n1\n2\n3\n\n\n单标签\n\n<input type="text">\n<br> ​\x3c!--换行 --\x3e​\n<hr> ​\x3c!--分割线 --\x3e​\n\x3c!--这是一个注释标签 --\x3e​\n\n\n1\n2\n3\n4\n\n\n单标签用于没有内容的元素，双标签用于有内容的元素\n\n\n# HTML文件结构\n\n<! --这里放置文档的元信息--\x3e\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t\x3c!--这里放置文档的元信息---\x3e\n\t\t<title>文档标题</title>\n\t\t<meta charset="UTF-8">\n\t\t\x3c!--连接外部样式表或脚本文件等--\x3e\n\t\t<link rel="stylesheet" type="text/css" href="styles.css">\n\t\t<script src="script.js"><\/script>\n\t</head>\n\t<body>\n\t\t\x3c!--这里放置页面内容--\x3e\n\t\t<h1>这是一个标题</h1>\n\t\t<p>这是一个段落。</p>\n\t\t<a href="https://www.example.com">这是一个链接</a>\n\t\t\x3c!-- 其他内容 --\x3e\n\t</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# HTML练习\n\n创建一个文件夹，打开cmd\n\n如果用vscode就用code . 我用了webstorm\n\ntitle名字是标签页的名字\n\n常见文本标签练习\n\n\n# HTML标签属性\n\n接上一次练习中，我们使用了table的border属性 给表格添加上了一个宽度为22的边框\n\n<table border="22">\n\n\n1\n\n\n属性在HTML中起到重要的作用，它们用于定义元素的行为和外观，以及与其他元素的关系。\n\n基本语法： <开始标签属性名="属性值">\n\n * 每个HTML元素可以具有不同的属性\n   \n   <p id="describe" class="section">这是一个段落标签</p>\n   <a href="https://www.baidu.com">这是一个超链接</a>\n   \n   \n   1\n   2\n   \n\n * 属性名称不区分大小写，属性值对大小写敏感\n   \n   <img src="example.jpg" alt="">\n   <img SRC="example.jpg" alt="">\n   <img src="EXAMPLE.jpg" alt="">\n   <！--前两者相同，第三个与前两个不一样--\x3e\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   适用于大多数HTML元素的属性\n   \n   属性      描述\n   class   为HTML元素定义一个或多个类名（类名从样式文件引入）\n   id      定义元素唯一的 id\n   style   规定元素的行内样式\n\nHTML标签属性练习\n\n\n# 块元素与行内元素\n\n\n# 块元素(block)\n\n块级元素通常用于组织和布局页面的主要结构和内容，例如段落、标题、列表、表格等。它们用于创建页面的主要部分，将内容分隔成逻辑块。\n\n * 块级元素通常会从新行开始，并占据整行的宽度，因此它们会在页面上呈现为一块独立的内容块。\n\n * 可以包含其他块级元素和行内元素。\n\n * 常见的块级元素包括\n   \n   <div>,<p>,<h1>到<h6>,<ul>,<ol>,<li>,<table>,<form>等。\n   \n   \n   1\n   \n\n\n# 行内元素(inline)\n\n行内元素通常用于添加文本样式或为文本中的一部分应用样式。它们可以在文本中插入小的元素，例如超链接、强调文本等。\n\n * 行内元素通常在同一行内呈现，不会独占一行。\n\n * 它们只占据其内容所需的宽度，而不是整行的宽度。\n\n * 行内元素不能包含块级元素，但可以包含其他行内元素。\n\n * 常见的行内元素包括\n   \n   <span>,<a>,<strong>,<em>,<img>,<br>,<input>等。\n   \n   \n   1\n   \n   \n   # div标签\n\n <div>\n\n\n1\n\n\n标签 无特殊意义表示一个块标签，便于组织页面的结构和布局\n\n  <div class="nav"> navigation，导航\n      可以用div.xxx 创建出class属性\n      <div class="xxx">\n      div#xxx 创建出id属性\n      <div id="xxx"></div>\n\n\n1\n2\n3\n4\n5\n\n\n# span标签\n\n <span>\n\n\n1\n\n\n把一小部分文本包装起来，以便于使用css、js行为\n\n\n# HTML表单\n\n**HTML表单（Form）**是一种用于收集用户输入的网页元素集合。\n\n它允许用户通过输入框、选择框、按钮等控件输入数据，并将这些数据发送到服务器进行处理。表单是网页交互的核心功能之一，广泛用于登录、注册、搜索、评论、在线调查等场景。\n\nw3cschool可以查到教程\n\nHTML 表单_w3cschool\n\n\n# 表单的基本结构\n\nHTML表单由<form>标签定义，其中可以包含多种表单控件（如输入框、按钮、选择框等）。\n\n<input>\n\n\n1\n\n\ninput标签中 有单独的属性\n\n * password :能够隐藏输入内容\n\n * radio:单选\n\n * checkbox:多选\n\n<form action=""></form>\n\n\n1\n\n\n一半用于填写后端的API，表示向后端发送数据\n\nHTML表单练习\n\n\n# 踩坑\n\nmarkdown文件中我使用了\n\n<iframe src="../../.vuepress/public/blog_file/HTML基础/HTML表单.html" width="100%" height="500px"></iframe>\n\n\n1\n\n\niframe标签，便于插入作为练习的html页面，并且把html文件放在了public文件夹里，这在typora里是显示正常的，但在vuepress渲染的博客中显示的是404\n\n如果把链接改为某个页面的链接，在vuepress上能够正常显示\n\n推断vuepress不支持直接的html文件\n\n\n# 解决方案：\n\n百度找不到我们想要的答案，用了ai帮忙\n\n# ai给出的问题原因和解决思路\n\n> 从你提供的路径来看，你可能对 VuePress 的文件结构和静态资源的处理方式有一些误解。VuePress 的默认行为和文件结构是针对 Markdown 文件和 VuePress 的特定目录结构设计的。如果你直接将 HTML 文件放在 .vuepress/public 或其他目录下，访问路径可能会出现问题。\n> \n> \n> # VuePress 的文件结构和静态资源处理\n> \n>  1. docs 文件夹：这是 VuePress 的主要内容目录，通常用于存放 Markdown 文件。VuePress 会自动解析这些文件并生成对应的页面。\n>  2. .vuepress/public 文件夹：这个目录是用于存放静态资源的，比如图片、CSS、JS 文件等。VuePress 会将这些文件原样复制到最终的输出目录中。\n> \n> 如果你将 HTML 文件放在 .vuepress/public 文件夹下，VuePress 会将其作为静态资源处理，但访问路径会有所不同。\n> \n> \n> # 如何正确访问 HTML 文件\n> \n> 假设你将一个名为 demo.html 的文件放在 .vuepress/public/blog_file/HTML基础/ 文件夹下，访问路径应该是：\n> \n> http://localhost:8080/blog_file/HTML基础/demo.html\n> \n> \n> 1\n\n实际上，vuepress在docs/public存放的是静态资源\n\n若将文件放入public文件夹，则直接省去public\n\n\n# 最终方案：\n\n> <iframe src="/blog_file/HTML基础/HTML表单.html" width="100%" height="500px"></iframe>\n> \n> \n> 1\n\n发现html能以子页面的形式出现了\n\n文字写于：广东',normalizedContent:'前端三件套之html\n\n\n# 01.html基础\n\n\n# html标签\n\nhtml的全称是 hypertext markup language(超文本标记语言)\n\n通过html标签（也叫元素）来定义文本、图像、链接等待。是由尖括号包围的关键字\n\n通常标签都是成对出现，包括开始标签和结束标签，内容位于标签内\n\n<p>这是一个段落。</p>\n<h1>这是一个一级标题。</h1>\n<ahref="#">这是一个超链接。</a>\n\n\n1\n2\n3\n\n\n单标签\n\n<input type="text">\n<br> ​\x3c!--换行 --\x3e​\n<hr> ​\x3c!--分割线 --\x3e​\n\x3c!--这是一个注释标签 --\x3e​\n\n\n1\n2\n3\n4\n\n\n单标签用于没有内容的元素，双标签用于有内容的元素\n\n\n# html文件结构\n\n<! --这里放置文档的元信息--\x3e\n<!doctype html>\n<html>\n\t<head>\n\t\t\x3c!--这里放置文档的元信息---\x3e\n\t\t<title>文档标题</title>\n\t\t<meta charset="utf-8">\n\t\t\x3c!--连接外部样式表或脚本文件等--\x3e\n\t\t<link rel="stylesheet" type="text/css" href="styles.css">\n\t\t<script src="script.js"><\/script>\n\t</head>\n\t<body>\n\t\t\x3c!--这里放置页面内容--\x3e\n\t\t<h1>这是一个标题</h1>\n\t\t<p>这是一个段落。</p>\n\t\t<a href="https://www.example.com">这是一个链接</a>\n\t\t\x3c!-- 其他内容 --\x3e\n\t</body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# html练习\n\n创建一个文件夹，打开cmd\n\n如果用vscode就用code . 我用了webstorm\n\ntitle名字是标签页的名字\n\n常见文本标签练习\n\n\n# html标签属性\n\n接上一次练习中，我们使用了table的border属性 给表格添加上了一个宽度为22的边框\n\n<table border="22">\n\n\n1\n\n\n属性在html中起到重要的作用，它们用于定义元素的行为和外观，以及与其他元素的关系。\n\n基本语法： <开始标签属性名="属性值">\n\n * 每个html元素可以具有不同的属性\n   \n   <p id="describe" class="section">这是一个段落标签</p>\n   <a href="https://www.baidu.com">这是一个超链接</a>\n   \n   \n   1\n   2\n   \n\n * 属性名称不区分大小写，属性值对大小写敏感\n   \n   <img src="example.jpg" alt="">\n   <img src="example.jpg" alt="">\n   <img src="example.jpg" alt="">\n   <！--前两者相同，第三个与前两个不一样--\x3e\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   适用于大多数html元素的属性\n   \n   属性      描述\n   class   为html元素定义一个或多个类名（类名从样式文件引入）\n   id      定义元素唯一的 id\n   style   规定元素的行内样式\n\nhtml标签属性练习\n\n\n# 块元素与行内元素\n\n\n# 块元素(block)\n\n块级元素通常用于组织和布局页面的主要结构和内容，例如段落、标题、列表、表格等。它们用于创建页面的主要部分，将内容分隔成逻辑块。\n\n * 块级元素通常会从新行开始，并占据整行的宽度，因此它们会在页面上呈现为一块独立的内容块。\n\n * 可以包含其他块级元素和行内元素。\n\n * 常见的块级元素包括\n   \n   <div>,<p>,<h1>到<h6>,<ul>,<ol>,<li>,<table>,<form>等。\n   \n   \n   1\n   \n\n\n# 行内元素(inline)\n\n行内元素通常用于添加文本样式或为文本中的一部分应用样式。它们可以在文本中插入小的元素，例如超链接、强调文本等。\n\n * 行内元素通常在同一行内呈现，不会独占一行。\n\n * 它们只占据其内容所需的宽度，而不是整行的宽度。\n\n * 行内元素不能包含块级元素，但可以包含其他行内元素。\n\n * 常见的行内元素包括\n   \n   <span>,<a>,<strong>,<em>,<img>,<br>,<input>等。\n   \n   \n   1\n   \n   \n   # div标签\n\n <div>\n\n\n1\n\n\n标签 无特殊意义表示一个块标签，便于组织页面的结构和布局\n\n  <div class="nav"> navigation，导航\n      可以用div.xxx 创建出class属性\n      <div class="xxx">\n      div#xxx 创建出id属性\n      <div id="xxx"></div>\n\n\n1\n2\n3\n4\n5\n\n\n# span标签\n\n <span>\n\n\n1\n\n\n把一小部分文本包装起来，以便于使用css、js行为\n\n\n# html表单\n\n**html表单（form）**是一种用于收集用户输入的网页元素集合。\n\n它允许用户通过输入框、选择框、按钮等控件输入数据，并将这些数据发送到服务器进行处理。表单是网页交互的核心功能之一，广泛用于登录、注册、搜索、评论、在线调查等场景。\n\nw3cschool可以查到教程\n\nhtml 表单_w3cschool\n\n\n# 表单的基本结构\n\nhtml表单由<form>标签定义，其中可以包含多种表单控件（如输入框、按钮、选择框等）。\n\n<input>\n\n\n1\n\n\ninput标签中 有单独的属性\n\n * password :能够隐藏输入内容\n\n * radio:单选\n\n * checkbox:多选\n\n<form action=""></form>\n\n\n1\n\n\n一半用于填写后端的api，表示向后端发送数据\n\nhtml表单练习\n\n\n# 踩坑\n\nmarkdown文件中我使用了\n\n<iframe src="../../.vuepress/public/blog_file/html基础/html表单.html" width="100%" height="500px"></iframe>\n\n\n1\n\n\niframe标签，便于插入作为练习的html页面，并且把html文件放在了public文件夹里，这在typora里是显示正常的，但在vuepress渲染的博客中显示的是404\n\n如果把链接改为某个页面的链接，在vuepress上能够正常显示\n\n推断vuepress不支持直接的html文件\n\n\n# 解决方案：\n\n百度找不到我们想要的答案，用了ai帮忙\n\n# ai给出的问题原因和解决思路\n\n> 从你提供的路径来看，你可能对 vuepress 的文件结构和静态资源的处理方式有一些误解。vuepress 的默认行为和文件结构是针对 markdown 文件和 vuepress 的特定目录结构设计的。如果你直接将 html 文件放在 .vuepress/public 或其他目录下，访问路径可能会出现问题。\n> \n> \n> # vuepress 的文件结构和静态资源处理\n> \n>  1. docs 文件夹：这是 vuepress 的主要内容目录，通常用于存放 markdown 文件。vuepress 会自动解析这些文件并生成对应的页面。\n>  2. .vuepress/public 文件夹：这个目录是用于存放静态资源的，比如图片、css、js 文件等。vuepress 会将这些文件原样复制到最终的输出目录中。\n> \n> 如果你将 html 文件放在 .vuepress/public 文件夹下，vuepress 会将其作为静态资源处理，但访问路径会有所不同。\n> \n> \n> # 如何正确访问 html 文件\n> \n> 假设你将一个名为 demo.html 的文件放在 .vuepress/public/blog_file/html基础/ 文件夹下，访问路径应该是：\n> \n> http://localhost:8080/blog_file/html基础/demo.html\n> \n> \n> 1\n\n实际上，vuepress在docs/public存放的是静态资源\n\n若将文件放入public文件夹，则直接省去public\n\n\n# 最终方案：\n\n> <iframe src="/blog_file/html基础/html表单.html" width="100%" height="500px"></iframe>\n> \n> \n> 1\n\n发现html能以子页面的形式出现了\n\n文字写于：广东',charsets:{cjk:!0}},{title:"CSS基础",frontmatter:{title:"CSS基础",date:"2025-03-13T05:43:23.000Z",permalink:"/frontend/a85fdc/",categories:["前端","前端基础"],tags:["CSS"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/02.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/02.CSS%E5%9F%BA%E7%A1%80.html",relativePath:"05.前端/02.前端基础/02.CSS基础.md",key:"v-31a2cd79",path:"/frontend/a85fdc/",headers:[{level:2,title:"什么是 CSS？",slug:"什么是-css",normalizedTitle:"什么是 css？",charIndex:24},{level:2,title:"CSS语法",slug:"css语法",normalizedTitle:"css语法",charIndex:173},{level:2,title:"CSS的三种导入方式",slug:"css的三种导入方式",normalizedTitle:"css的三种导入方式",charIndex:332},{level:3,title:"CSS导入方式练习",slug:"css导入方式练习",normalizedTitle:"css导入方式练习",charIndex:420},{level:2,title:"CSS选择器",slug:"css选择器",normalizedTitle:"css选择器",charIndex:434},{level:3,title:"后代选择器和子代选择器",slug:"后代选择器和子代选择器",normalizedTitle:"后代选择器和子代选择器",charIndex:533},{level:3,title:"相邻元素选择器",slug:"相邻元素选择器",normalizedTitle:"相邻元素选择器",charIndex:813},{level:3,title:"伪类选择器",slug:"伪类选择器",normalizedTitle:"伪类选择器",charIndex:523},{level:3,title:"CSS选择器练习",slug:"css选择器练习",normalizedTitle:"css选择器练习",charIndex:1026},{level:2,title:"CSS常用属性",slug:"css常用属性",normalizedTitle:"css常用属性",charIndex:1039},{level:3,title:"块元素(block):",slug:"块元素-block-div标签",normalizedTitle:"块元素(block):",charIndex:1629},{level:3,title:"行内元素(inline):",slug:"行内元素-inline-span标签",normalizedTitle:"行内元素(inline):",charIndex:1699},{level:3,title:"行内块元素(Inline-block):",slug:"行内块元素-inline-block-img标签",normalizedTitle:"行内块元素(inline-block):",charIndex:1807},{level:3,title:"CSS常用属性练习",slug:"css常用属性练习",normalizedTitle:"css常用属性练习",charIndex:1901},{level:2,title:"CSS盒子模型",slug:"css盒子模型",normalizedTitle:"css盒子模型",charIndex:1915},{level:2,title:"浮动",slug:"浮动",normalizedTitle:"浮动",charIndex:1166},{level:3,title:"浮动的三大特性",slug:"浮动的三大特性",normalizedTitle:"浮动的三大特性",charIndex:2430},{level:2,title:"CSS定位",slug:"css定位",normalizedTitle:"css定位",charIndex:2490}],excerpt:"<p>前端三件套之CSS</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"什么是 CSS？ CSS语法 CSS的三种导入方式 CSS导入方式练习 CSS选择器 后代选择器和子代选择器 相邻元素选择器 伪类选择器 CSS选择器练习 CSS常用属性 块元素(block): 行内元素(inline): 行内块元素(Inline-block): CSS常用属性练习 CSS盒子模型 浮动 浮动的三大特性 CSS定位",content:"前端三件套之CSS\n\n\n# CSS基础\n\n\n# 什么是 CSS？\n\n * CSS 指的是层叠样式表* (Cascading Style Sheets)\n * HTML负责定义页面的结构和内容，CSS负责控制页面的外观和样式\n * 通过CSS，你可以指定页面中各个元素的颜色、字体、大小、间距、边框、背景等样式，从而实现更精确的页面设计。\n\n\n# CSS语法\n\n通常由选择器、属性和属性值组成，多个规则可以组合在一起，以便同时应用多个样式\n\n选择器｛\n属性1：属性值1;\n属性2：属性值2;\n}\n\n\n1\n2\n3\n4\n\n\n例子\n\n/*这是一个p标签选择器*/\np{\n\tcolor: blue;\n\tfont-size: 16px;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# CSS的三种导入方式\n\n 1. 内联样式\n 2. 内部样式表 <style标签>\n 3. 外部样式表\n\n三种导入方式的优先级：内联样式 > 内部样式表 > 外部样式表\n\n\n# CSS导入方式练习\n\n\n# CSS选择器\n\n * 元素选择器\n * 类选择器\n * ID 选择器\n * 通用选择器\n * 子元素选择器\n * 后代选择器（包含选择器）\n * 并集选择器（兄弟选择器）\n * 伪类选择器\n\n\n# 后代选择器和子代选择器\n\n子代选择器是直接的第一代选择器\n\n使用方式是\n\n  /*  子元素选择器 */\n    .father > .son {\n      color: yellowgreen;\n    }\n\n\n1\n2\n3\n4\n\n\n例如\n\n <ul>\n    <li>包子</li>\n    <li>豆浆</li>\n    <li>油条</li>\n    <div>\n      <li>食物</li>\n    </div>\n   </ul>  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n包子、豆浆、油条属于子代，食物和前三者属于***后代***\n\n\n# 相邻元素选择器\n\n选择一个元素紧跟其后的一个标签\n\n  /*  相邻元素选择器*/\n    h3 + p{\n      background-color: red;\n    }\n\n\n1\n2\n3\n4\n\n\n\n# 伪类选择器\n\n当鼠标悬停(hover)时的状态可以用伪类实现\n\n/*  伪类选择器*/\n#element:hover{\n  background-color: blueviolet;\n}\n\n\n1\n2\n3\n4\n\n\n\n# CSS选择器练习\n\n\n# CSS常用属性\n\nCSS有上百个属性，这里学习常用的部分\n\nCSS常用属性主要包括以下几类：\n\n 1. 布局属性：如display定义元素的显示类型（块、行内、弹性等），position控制元素的定位方式（静态、相对、绝对、固定等），float实现元素的浮动布局，flex和grid用于现代弹性盒模型和网格布局。\n 2. 尺寸属性：width和height设置元素的宽高，margin和padding控制元素的外边距和内边距，box-sizing定义元素的盒模型计算方式。\n 3. 文本样式：font-size设置字体大小，font-weight定义字体粗细，color设置文字颜色，text-align控制文本对齐方式，line-height设置行高。\n 4. 背景与边框：background-color设置背景颜色，background-image添加背景图片，border定义边框样式（宽度、颜色、样式）。\n 5. 视觉效果：opacity设置元素透明度，transform实现元素的变形（旋转、缩放、移动等），transition和animation用于添加过渡和动画效果。\n\n这些属性通过组合使用，可以实现丰富的页面样式和交互效果。\n\n在HTML基础中，我们知道块元素和行内元素，这里多提一个行内块元素，其实HTML基础中做过了练习，就是常用的<img标签>\n\n\n# 块元素(block):<div标签>\n\n * 块级元素通常会从新行开始，并占据整行的宽度。\n * 可以包含其他块级元素和行内元素。\n\n\n# 行内元素(inline):<span标签>\n\n * 行内元素通常在同一行内呈现，不会独占一行。\n * 它们只占据其内容所需的宽度，而不是整行的宽度。\n * 行内元素不能包含块级元素，但可以包含其他行内元素。\n\n\n# 行内块元素(Inline-block):<img标签>\n\n * 水平方向上排列，但可以设置宽度、高度、内外边距等块级元素的属性。\n * 行内块元素可以包含其他行内元素或块级元素。\n\n\n# CSS常用属性练习\n\n\n# CSS盒子模型\n\nCSS 盒子模型是网页布局的基础，它将页面元素视为一个个矩形盒子，每个盒子由以下四部分组成：\n\n 1. 内容区（Content）：盒子的核心部分，用于容纳文本、图片等实际内容。\n 2. 内边距（Padding）：内容区与边框之间的空间，用于扩展内容区的范围，不包含滚动条。\n 3. 边框（Border）：围绕内边距的线条，用于装饰或分隔元素。\n 4. 外边距（Margin）：盒子与其他元素之间的空间，用于控制元素之间的距离。\n\n\n\nCSS盒子模型练习\n\n\n# 浮动\n\n * 网页布局方式有以下五种：\n * 标准流（普通流、文档流）：网页按照元素的书写顺序依次排列\n * 浮动\n * 定位\n * Flexbox和Grid(自适应布局)\n\n标准流是由块级元素和行内元素按照默认规定的方式来排列，块级就是占一行，行内元素一行放好多个元素。\n\n浮动属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘，这样即 可使得元素进行浮动。 语法：\n\n选择器｛\nfloat: left/right/none;\n}\n\n\n1\n2\n3\n\n\n注意：浮动是相对于父元素浮动，只会在父元素的内部移动\n\n\n# 浮动的三大特性\n\n * 脱标：脱离标准流\n * 一行显示，顶部对齐\n * 具备行内块元素特性\n\nCSS浮动练习\n\n\n# CSS定位\n\n定位方式:\n\n * 相对定位`：相对于元素在文档流中的正常位置进行定位。\n * 绝对定位：相对于其最近的已定位祖先元素进行定位，不占据文档流。\n * 固定定位：相对于浏览器窗口进行定位。不占据文档流，固定在屏幕上的位置，不随滚动而移动。（常用侧边栏）\n\nCSS定位练习\n\n文字写于：广东",normalizedContent:"前端三件套之css\n\n\n# css基础\n\n\n# 什么是 css？\n\n * css 指的是层叠样式表* (cascading style sheets)\n * html负责定义页面的结构和内容，css负责控制页面的外观和样式\n * 通过css，你可以指定页面中各个元素的颜色、字体、大小、间距、边框、背景等样式，从而实现更精确的页面设计。\n\n\n# css语法\n\n通常由选择器、属性和属性值组成，多个规则可以组合在一起，以便同时应用多个样式\n\n选择器｛\n属性1：属性值1;\n属性2：属性值2;\n}\n\n\n1\n2\n3\n4\n\n\n例子\n\n/*这是一个p标签选择器*/\np{\n\tcolor: blue;\n\tfont-size: 16px;\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# css的三种导入方式\n\n 1. 内联样式\n 2. 内部样式表 <style标签>\n 3. 外部样式表\n\n三种导入方式的优先级：内联样式 > 内部样式表 > 外部样式表\n\n\n# css导入方式练习\n\n\n# css选择器\n\n * 元素选择器\n * 类选择器\n * id 选择器\n * 通用选择器\n * 子元素选择器\n * 后代选择器（包含选择器）\n * 并集选择器（兄弟选择器）\n * 伪类选择器\n\n\n# 后代选择器和子代选择器\n\n子代选择器是直接的第一代选择器\n\n使用方式是\n\n  /*  子元素选择器 */\n    .father > .son {\n      color: yellowgreen;\n    }\n\n\n1\n2\n3\n4\n\n\n例如\n\n <ul>\n    <li>包子</li>\n    <li>豆浆</li>\n    <li>油条</li>\n    <div>\n      <li>食物</li>\n    </div>\n   </ul>  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n包子、豆浆、油条属于子代，食物和前三者属于***后代***\n\n\n# 相邻元素选择器\n\n选择一个元素紧跟其后的一个标签\n\n  /*  相邻元素选择器*/\n    h3 + p{\n      background-color: red;\n    }\n\n\n1\n2\n3\n4\n\n\n\n# 伪类选择器\n\n当鼠标悬停(hover)时的状态可以用伪类实现\n\n/*  伪类选择器*/\n#element:hover{\n  background-color: blueviolet;\n}\n\n\n1\n2\n3\n4\n\n\n\n# css选择器练习\n\n\n# css常用属性\n\ncss有上百个属性，这里学习常用的部分\n\ncss常用属性主要包括以下几类：\n\n 1. 布局属性：如display定义元素的显示类型（块、行内、弹性等），position控制元素的定位方式（静态、相对、绝对、固定等），float实现元素的浮动布局，flex和grid用于现代弹性盒模型和网格布局。\n 2. 尺寸属性：width和height设置元素的宽高，margin和padding控制元素的外边距和内边距，box-sizing定义元素的盒模型计算方式。\n 3. 文本样式：font-size设置字体大小，font-weight定义字体粗细，color设置文字颜色，text-align控制文本对齐方式，line-height设置行高。\n 4. 背景与边框：background-color设置背景颜色，background-image添加背景图片，border定义边框样式（宽度、颜色、样式）。\n 5. 视觉效果：opacity设置元素透明度，transform实现元素的变形（旋转、缩放、移动等），transition和animation用于添加过渡和动画效果。\n\n这些属性通过组合使用，可以实现丰富的页面样式和交互效果。\n\n在html基础中，我们知道块元素和行内元素，这里多提一个行内块元素，其实html基础中做过了练习，就是常用的<img标签>\n\n\n# 块元素(block):<div标签>\n\n * 块级元素通常会从新行开始，并占据整行的宽度。\n * 可以包含其他块级元素和行内元素。\n\n\n# 行内元素(inline):<span标签>\n\n * 行内元素通常在同一行内呈现，不会独占一行。\n * 它们只占据其内容所需的宽度，而不是整行的宽度。\n * 行内元素不能包含块级元素，但可以包含其他行内元素。\n\n\n# 行内块元素(inline-block):<img标签>\n\n * 水平方向上排列，但可以设置宽度、高度、内外边距等块级元素的属性。\n * 行内块元素可以包含其他行内元素或块级元素。\n\n\n# css常用属性练习\n\n\n# css盒子模型\n\ncss 盒子模型是网页布局的基础，它将页面元素视为一个个矩形盒子，每个盒子由以下四部分组成：\n\n 1. 内容区（content）：盒子的核心部分，用于容纳文本、图片等实际内容。\n 2. 内边距（padding）：内容区与边框之间的空间，用于扩展内容区的范围，不包含滚动条。\n 3. 边框（border）：围绕内边距的线条，用于装饰或分隔元素。\n 4. 外边距（margin）：盒子与其他元素之间的空间，用于控制元素之间的距离。\n\n\n\ncss盒子模型练习\n\n\n# 浮动\n\n * 网页布局方式有以下五种：\n * 标准流（普通流、文档流）：网页按照元素的书写顺序依次排列\n * 浮动\n * 定位\n * flexbox和grid(自适应布局)\n\n标准流是由块级元素和行内元素按照默认规定的方式来排列，块级就是占一行，行内元素一行放好多个元素。\n\n浮动属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘，这样即 可使得元素进行浮动。 语法：\n\n选择器｛\nfloat: left/right/none;\n}\n\n\n1\n2\n3\n\n\n注意：浮动是相对于父元素浮动，只会在父元素的内部移动\n\n\n# 浮动的三大特性\n\n * 脱标：脱离标准流\n * 一行显示，顶部对齐\n * 具备行内块元素特性\n\ncss浮动练习\n\n\n# css定位\n\n定位方式:\n\n * 相对定位`：相对于元素在文档流中的正常位置进行定位。\n * 绝对定位：相对于其最近的已定位祖先元素进行定位，不占据文档流。\n * 固定定位：相对于浏览器窗口进行定位。不占据文档流，固定在屏幕上的位置，不随滚动而移动。（常用侧边栏）\n\ncss定位练习\n\n文字写于：广东",charsets:{cjk:!0}},{title:"JavaScript基础",frontmatter:{title:"JavaScript基础",date:"2025-03-15T23:37:22.000Z",permalink:"/frontend/f4d1ca/",categories:["前端","前端基础"],tags:["JavaScript"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/02.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/03.JavaScript%E5%9F%BA%E7%A1%80.html",relativePath:"05.前端/02.前端基础/03.JavaScript基础.md",key:"v-d13ad246",path:"/frontend/f4d1ca/",headers:[{level:2,title:"JS导入方式",slug:"js导入方式",normalizedTitle:"js导入方式",charIndex:376},{level:2,title:"JS基本语法",slug:"js基本语法",normalizedTitle:"js基本语法",charIndex:427},{level:3,title:"1.var的作用域是整个函数，let、const是一个块例如在一个函数中",slug:"_1-var的作用域是整个函数-let、const是一个块例如在一个函数中",normalizedTitle:"1.var的作用域是整个函数，let、const是一个块例如在一个函数中",charIndex:489},{level:3,title:"2.变量提升",slug:"_2-变量提升",normalizedTitle:"2.变量提升",charIndex:607},{level:3,title:"3.可变性",slug:"_3-可变性",normalizedTitle:"3.可变性",charIndex:867},{level:2,title:"JS控制语句、函数",slug:"js控制语句、函数",normalizedTitle:"js控制语句、函数",charIndex:1172},{level:2,title:"JS事件",slug:"js事件",normalizedTitle:"js事件",charIndex:1244},{level:2,title:"DOM（Document Object Model）",slug:"dom-document-object-model",normalizedTitle:"dom（document object model）",charIndex:1324},{level:3,title:"文档树",slug:"文档树",normalizedTitle:"文档树",charIndex:1433},{level:3,title:"JS 表格的增删查改练习",slug:"js-表格的增删查改练习",normalizedTitle:"js 表格的增删查改练习",charIndex:1572},{level:2,title:"踩坑",slug:"踩坑",normalizedTitle:"踩坑",charIndex:1589},{level:2,title:"小惊喜",slug:"小惊喜",normalizedTitle:"小惊喜",charIndex:2262}],excerpt:"<p>前端三件套之JS</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"JS导入方式 JS基本语法 1.var的作用域是整个函数，let、const是一个块例如在一个函数中 2.变量提升 3.可变性 JS控制语句、函数 JS事件 DOM（Document Object Model） 文档树 JS 表格的增删查改练习 踩坑 小惊喜",content:"前端三件套之JS\n\n\n# 03.JavaScript基础\n\nJavaScript和Java没有任何关系，类似于张学友和张学。JavaScript简称JS\n\nJavaScript是一种轻量级、解释型、面向对象的脚本语言。它主要被设计用于在网页上实现动态效果，增加用户与网页的交互性。\n\n作为一种客户端脚本语言，JavaScript可以直接嵌入HTML，并在浏览器中执行。\n\n与HTML和CSS不同，JavaScript使得网页不再是静态的，而是可以根据用户的操作动态变化的。\n\n在前端开发中\n\n * 客户端脚本：用于在用户浏览器中执行，实现动态效果和用户交互。\n * 网页开发：与HTML和CSS协同工作，使得网页具有更强的交互性和动态性。\n * 后端开发：使用Node.js，JavaScript也可以在服务器端运行，实现服务器端应用的开发。\n\n\n# JS导入方式\n\n内联式\n\n外部引入\n\nJS导入方式练习\n\n在开发者工具的控制台中可以看到\n\n\n\n\n# JS基本语法\n\nvar：变量的意思，variable\n\nlet、const\n\n三个方式都可以定义一个变量，区别在于\n\n\n# 1.var的作用域是整个函数，let、const是一个块例如在一个函数中\n\n函数{\n\tif{\n\tlet X=0;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n\n\n用了const和let，X只会在if中起作用，而var会在整个函数中起作用\n\n\n# 2.变量提升\n\nvar：变量提升\n\nlet 和 const：无提升（暂时性死区）\n\nconsole.log(a); // 输出 undefined，因为 var 声明被提升，但赋值未提升\nvar a = 5;\n\nconsole.log(b); // 报错：ReferenceError，因为 let 声明前不可用\nlet b = 10;\n\nconsole.log(c); // 报错：ReferenceError，因为 const 声明前不可用\nconst c = 20;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 3.可变性\n\nvar 和 let：可以重新赋值\n\nconst：不能重新赋值\n\nvar num1 = 1;\nnum1 = 2; // 可以重新赋值\nconsole.log(num1); // 输出 2\n\nlet num2 = 3;\nnum2 = 4; // 可以重新赋值\nconsole.log(num2); // 输出 4\n\nconst num3 = 5;\nnum3 = 6; // 报错：TypeError，const 声明的变量不能重新赋值\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n优先使用 let 和 const，避免使用 var，这样可以减少意外错误，提升代码的可读性和安全性。\n\n\n\n\n# JS控制语句、函数\n\nif、else、else if 条件语句\n\nfor、while 循环语句\n\nbreak；continue\n\n函数\n\n\n# JS事件\n\n事件也就是函数的触发条件\n\n事件绑定的方法有三种：\n\n * HTML属性\n * DOM属性\n * addEventListener方法\n\n\n\n\n# DOM（Document Object Model）\n\n * 当网页被加载时，浏览器会创建页面的文档对象模型，也就是DOM(Document Object Model)。\n * 每个HTML或XML文档都可以被视为一个文档树，文档树是整个文档的层次结构表示。\n * 文档节点是整个文档树的根节点。\n * DOM为这个文档树提供了一个编程接口，开发者可以使用JavaScript来操作这个树状结构。\n\n\n# 文档树\n\n通过js操纵文档\n\n有元素节点、属性节点、文本节点\n\nJS DOM练习\n\n\n# JS 表格的增删查改练习\n\n\n# 踩坑\n\n<script src=\"./js/table.js\"><\/script>\n\n\n1\n\n\n表示的是当前目录下的js文件夹的table.js\n\n前一个目录就是../\n\n前前一个目录是../../ 逐级查找\n\n这个页面的html引用外部的js失败了，以为是路径问题，修改后仍然失败\n\n于是设计了一个函数，来检测js文件是否正常引入\n\n    \x3c!-- 检测代码 --\x3e\n    <script>\n        function checkJSFileLoaded() {\n            if (typeof deleteRow === 'function') {\n                console.log('JS 文件已正确加载，deleteRow 函数可用。');\n            } else {\n                console.error('JS 文件未正确加载，deleteRow 函数未定义。');\n            }\n        }\n\n        // 调用检测函数\n        checkJSFileLoaded();\n    <\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n比较坑的一个事情，，在测试过程里，我刷新了页面，也重启了npm，但是。最终还需要退出页面，重新进一次才算是整个页面都重新刷新了。。\n\n所以最后发现问题其实就是路径问题\n\n修改路径后，不仅需要重新重启npm 还需要退出页面，重新进一次。\n\n\n# 小惊喜\n\n今天发现了WebStorm的ai辅助补全功能\n\n\n\n文字写于：广东",normalizedContent:"前端三件套之js\n\n\n# 03.javascript基础\n\njavascript和java没有任何关系，类似于张学友和张学。javascript简称js\n\njavascript是一种轻量级、解释型、面向对象的脚本语言。它主要被设计用于在网页上实现动态效果，增加用户与网页的交互性。\n\n作为一种客户端脚本语言，javascript可以直接嵌入html，并在浏览器中执行。\n\n与html和css不同，javascript使得网页不再是静态的，而是可以根据用户的操作动态变化的。\n\n在前端开发中\n\n * 客户端脚本：用于在用户浏览器中执行，实现动态效果和用户交互。\n * 网页开发：与html和css协同工作，使得网页具有更强的交互性和动态性。\n * 后端开发：使用node.js，javascript也可以在服务器端运行，实现服务器端应用的开发。\n\n\n# js导入方式\n\n内联式\n\n外部引入\n\njs导入方式练习\n\n在开发者工具的控制台中可以看到\n\n\n\n\n# js基本语法\n\nvar：变量的意思，variable\n\nlet、const\n\n三个方式都可以定义一个变量，区别在于\n\n\n# 1.var的作用域是整个函数，let、const是一个块例如在一个函数中\n\n函数{\n\tif{\n\tlet x=0;\n\t}\n}\n\n\n1\n2\n3\n4\n5\n\n\n用了const和let，x只会在if中起作用，而var会在整个函数中起作用\n\n\n# 2.变量提升\n\nvar：变量提升\n\nlet 和 const：无提升（暂时性死区）\n\nconsole.log(a); // 输出 undefined，因为 var 声明被提升，但赋值未提升\nvar a = 5;\n\nconsole.log(b); // 报错：referenceerror，因为 let 声明前不可用\nlet b = 10;\n\nconsole.log(c); // 报错：referenceerror，因为 const 声明前不可用\nconst c = 20;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 3.可变性\n\nvar 和 let：可以重新赋值\n\nconst：不能重新赋值\n\nvar num1 = 1;\nnum1 = 2; // 可以重新赋值\nconsole.log(num1); // 输出 2\n\nlet num2 = 3;\nnum2 = 4; // 可以重新赋值\nconsole.log(num2); // 输出 4\n\nconst num3 = 5;\nnum3 = 6; // 报错：typeerror，const 声明的变量不能重新赋值\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n优先使用 let 和 const，避免使用 var，这样可以减少意外错误，提升代码的可读性和安全性。\n\n\n\n\n# js控制语句、函数\n\nif、else、else if 条件语句\n\nfor、while 循环语句\n\nbreak；continue\n\n函数\n\n\n# js事件\n\n事件也就是函数的触发条件\n\n事件绑定的方法有三种：\n\n * html属性\n * dom属性\n * addeventlistener方法\n\n\n\n\n# dom（document object model）\n\n * 当网页被加载时，浏览器会创建页面的文档对象模型，也就是dom(document object model)。\n * 每个html或xml文档都可以被视为一个文档树，文档树是整个文档的层次结构表示。\n * 文档节点是整个文档树的根节点。\n * dom为这个文档树提供了一个编程接口，开发者可以使用javascript来操作这个树状结构。\n\n\n# 文档树\n\n通过js操纵文档\n\n有元素节点、属性节点、文本节点\n\njs dom练习\n\n\n# js 表格的增删查改练习\n\n\n# 踩坑\n\n<script src=\"./js/table.js\"><\/script>\n\n\n1\n\n\n表示的是当前目录下的js文件夹的table.js\n\n前一个目录就是../\n\n前前一个目录是../../ 逐级查找\n\n这个页面的html引用外部的js失败了，以为是路径问题，修改后仍然失败\n\n于是设计了一个函数，来检测js文件是否正常引入\n\n    \x3c!-- 检测代码 --\x3e\n    <script>\n        function checkjsfileloaded() {\n            if (typeof deleterow === 'function') {\n                console.log('js 文件已正确加载，deleterow 函数可用。');\n            } else {\n                console.error('js 文件未正确加载，deleterow 函数未定义。');\n            }\n        }\n\n        // 调用检测函数\n        checkjsfileloaded();\n    <\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n比较坑的一个事情，，在测试过程里，我刷新了页面，也重启了npm，但是。最终还需要退出页面，重新进一次才算是整个页面都重新刷新了。。\n\n所以最后发现问题其实就是路径问题\n\n修改路径后，不仅需要重新重启npm 还需要退出页面，重新进一次。\n\n\n# 小惊喜\n\n今天发现了webstorm的ai辅助补全功能\n\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"组合式api&选项式api",frontmatter:{title:"组合式api&选项式api",date:"2025-04-23T08:54:36.000Z",permalink:"/pages/306fc0/",categories:["前端","Vue"],tags:[null],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/03.Vue/01.%E7%BB%84%E5%90%88%E5%BC%8Fapi&%E9%80%89%E9%A1%B9%E5%BC%8Fapi.html",relativePath:"05.前端/03.Vue/01.组合式api&选项式api.md",key:"v-38b3b8e6",path:"/pages/306fc0/",headers:[{level:2,title:"Option API",slug:"option-api",normalizedTitle:"option api",charIndex:135},{level:2,title:"Composition API",slug:"composition-api",normalizedTitle:"composition api",charIndex:39},{level:2,title:"直观对比",slug:"直观对比",normalizedTitle:"直观对比",charIndex:1165},{level:2,title:"setup 组件",slug:"setup-组件",normalizedTitle:"setup 组件",charIndex:1211}],excerpt:'<h1 id="_01-组合式api-选项式api"><a class="header-anchor" href="#_01-组合式api-选项式api">#</a> 01.组合式api&amp;选项式api</h1>\n<p>在 <a href="https://cn.vuejs.org/" target="_blank" rel="nofollow noopener noreferrer">Vue.js<OutboundLink/></a> 中，<strong>组合式 API</strong>（Composition API）和<strong>选项式 API</strong>（Options API）是两种不同的编程范式，用于定义组件逻辑。</p>\n',lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:"Option API Composition API 直观对比 setup 组件",content:"# 01.组合式api&选项式api\n\n在 Vue.js 中，组合式 API（Composition API）和选项式 API（Options API）是两种不同的编程范式，用于定义组件逻辑。\n\nVue2的API风格是选项式的，Vue3的API设计是组合式的。\n\n\n# Option API\n\n> 动图来源：大帅老猿（掘金）\n\ndata：数据 methods：方法 computed：计算属性 watch：侦听器\n\n每一个配置项都装固定的功能，逻辑是分散的\n\n * 对于简单的组件，选项式 API 提供了直观且易于理解的方式。\n * 组件的各个部分（如数据、方法、计算属性等）被明确地分隔开，便于初学者理解和维护\n\n若想新增或者修改一个需求，就需要分别修改：data、methods、computed，当功能较多时不便于维护和复用。\n\n\n\n如下图，增加方法时，逻辑是分散插入的\n\n\n\n示例：\n\n<script>\nexport default {\n  data() {\n    return {\n      message: 'Hello, Options API!',\n    };\n  },\n  methods: {\n    greet() {\n      alert(this.message);\n    },\n  },\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# Composition API\n\n组合式 API 是 Vue 3 引入的新特性\n\n它允许用函数的方式组合代码，让相关功能的逻辑组织在一起\n\n主要用于在大型组件中提高代码逻辑的可复用性。\n\nVue3 使用组合式 API 的地方为 setup。\n\n\n\n示例：\n\n<script>\nimport {ref} from 'vue';\nexport default {\n  setup() {\n    const name = ref('Composition Api');\n    const showName = () => console.log('Hello ${name.value}');\n\n    const status = ref(false);\n    const toggle = () => status.value = true;\n\n    onMounted(() => {\n      showName();\n    });\n\n    return { name, status, toggle };\n  },\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n有关name的逻辑都写在一起\n\n\n\n\n# 直观对比\n\nVue3是向下兼容的，官方推荐使用组合式API 也兼容选项式API\n\n\n\n\n# setup 组件\n\n> 教程来源：菜鸟教程-Vue3\n\nsetup() 函数在组件创建 created() 之前执行。\n\nsetup() 函数接收两个参数 props 和 context。\n\n第一个参数 props，它是响应式的，当传入新的 prop 时，它将被更新。\n\n第二个参数 context 是一个普通的 JavaScript 对象，它是一个上下文对象，暴露了其它可能在 setup 中有用的值。\n\n> **注意：**在 setup 中你应该避免使用 this，因为它不会找到组件实例。setup 的调用发生在 data property、computed property 或 methods 被解析之前，所以它们无法在 setup 中被获取。\n\n以下实例使用组合 API 定义一个计数器：\n\n<template>\n    <div>\n        <p>计数器实例: {{ count }}</p>\n        <input @click=\"myFn\" type=\"button\" value=\"点我加 1\">\n    </div>\n</template>\n\n<script> \nimport {ref, onMounted} from 'vue';\n\nexport default {\n    setup(){\n        //定义初始值为0的变量，要使用ref方法赋值，直接赋值的话变量改变不会更新 UI\n        let count = ref(0);\n\n        // 定义点击事件 myFn\n        function myFn(){\n            console.log(count);\n            count.value += 1;\n        }\n       \n       // 组件被挂载时，我们用 onMounted 钩子记录一些消息\n        onMounted(() => console.log('component mounted!'));\n\n        // 外部使用组合API中定义的变量或方法，在模板中可用。\n        return {count,myFn} // 返回的函数与方法的行为相同\n    }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n文字写于：广东",normalizedContent:"# 01.组合式api&选项式api\n\n在 vue.js 中，组合式 api（composition api）和选项式 api（options api）是两种不同的编程范式，用于定义组件逻辑。\n\nvue2的api风格是选项式的，vue3的api设计是组合式的。\n\n\n# option api\n\n> 动图来源：大帅老猿（掘金）\n\ndata：数据 methods：方法 computed：计算属性 watch：侦听器\n\n每一个配置项都装固定的功能，逻辑是分散的\n\n * 对于简单的组件，选项式 api 提供了直观且易于理解的方式。\n * 组件的各个部分（如数据、方法、计算属性等）被明确地分隔开，便于初学者理解和维护\n\n若想新增或者修改一个需求，就需要分别修改：data、methods、computed，当功能较多时不便于维护和复用。\n\n\n\n如下图，增加方法时，逻辑是分散插入的\n\n\n\n示例：\n\n<script>\nexport default {\n  data() {\n    return {\n      message: 'hello, options api!',\n    };\n  },\n  methods: {\n    greet() {\n      alert(this.message);\n    },\n  },\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# composition api\n\n组合式 api 是 vue 3 引入的新特性\n\n它允许用函数的方式组合代码，让相关功能的逻辑组织在一起\n\n主要用于在大型组件中提高代码逻辑的可复用性。\n\nvue3 使用组合式 api 的地方为 setup。\n\n\n\n示例：\n\n<script>\nimport {ref} from 'vue';\nexport default {\n  setup() {\n    const name = ref('composition api');\n    const showname = () => console.log('hello ${name.value}');\n\n    const status = ref(false);\n    const toggle = () => status.value = true;\n\n    onmounted(() => {\n      showname();\n    });\n\n    return { name, status, toggle };\n  },\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n有关name的逻辑都写在一起\n\n\n\n\n# 直观对比\n\nvue3是向下兼容的，官方推荐使用组合式api 也兼容选项式api\n\n\n\n\n# setup 组件\n\n> 教程来源：菜鸟教程-vue3\n\nsetup() 函数在组件创建 created() 之前执行。\n\nsetup() 函数接收两个参数 props 和 context。\n\n第一个参数 props，它是响应式的，当传入新的 prop 时，它将被更新。\n\n第二个参数 context 是一个普通的 javascript 对象，它是一个上下文对象，暴露了其它可能在 setup 中有用的值。\n\n> **注意：**在 setup 中你应该避免使用 this，因为它不会找到组件实例。setup 的调用发生在 data property、computed property 或 methods 被解析之前，所以它们无法在 setup 中被获取。\n\n以下实例使用组合 api 定义一个计数器：\n\n<template>\n    <div>\n        <p>计数器实例: {{ count }}</p>\n        <input @click=\"myfn\" type=\"button\" value=\"点我加 1\">\n    </div>\n</template>\n\n<script> \nimport {ref, onmounted} from 'vue';\n\nexport default {\n    setup(){\n        //定义初始值为0的变量，要使用ref方法赋值，直接赋值的话变量改变不会更新 ui\n        let count = ref(0);\n\n        // 定义点击事件 myfn\n        function myfn(){\n            console.log(count);\n            count.value += 1;\n        }\n       \n       // 组件被挂载时，我们用 onmounted 钩子记录一些消息\n        onmounted(() => console.log('component mounted!'));\n\n        // 外部使用组合api中定义的变量或方法，在模板中可用。\n        return {count,myfn} // 返回的函数与方法的行为相同\n    }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n文字写于：广东",charsets:{cjk:!0}},{title:"后端基础",frontmatter:{title:"后端基础",date:"2025-03-18T15:16:14.000Z",permalink:"/backend/e7f78e/",categories:["后端","后端基础"],tags:["后端"],readingShow:"top"},regularPath:"/06.%E5%90%8E%E7%AB%AF/01.%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80/01.%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80.html",relativePath:"06.后端/01.后端基础/01.后端基础.md",key:"v-8e22d07c",path:"/backend/e7f78e/",headers:[{level:2,title:"后端是什么",slug:"后端是什么",normalizedTitle:"后端是什么",charIndex:179},{level:3,title:"网站和移动应用后端",slug:"网站和移动应用后端",normalizedTitle:"网站和移动应用后端",charIndex:307},{level:2,title:"前端和后端的区别",slug:"前端和后端的区别",normalizedTitle:"前端和后端的区别",charIndex:592},{level:2,title:"前端与后端技术栈",slug:"前端与后端技术栈",normalizedTitle:"前端与后端技术栈",charIndex:1038},{level:2,title:"前端 Vs 后端：谁是最好的？",slug:"前端-vs-后端-谁是最好的",normalizedTitle:"前端 vs 后端：谁是最好的？",charIndex:1997},{level:3,title:"前端与后端开发人员：所需技能",slug:"前端与后端开发人员-所需技能",normalizedTitle:"前端与后端开发人员：所需技能",charIndex:2766},{level:4,title:"前端与后端开发人员：角色与职责",slug:"前端与后端开发人员-角色与职责",normalizedTitle:"前端与后端开发人员：角色与职责",charIndex:3247},{level:3,title:"前端与后端开发人员：薪资比较",slug:"前端与后端开发人员-薪资比较",normalizedTitle:"前端与后端开发人员：薪资比较",charIndex:3751},{level:4,title:"前端开发人员薪水",slug:"前端开发人员薪水",normalizedTitle:"前端开发人员薪水",charIndex:3769},{level:4,title:"后端开发人员薪水",slug:"后端开发人员薪水",normalizedTitle:"后端开发人员薪水",charIndex:3818},{level:2,title:"什么是全栈开发？",slug:"什么是全栈开发",normalizedTitle:"什么是全栈开发？",charIndex:3863}],excerpt:"<p>后端又是啥？？🤨</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"后端是什么 网站和移动应用后端 前端和后端的区别 前端与后端技术栈 前端 Vs 后端：谁是最好的？ 前端与后端开发人员：所需技能 前端与后端开发人员：角色与职责 前端与后端开发人员：薪资比较 前端开发人员薪水 后端开发人员薪水 什么是全栈开发？",content:"后端又是啥？？🤨\n\n\n# 01.后端基础\n\n> 本文引用:\n> \n> 1.自前端后端的区别（超详细版）_如何区分前端和后端问题-CSDN博客\n> \n> 作者：水无垠ZZU\n> \n> 2.Backend vs Frontend Development: What’s The Difference?\n> \n> Author:Paresh Sagar\n\n\n# 后端是什么\n\n后端是应用程序的后台开发，也称为“服务器端开发”，也就是在系统“后面”所发生的事情。在后端服务器和浏览器或应用程序之间存储网站、应用数据和中间媒介的服务器都属于后端。简单来说，在应用程序或网站的屏幕上看不到的所有东西都是前端的后端。\n\n\n# 网站和移动应用后端\n\n网站的后端需要设置服务器，存储和检索数据，以及将这些服务器与前端进行连接的接口。如果说前端开发人员梗关注网站的外观，后端开发人员则更更关注网站的速度、性能和响应能力，后端通过编码、云 API 和数据库进行集成。\n\n就像前端一样，移动应用的后端开发在各个方面都与网站后端相同。此外，你为移动应用设置后端服务器的选项包括：云计算（AWS，Firebase）定制服务器或 MBaaS（移动后端即服务）。\n\nRuby，Apache，Nginx，PHP，MySQL，MongoDB 等用于后端开发的工具和技术很少。我们将在文中进一步讨论这些技术栈。\n\n\n# 前端和后端的区别\n\n前端       后端                                                  \n专业知识     前端 Web 开发人员需要精通 HTML，CSS 和 JavaScript。              后端开发人员应该拥有数据库，服务器，API 等技能\n职位描述     前端开发人员团队设计网站的外观，并通过测试不断修改。                          后端开发人员团队开发软件，并构建支持前端的数据库架构。\n独立开发服务   除非网站是一个简单工作的静态网站，否则不能单独提供前端服务。                      后端服务可以作为 BaaS（后端即服务）独立提供。\n项目目标     前端开发人员的目标是确保所有用户都可以访问该网站或应用，并在所有视图中做出响应 —— 移动和桌面。   后端开发人员的目标是围绕前端构建程序，并提供所需的所有支持，并确保站点或应用始终正常运行。\n\n\n# 前端与后端技术栈\n\n       前端                                                                                                后端\n编程语言   HTML，CSS，JavaScript                                                                               PHP，Python，SQL，Java，Ruby，.NET，Perl\n框架     Angular.JS，React.JS，Backbone.JS，Vue.JS，Sass，Ember.JS，NPM                                          Laravel，CakePHP，Express，CodeIgniter，Ruby on\n                                                                                                         Rails，Pylon，ASP.NET\n数据库    Local Storage, Core Data, SQLite, Cookies, Sessions                                               MySQL，Casandra，Postgre SQL，MongoDB，Oracle，Sybase，SQL Server\n服务器    -                                                                                                 Ubuntu，Apache，Nginx，Linux，Windows\n其他     AJAX，AMP，Atom，Babel，BEM，Blaze，Bourbon，Broccoli，Dojo，Flux，GraphQL，Gulp，Polymer，Socket.IO，Sublime   -\n       Text\n\n\n# 前端 Vs 后端：谁是最好的？\n\n除了所涉及的技术之外，你对前端与后端开发人员的选择取决于开发人员最重要的因素。\n\n如果对美学和产品的感觉对你来说至关重要，那么你会倾向于将前端技术作为职业和专业。另一方面，如果你关注提高网站、应用程序或软件的效率和响应能力，那么你的方向就应该是后端开发。\n\n前端设计师所做的很大一部分工作就是让用户在移动设备或 PC 屏幕上看到的东西看起来都很棒而且易于使用。相反，后端开发人员唯一关注的美学是编写干净的代码。\n\n如果你开始认为在前端 Vs 后端 中，两者中任何一个基于我们上面谈到的内容都优于另一个，那么这是一个错误的假设。这两个学科非常独特，对于构建网站或应用程序同样重要。\n\n只是有些人对视觉方面有天赋，而有些人则对逻辑和技术问题解决的很好。由于史蒂夫·乔布斯（前端幻想家）以及史蒂夫·沃兹尼亚克（后端天才），苹果成为了它的样子。\n\n\n\n前端职称：\n\n * 前端开发人员\n\n * 前端 Web 设计师\n\n * Android 开发人员\n\n * iOS 开发人员\n\n * 前端开发运营\n\n * 前端 JavaScript 应用程序开发人员\n\n * 前端用户界面 （UI） 开发人员\n\n * 前端用户界面 （UI） 开发人员\n\n * HTML/CSS 开发人员\n\n * 前端测试/QA\n\n * 前端 SEO 专家\n\n后端职称：\n\n * 后端开发人员\n\n * 初级后端工程师\n\n * Web 开发人员\n\n * 开发运营\n\n * 软件工程师\n\n * WordPress 开发人员\n\n * 云开发人员\n\n * REST API 专家\n\n * 服务器/系统管理员\n\n * 数据库设计师 /Architecturer\n\n * Java 开发人员\n\n * Python 开发人员\n\n * PHP 开发人员\n\n\n# 前端与后端开发人员：所需技能\n\n所需的高级技能会根据经验和职称而变化，但成为前端或后端开发人员绝对需要一些技能。\n\n前端开发人员所需的技能                            后端开发人员所需的技能\n对美学、艺术和设计有很好的理解                        对第三方附加组件的透彻理解\n了解各种 CMS，如 WordPress、Joomla 或 Drupal   对如何调试代码的批判性理解\n直观满足用户需求                               将客户的业务需求转化为功能代码\n了解 PHP 和 OOPs（面向对象编程）                  了解 Web 服务器配置\n质量保证专业知识                               与外部系统（支付处理器、社交媒体网站）兼容\n懂得使用 PhotoShop、Sketch 或 Figma 等设计工具    批判性思维能力\n虚拟主机的基础知识                              设计用户交互系统\n\n# 前端与后端开发人员：角色与职责\n\n前端和后端开发人员的角色和职责是什么？在申请工作或雇用您的前端或后端开发人员之前，请务必仔细阅读这些内容。\n\n前端开发人员的角色和职责                    后端开发人员的角色和职责\n确保网站的可见性在各种浏览器中保持不变。            了解客户对网站或应用程序的目标，并提供有效的开发解决方案。\n构建具有视觉吸引力并吸引用户互动的网站或应用程序。       安全地存储数据，并确保在请求时向该用户显示数据。\n了解跨浏览器测试。                       开发支付处理系统、安全地存储支付信息并收取支付费用。\n熟练使用 Flash 和 Dreamweaver 等工具。   管理和构建（如有必要）跨设备工作的 API 资源。\n对 SEO 有基本的了解。                   构建系统架构和数据科学分析。\n设计易于使用。                         组织跨多个设备高效运行的系统逻辑。\n擅长与客户互动并实施他们的反馈。                解决系统相关问题和实施算法的技能。\n\n\n# 前端与后端开发人员：薪资比较\n\n# 前端开发人员薪水\n\n根据 *PayScale：*\n\n\n\n根据 Glassdoor 的说法：\n\n# 后端开发人员薪水\n\n根据 *PayScale：*\n\n根据 Glassdoor ：\n\n\n# 什么是全栈开发？\n\n有些人可以同时掌握前端和后端开发技能。这样的开发被称为全栈开发人员。\n\n学习或雇用全栈开发者有其自身的优点和缺点。可以吧开发人员数量减少到一半，但专业水平也随之降低了。专门从事前端或后端开发的开发人员一般比了解两者的人对于单一学科更加专业。\n\n还有各种类似于全栈的技术栈，如 MEAN 技术栈，LAMP 技术栈，.NET 技术栈，Python-Django 技术栈，ROR 技术栈开发人员可以成为任何这些技术堆栈的专家。\n\n文字写于：广东",normalizedContent:"后端又是啥？？🤨\n\n\n# 01.后端基础\n\n> 本文引用:\n> \n> 1.自前端后端的区别（超详细版）_如何区分前端和后端问题-csdn博客\n> \n> 作者：水无垠zzu\n> \n> 2.backend vs frontend development: what’s the difference?\n> \n> author:paresh sagar\n\n\n# 后端是什么\n\n后端是应用程序的后台开发，也称为“服务器端开发”，也就是在系统“后面”所发生的事情。在后端服务器和浏览器或应用程序之间存储网站、应用数据和中间媒介的服务器都属于后端。简单来说，在应用程序或网站的屏幕上看不到的所有东西都是前端的后端。\n\n\n# 网站和移动应用后端\n\n网站的后端需要设置服务器，存储和检索数据，以及将这些服务器与前端进行连接的接口。如果说前端开发人员梗关注网站的外观，后端开发人员则更更关注网站的速度、性能和响应能力，后端通过编码、云 api 和数据库进行集成。\n\n就像前端一样，移动应用的后端开发在各个方面都与网站后端相同。此外，你为移动应用设置后端服务器的选项包括：云计算（aws，firebase）定制服务器或 mbaas（移动后端即服务）。\n\nruby，apache，nginx，php，mysql，mongodb 等用于后端开发的工具和技术很少。我们将在文中进一步讨论这些技术栈。\n\n\n# 前端和后端的区别\n\n前端       后端                                                  \n专业知识     前端 web 开发人员需要精通 html，css 和 javascript。              后端开发人员应该拥有数据库，服务器，api 等技能\n职位描述     前端开发人员团队设计网站的外观，并通过测试不断修改。                          后端开发人员团队开发软件，并构建支持前端的数据库架构。\n独立开发服务   除非网站是一个简单工作的静态网站，否则不能单独提供前端服务。                      后端服务可以作为 baas（后端即服务）独立提供。\n项目目标     前端开发人员的目标是确保所有用户都可以访问该网站或应用，并在所有视图中做出响应 —— 移动和桌面。   后端开发人员的目标是围绕前端构建程序，并提供所需的所有支持，并确保站点或应用始终正常运行。\n\n\n# 前端与后端技术栈\n\n       前端                                                                                                后端\n编程语言   html，css，javascript                                                                               php，python，sql，java，ruby，.net，perl\n框架     angular.js，react.js，backbone.js，vue.js，sass，ember.js，npm                                          laravel，cakephp，express，codeigniter，ruby on\n                                                                                                         rails，pylon，asp.net\n数据库    local storage, core data, sqlite, cookies, sessions                                               mysql，casandra，postgre sql，mongodb，oracle，sybase，sql server\n服务器    -                                                                                                 ubuntu，apache，nginx，linux，windows\n其他     ajax，amp，atom，babel，bem，blaze，bourbon，broccoli，dojo，flux，graphql，gulp，polymer，socket.io，sublime   -\n       text\n\n\n# 前端 vs 后端：谁是最好的？\n\n除了所涉及的技术之外，你对前端与后端开发人员的选择取决于开发人员最重要的因素。\n\n如果对美学和产品的感觉对你来说至关重要，那么你会倾向于将前端技术作为职业和专业。另一方面，如果你关注提高网站、应用程序或软件的效率和响应能力，那么你的方向就应该是后端开发。\n\n前端设计师所做的很大一部分工作就是让用户在移动设备或 pc 屏幕上看到的东西看起来都很棒而且易于使用。相反，后端开发人员唯一关注的美学是编写干净的代码。\n\n如果你开始认为在前端 vs 后端 中，两者中任何一个基于我们上面谈到的内容都优于另一个，那么这是一个错误的假设。这两个学科非常独特，对于构建网站或应用程序同样重要。\n\n只是有些人对视觉方面有天赋，而有些人则对逻辑和技术问题解决的很好。由于史蒂夫·乔布斯（前端幻想家）以及史蒂夫·沃兹尼亚克（后端天才），苹果成为了它的样子。\n\n\n\n前端职称：\n\n * 前端开发人员\n\n * 前端 web 设计师\n\n * android 开发人员\n\n * ios 开发人员\n\n * 前端开发运营\n\n * 前端 javascript 应用程序开发人员\n\n * 前端用户界面 （ui） 开发人员\n\n * 前端用户界面 （ui） 开发人员\n\n * html/css 开发人员\n\n * 前端测试/qa\n\n * 前端 seo 专家\n\n后端职称：\n\n * 后端开发人员\n\n * 初级后端工程师\n\n * web 开发人员\n\n * 开发运营\n\n * 软件工程师\n\n * wordpress 开发人员\n\n * 云开发人员\n\n * rest api 专家\n\n * 服务器/系统管理员\n\n * 数据库设计师 /architecturer\n\n * java 开发人员\n\n * python 开发人员\n\n * php 开发人员\n\n\n# 前端与后端开发人员：所需技能\n\n所需的高级技能会根据经验和职称而变化，但成为前端或后端开发人员绝对需要一些技能。\n\n前端开发人员所需的技能                            后端开发人员所需的技能\n对美学、艺术和设计有很好的理解                        对第三方附加组件的透彻理解\n了解各种 cms，如 wordpress、joomla 或 drupal   对如何调试代码的批判性理解\n直观满足用户需求                               将客户的业务需求转化为功能代码\n了解 php 和 oops（面向对象编程）                  了解 web 服务器配置\n质量保证专业知识                               与外部系统（支付处理器、社交媒体网站）兼容\n懂得使用 photoshop、sketch 或 figma 等设计工具    批判性思维能力\n虚拟主机的基础知识                              设计用户交互系统\n\n# 前端与后端开发人员：角色与职责\n\n前端和后端开发人员的角色和职责是什么？在申请工作或雇用您的前端或后端开发人员之前，请务必仔细阅读这些内容。\n\n前端开发人员的角色和职责                    后端开发人员的角色和职责\n确保网站的可见性在各种浏览器中保持不变。            了解客户对网站或应用程序的目标，并提供有效的开发解决方案。\n构建具有视觉吸引力并吸引用户互动的网站或应用程序。       安全地存储数据，并确保在请求时向该用户显示数据。\n了解跨浏览器测试。                       开发支付处理系统、安全地存储支付信息并收取支付费用。\n熟练使用 flash 和 dreamweaver 等工具。   管理和构建（如有必要）跨设备工作的 api 资源。\n对 seo 有基本的了解。                   构建系统架构和数据科学分析。\n设计易于使用。                         组织跨多个设备高效运行的系统逻辑。\n擅长与客户互动并实施他们的反馈。                解决系统相关问题和实施算法的技能。\n\n\n# 前端与后端开发人员：薪资比较\n\n# 前端开发人员薪水\n\n根据 *payscale：*\n\n\n\n根据 glassdoor 的说法：\n\n# 后端开发人员薪水\n\n根据 *payscale：*\n\n根据 glassdoor ：\n\n\n# 什么是全栈开发？\n\n有些人可以同时掌握前端和后端开发技能。这样的开发被称为全栈开发人员。\n\n学习或雇用全栈开发者有其自身的优点和缺点。可以吧开发人员数量减少到一半，但专业水平也随之降低了。专门从事前端或后端开发的开发人员一般比了解两者的人对于单一学科更加专业。\n\n还有各种类似于全栈的技术栈，如 mean 技术栈，lamp 技术栈，.net 技术栈，python-django 技术栈，ror 技术栈开发人员可以成为任何这些技术堆栈的专家。\n\n文字写于：广东",charsets:{cjk:!0}},{title:"过渡",frontmatter:{title:"过渡",date:"2025-03-20T20:04:32.000Z",permalink:"/frontend/917b7b/",categories:["前端","前端基础"],tags:[null],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/02.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/05.%E8%BF%87%E6%B8%A1.html",relativePath:"05.前端/02.前端基础/05.过渡.md",key:"v-356004a8",path:"/frontend/917b7b/",headers:[{level:2,title:"后记",slug:"后记",normalizedTitle:"后记",charIndex:56}],excerpt:"<p>后续补的摘要，因为之前没有发现摘要功能</p>\n",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:"后记",content:"后续补的摘要，因为之前没有发现摘要功能\n\n\n# 05.过渡\n\n前端\n\n前端会是一个页面，向后端发送请求\n\n\n# 后记\n\nFlutter的环境配好之后，学习的动力不足。不过还有心情学前端，继续看吧\n\n文字写于：广东",normalizedContent:"后续补的摘要，因为之前没有发现摘要功能\n\n\n# 05.过渡\n\n前端\n\n前端会是一个页面，向后端发送请求\n\n\n# 后记\n\nflutter的环境配好之后，学习的动力不足。不过还有心情学前端，继续看吧\n\n文字写于：广东",charsets:{cjk:!0}},{title:"后端的四层架构",frontmatter:{title:"后端的四层架构",date:"2025-03-25T09:48:04.000Z",permalink:"/backend/55d0d1/",categories:["后端","后端基础"],tags:[null],readingShow:"top"},regularPath:"/06.%E5%90%8E%E7%AB%AF/01.%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80/02.%E5%90%8E%E7%AB%AF%E7%9A%84%E5%9B%9B%E5%B1%82%E6%9E%B6%E6%9E%84.html",relativePath:"06.后端/01.后端基础/02.后端的四层架构.md",key:"v-f606a082",path:"/backend/55d0d1/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:116},{level:2,title:"分层架构",slug:"分层架构",normalizedTitle:"分层架构",charIndex:5},{level:4,title:"微服务架构",slug:"微服务架构",normalizedTitle:"微服务架构",charIndex:1239},{level:4,title:"事件驱动架构",slug:"事件驱动架构",normalizedTitle:"事件驱动架构",charIndex:1747},{level:2,title:"项目实践",slug:"项目实践",normalizedTitle:"项目实践",charIndex:2117},{level:3,title:"示例项目结构",slug:"示例项目结构",normalizedTitle:"示例项目结构",charIndex:2151},{level:2,title:"其他知识",slug:"其他知识",normalizedTitle:"其他知识",charIndex:2440}],excerpt:"<p>后端的四层分层架构</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"前言 分层架构 微服务架构 事件驱动架构 项目实践 示例项目结构 其他知识",content:"后端的四层分层架构\n\n\n# 02.后端的分层架构\n\n> 本文引用自：\n> \n> 1.我敢打赌，这个架构你一定知道！-腾讯云开发者社区-腾讯云\n> \n> 2.00 后架构师，那可能么？\n> \n> 引用此文是作为笔者的摘录笔记\n\n\n# 前言\n\n开发后端项目时，最常见的架构模式就是分层架构。所谓的分层架构，就是把系统自上而下分为多个不同的层，每一层都有特定的功能和职责，且只和自己的直接上层与直接下层 “打交道”。\n\n分层架构的优点是：每一层都有明确定义的职责，易于理解和维护；而且各层可以独立扩展，以适应不同的需求。\n\n\n# 分层架构\n\n以Java后端开发为例，Java 企业级后端项目开发时常用的分层架构，一般从前端界面**（表示层）发送的请求出发，需要经历接入层、控制层、业务逻辑层、通用业务层、数据访问层、系统资源层**等。\n\n * 表示层 通常是指让用户交互和查看信息的前端界面，比如用户点击按钮后能够发送一个请求，也可以叫用户层、界面层等。\n\n * 发送请求后，会经过 接入层 ，比如 Nginx 网关、或者其他中间件，对请求做一个预处理或转发，比如实现负载均衡。这一层不是必须存在的，通常更适用于中大型项目，前端也可以直接请求后端。\n\n * 接入层会将请求转发到 控制层（Controller），负责接受请求、调用业务逻辑层（Service）的代码实现功能、然后响应结果。控制层一般不建议写复杂的业务逻辑，尽量保持精简。\n\n * 接下来是 业务逻辑层（Service），负责处理复杂的业务逻辑，比如对请求数据进行校验、处理、调用数据访问层以将结果存到数据库中等，也是我们做系统时主要开发编码的部分。通用业务层（Manager、Module）是一种特殊的业务逻辑层，主要的作用是抽取了一些需要被多个业务调用的公共代码，比如上传文件到对象存储、鉴权等，从而实现复用。\n\n * 数据访问层（Dao / Mapper）负责操作底层的数据源，比如对数据库、文件、缓存等进行增删改查。\n   \n   Data Access Object，数据访问对象\n\n * 最后是 系统资源层 ，也可以叫基础设施层，包括各种基础服务、系统环境等，比如数据库、消息队列、Redis、文件存储、Linux 系统、Docker 等。复杂的基础设施可能还包括 K8S 容器资源编排、资源调度平台等。\n\n因不同业务和团队选择，分层架构会有不同\n\n> 比如开发 Java 企业级后端项目时常用的三层架构，将系统分为表示层、业务逻辑层、数据访问层。\n> \n> 表示层负责接受用户请求，把用户输入的参数传递给业务逻辑层进行处理，并返回数据、页面等内容给用户。\n> \n> 业务逻辑层负责处理复杂的业务逻辑，比如调用 AI 能力完成智能对话、再进行加工处理、调用数据访问层将结果存到数据库中，也是我们做系统主要开发的部分。\n> \n> 数据访问层负责操作底层的数据源，比如对数据库、文件、缓存等进行增删改查。\n\n# 微服务架构\n\n微服务的 “微” 是相对于 “单体” 项目的概念。微服务架构是指将完整的大型系统拆分为多个微小的、自治的服务，每个服务都能独立部署、独立扩展和维护、互不影响，服务之间通过网络通信进行协作，从而实现原本大型系统的完整功能。\n\n我们首先将系统按照功能划分为了多个模块。但如果我们只是按逻辑划分出了这些模块，实际上所有的代码仍然部署在同一个项目中，打包后仍然是一个可执行文件。那么所有模块要么都在运行、要么都在宕机，本质上还是单体项目。一个服务崩了，可能导致整个项目都无法运行！\n\n\n\n所以我们将部分重要模块（比如支付模块）的代码从原本项目中抽离，单独作为了一个服务，并且还启动了备份，从而保证了支付业务的稳定性。说什么也不能影响收入对不对~\n\n\n\n能够实现微服务设计的框架也很多，比如 Java 的 Spring Cloud、Apache Dubbo 等。但是学习微服务更重要的是思想，即 如何合理地拆分服务 。\n\n并不是所有的项目都要把所有功能都拆分成子服务的，像我们的鱼聪明 AI，也没有把用户模块和助手模块进行分离，原因是这两个模块的业务都不复杂、并且存在紧密的依赖，拆分后反而不利于维护了。\n\n# 事件驱动架构\n\n在事件驱动架构中，各模块之间是通过事件（或者消息）的 发布订阅模型 进行通信的。\n\n举个最简单的例子，有两个模块：支付模块和会员模块，当用户支付成功后，支付模块会给会员模块发送一个 “XX 用户支付成功” 的事件，会员模块收到这个时间后，给对应的用户开通会员即可。\n\n\n\n但实际运用时，事件驱动架构往往会引入一个 事件总线 ，相当于一个中介，负责集中收集和下发事件。\n\n比如鱼聪明 AI 的对话功能和绘画功能就采用了事件驱动架构。当上游返回 AI 回复的消息或生成的图片后，会发送 “成功” 消息到事件总线，然后事件总线再将这些消息分别转发给对应的模块去处理。如下图：\n\n\n\n这样一来，各模块之间就实现了解耦（互不影响）。假如后续我想新增多个对话模块，只要将该模块和事件总线建立连接即可，不会影响到其他模块的运行。\n\n\n# 项目实践\n\n比如 OJ 在线判题系统 ，分层架构如下：\n\n\n\n\n# 示例项目结构\n\n基于分层架构，我们可以将项目按照特定的目录名（包名）来组织代码，比如：\n\n * controller：控制层\n * service：业务逻辑层\n * mapper：数据访问层\n * model：数据模型\n\n还可以按照业务或文件的类型来划分目录，比如：\n\n * constant：常量\n * annotation：注解类\n * common：公共类\n * config：配置类\n * job：任务\n * exception：异常处理相关\n * utils：工具类\n\n以之前带大家做过的为例，项目的目录结构如图：\n\n> （此图可以看出来教程是鱼皮写的）\n\n\n\n\n# 其他知识\n\n1）计算机网络也是采用了经典的分层架构，OSI 七层参考模型中，把计算机网络自底向上分为了物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。每个层只处理特定的功能，比如数据传输、数据的路由；层与层之间通过接口（或者叫协议）进行通信。\n\n2）需要注意的是，我们常用的后端开发框架 Spring MVC 是基于 MVC（Model-View-Controller）设计模式构建的，而不能算是传统的分层架构。而且一般现在的项目中只使用 Spring MVC 作为整个项目的控制层，不过大多数用了 Spring MVC 框架的项目基本都使用了分层架构。\n\n文字写于：广东",normalizedContent:"后端的四层分层架构\n\n\n# 02.后端的分层架构\n\n> 本文引用自：\n> \n> 1.我敢打赌，这个架构你一定知道！-腾讯云开发者社区-腾讯云\n> \n> 2.00 后架构师，那可能么？\n> \n> 引用此文是作为笔者的摘录笔记\n\n\n# 前言\n\n开发后端项目时，最常见的架构模式就是分层架构。所谓的分层架构，就是把系统自上而下分为多个不同的层，每一层都有特定的功能和职责，且只和自己的直接上层与直接下层 “打交道”。\n\n分层架构的优点是：每一层都有明确定义的职责，易于理解和维护；而且各层可以独立扩展，以适应不同的需求。\n\n\n# 分层架构\n\n以java后端开发为例，java 企业级后端项目开发时常用的分层架构，一般从前端界面**（表示层）发送的请求出发，需要经历接入层、控制层、业务逻辑层、通用业务层、数据访问层、系统资源层**等。\n\n * 表示层 通常是指让用户交互和查看信息的前端界面，比如用户点击按钮后能够发送一个请求，也可以叫用户层、界面层等。\n\n * 发送请求后，会经过 接入层 ，比如 nginx 网关、或者其他中间件，对请求做一个预处理或转发，比如实现负载均衡。这一层不是必须存在的，通常更适用于中大型项目，前端也可以直接请求后端。\n\n * 接入层会将请求转发到 控制层（controller），负责接受请求、调用业务逻辑层（service）的代码实现功能、然后响应结果。控制层一般不建议写复杂的业务逻辑，尽量保持精简。\n\n * 接下来是 业务逻辑层（service），负责处理复杂的业务逻辑，比如对请求数据进行校验、处理、调用数据访问层以将结果存到数据库中等，也是我们做系统时主要开发编码的部分。通用业务层（manager、module）是一种特殊的业务逻辑层，主要的作用是抽取了一些需要被多个业务调用的公共代码，比如上传文件到对象存储、鉴权等，从而实现复用。\n\n * 数据访问层（dao / mapper）负责操作底层的数据源，比如对数据库、文件、缓存等进行增删改查。\n   \n   data access object，数据访问对象\n\n * 最后是 系统资源层 ，也可以叫基础设施层，包括各种基础服务、系统环境等，比如数据库、消息队列、redis、文件存储、linux 系统、docker 等。复杂的基础设施可能还包括 k8s 容器资源编排、资源调度平台等。\n\n因不同业务和团队选择，分层架构会有不同\n\n> 比如开发 java 企业级后端项目时常用的三层架构，将系统分为表示层、业务逻辑层、数据访问层。\n> \n> 表示层负责接受用户请求，把用户输入的参数传递给业务逻辑层进行处理，并返回数据、页面等内容给用户。\n> \n> 业务逻辑层负责处理复杂的业务逻辑，比如调用 ai 能力完成智能对话、再进行加工处理、调用数据访问层将结果存到数据库中，也是我们做系统主要开发的部分。\n> \n> 数据访问层负责操作底层的数据源，比如对数据库、文件、缓存等进行增删改查。\n\n# 微服务架构\n\n微服务的 “微” 是相对于 “单体” 项目的概念。微服务架构是指将完整的大型系统拆分为多个微小的、自治的服务，每个服务都能独立部署、独立扩展和维护、互不影响，服务之间通过网络通信进行协作，从而实现原本大型系统的完整功能。\n\n我们首先将系统按照功能划分为了多个模块。但如果我们只是按逻辑划分出了这些模块，实际上所有的代码仍然部署在同一个项目中，打包后仍然是一个可执行文件。那么所有模块要么都在运行、要么都在宕机，本质上还是单体项目。一个服务崩了，可能导致整个项目都无法运行！\n\n\n\n所以我们将部分重要模块（比如支付模块）的代码从原本项目中抽离，单独作为了一个服务，并且还启动了备份，从而保证了支付业务的稳定性。说什么也不能影响收入对不对~\n\n\n\n能够实现微服务设计的框架也很多，比如 java 的 spring cloud、apache dubbo 等。但是学习微服务更重要的是思想，即 如何合理地拆分服务 。\n\n并不是所有的项目都要把所有功能都拆分成子服务的，像我们的鱼聪明 ai，也没有把用户模块和助手模块进行分离，原因是这两个模块的业务都不复杂、并且存在紧密的依赖，拆分后反而不利于维护了。\n\n# 事件驱动架构\n\n在事件驱动架构中，各模块之间是通过事件（或者消息）的 发布订阅模型 进行通信的。\n\n举个最简单的例子，有两个模块：支付模块和会员模块，当用户支付成功后，支付模块会给会员模块发送一个 “xx 用户支付成功” 的事件，会员模块收到这个时间后，给对应的用户开通会员即可。\n\n\n\n但实际运用时，事件驱动架构往往会引入一个 事件总线 ，相当于一个中介，负责集中收集和下发事件。\n\n比如鱼聪明 ai 的对话功能和绘画功能就采用了事件驱动架构。当上游返回 ai 回复的消息或生成的图片后，会发送 “成功” 消息到事件总线，然后事件总线再将这些消息分别转发给对应的模块去处理。如下图：\n\n\n\n这样一来，各模块之间就实现了解耦（互不影响）。假如后续我想新增多个对话模块，只要将该模块和事件总线建立连接即可，不会影响到其他模块的运行。\n\n\n# 项目实践\n\n比如 oj 在线判题系统 ，分层架构如下：\n\n\n\n\n# 示例项目结构\n\n基于分层架构，我们可以将项目按照特定的目录名（包名）来组织代码，比如：\n\n * controller：控制层\n * service：业务逻辑层\n * mapper：数据访问层\n * model：数据模型\n\n还可以按照业务或文件的类型来划分目录，比如：\n\n * constant：常量\n * annotation：注解类\n * common：公共类\n * config：配置类\n * job：任务\n * exception：异常处理相关\n * utils：工具类\n\n以之前带大家做过的为例，项目的目录结构如图：\n\n> （此图可以看出来教程是鱼皮写的）\n\n\n\n\n# 其他知识\n\n1）计算机网络也是采用了经典的分层架构，osi 七层参考模型中，把计算机网络自底向上分为了物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。每个层只处理特定的功能，比如数据传输、数据的路由；层与层之间通过接口（或者叫协议）进行通信。\n\n2）需要注意的是，我们常用的后端开发框架 spring mvc 是基于 mvc（model-view-controller）设计模式构建的，而不能算是传统的分层架构。而且一般现在的项目中只使用 spring mvc 作为整个项目的控制层，不过大多数用了 spring mvc 框架的项目基本都使用了分层架构。\n\n文字写于：广东",charsets:{cjk:!0}},{title:"Spring Boot和Spring、MyBatis",frontmatter:{title:"Spring Boot和Spring、MyBatis",date:"2025-03-26T10:38:51.000Z",permalink:"/backend/e63710/",categories:["后端","后端基础"],tags:["Spring"],readingShow:"top"},regularPath:"/06.%E5%90%8E%E7%AB%AF/01.%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80/03.Spring%20Boot%E5%92%8CSpring%E3%80%81MyBatis.html",relativePath:"06.后端/01.后端基础/03.Spring Boot和Spring、MyBatis.md",key:"v-b764e084",path:"/backend/e63710/",headers:[{level:2,title:"什么是MyBatis的Mapper层？",slug:"什么是mybatis的mapper层",normalizedTitle:"什么是mybatis的mapper层？",charIndex:79},{level:2,title:"什么是Spring Boot和Spring？",slug:"什么是spring-boot和spring",normalizedTitle:"什么是spring boot和spring？",charIndex:388},{level:3,title:"Spring vs Spring Boot 对比",slug:"spring-vs-spring-boot-对比",normalizedTitle:"spring vs spring boot 对比",charIndex:445},{level:3,title:"举个例子 🌰",slug:"举个例子-🌰",normalizedTitle:"举个例子 🌰",charIndex:749},{level:4,title:"目标",slug:"目标",normalizedTitle:"目标",charIndex:760},{level:4,title:"①.用 Spring 写一个Web接口",slug:"_1-用-spring-写一个web接口",normalizedTitle:"①.用 spring 写一个web接口",charIndex:839},{level:4,title:"②.用 Spring Boot 写同样的接口",slug:"_2-用-spring-boot-写同样的接口",normalizedTitle:"②.用 spring boot 写同样的接口",charIndex:4524},{level:4,title:"关键点解释",slug:"关键点解释",normalizedTitle:"关键点解释",charIndex:7290}],excerpt:"<p>SpringBoot早有耳闻，甚至在不知道他们的时候就已经用过，他们都是啥？🤔</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"什么是MyBatis的Mapper层？ 什么是Spring Boot和Spring？ Spring vs Spring Boot 对比 举个例子 🌰 目标 ①.用 Spring 写一个Web接口 ②.用 Spring Boot 写同样的接口 关键点解释",content:'SpringBoot早有耳闻，甚至在不知道他们的时候就已经用过，他们都是啥？🤔\n\n\n# 03.Spring Boot和Spring、MyBatis\n\n\n# 什么是MyBatis的Mapper层？\n\n在后端开发中，我们需要将数据库中的数据映射到Java对象上，对数据进行增删查改等操作。MyBatis是一个Java持久层框架，它支持SQL映射，允许开发者编写SQL语句并与Java对象进行交互。\n\n在MyBatis中，Mapper层通常由两个部分组成：\n\n>  1. Mapper接口：定义与数据库交互的方法。\n>  2. Mapper XML文件：包含SQL语句的映射，定义具体的SQL操作。\n\n我们创建了一个实体类User，用于表示数据库中的用户信息。\n\nUserMapper接口\n\nMapper定义与数据库操作相关的方法。每个方法对应一个SQL查询或更新操作。\n\n\n# 什么是Spring Boot和Spring？\n\nSpring Boot 是基于Spring框架的扩展工具\n\n\n# Spring vs Spring Boot 对比\n\n特性     SPRING                  SPRING BOOT\n定位     基础框架，提供核心功能（IoC、AOP等）   基于Spring的快速开发框架\n配置     需要手动配置很多（XML/注解）        自动配置，大部分默认搞定\n服务器    需要额外部署（如Tomcat）         内嵌服务器，直接运行\n依赖管理   需要自己管理依赖                提供starter，一键引入相关库\n适用场景   需要高度定制化的复杂系统            快速开发、微服务、REST API\n\n\n# 举个例子 🌰\n\n# 目标\n\n创建一个简单的HTTP接口，访问 http://localhost:8080/hello 时返回 "Hello, Spring Boot!"。\n\n# ①.用 Spring 写一个Web接口\n\n相比于Spring Boot的“一键式”开发，原生Spring需要手动配置很多步骤，比如：\n\n * 手动配置Tomcat服务器\n * 手动编写XML定义Bean\n * 手动初始化Spring容器\n\n# 创建Maven项目\n\n# （1）新建项目\n\n 1. 在IDE中选择 Maven项目（不是Spring Boot！）。\n 2. 填写 GroupId（如 com.example）和 ArtifactId（如 spring-demo）。\n\n# （2）添加依赖\n\n在 pom.xml 中加入Spring和Servlet依赖：\n\n<dependencies>\n    \x3c!-- Spring Core + MVC --\x3e\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-webmvc</artifactId>\n        <version>5.3.30</version>  \x3c!-- 选一个稳定版本 --\x3e\n    </dependency>\n\n    \x3c!-- Servlet API（Tomcat需要） --\x3e\n    <dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>javax.servlet-api</artifactId>\n        <version>4.0.1</version>\n        <scope>provided</scope>  \x3c!-- 编译时需要，运行时由Tomcat提供 --\x3e\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 初始化Spring\n\n# （1）创建Spring配置文件\n\n在 src/main/resources 下新建 spring-config.xml：\n\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:mvc="http://www.springframework.org/schema/mvc"\n       xsi:schemaLocation="\n           http://www.springframework.org/schema/beans\n           http://www.springframework.org/schema/beans/spring-beans.xsd\n           http://www.springframework.org/schema/context\n           http://www.springframework.org/schema/context/spring-context.xsd\n           http://www.springframework.org/schema/mvc\n           http://www.springframework.org/schema/mvc/spring-mvc.xsd">\n\n    \x3c!-- 启用注解扫描（@Controller等） --\x3e\n    <context:component-scan base-package="com.example"/>\n\n    \x3c!-- 启用Spring MVC注解（@GetMapping等） --\x3e\n    <mvc:annotation-driven/>\n\n    \x3c!-- 配置视图解析器（虽然我们只返回字符串，但Spring MVC要求配这个） --\x3e\n    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">\n        <property name="prefix" value="/WEB-INF/views/"/>  \x3c!-- 可忽略，因为我们不返回JSP --\x3e\n        <property name="suffix" value=".jsp"/>\n    </bean>\n</beans>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n运行 HTML\n\n----------------------------------------\n\n# （2）配置Web应用\n\n在 src/main/webapp/WEB-INF 下新建 web.xml：\n\n<!DOCTYPE web-app PUBLIC\n        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"\n        "http://java.sun.com/dtd/web-app_2_3.dtd">\n<web-app>\n    \x3c!-- 配置Spring的DispatcherServlet（前端控制器） --\x3e\n    <servlet>\n        <servlet-name>dispatcher</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <param-value>classpath:spring-config.xml</param-value>  \x3c!-- 指定Spring配置文件 --\x3e\n        </init-param>\n        <load-on-startup>1</load-on-startup>  \x3c!-- 容器启动时加载 --\x3e\n    </servlet>\n\n    \x3c!-- 映射所有HTTP请求到DispatcherServlet --\x3e\n    <servlet-mapping>\n        <servlet-name>dispatcher</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n</web-app>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n需额外安装Tomcat并部署war包\n\n# 部署到Tomcat\n\n# （1）配置Tomcat\n\n 1. 下载Tomcat（如Tomcat 9）并解压。\n 2. 在IDE中配置Tomcat服务器：\n    * 在IntelliJ IDEA中：Run → Edit Configurations → 添加Tomcat Server。\n    * 指定Tomcat安装目录。\n\n# （2）构建并运行\n\n 1. 用Maven打包项目：\n    \n    mvn clean package\n    \n    \n    1\n    \n    \n    这会生成 target/spring-demo.war 文件。\n\n 2. 将 war 文件复制到Tomcat的 webapps/ 目录下。\n\n 3. 启动Tomcat：\n    \n    cd tomcat/bin\n    ./startup.sh  # Linux/Mac\n    startup.bat    # Windows\n    \n    \n    1\n    2\n    3\n    \n\n# 测试接口\n\n访问：\n\nhttp://localhost:8080/spring-demo/hello\n\n\n1\n\n\n（spring-demo是你的war包名，如果没改就是项目名）\n\n你应该看到：\n\nHello, Spring!\n\n\n1\n\n\n# ②.用 Spring Boot 写同样的接口\n\n# 步骤 1：创建Spring Boot项目\n\n# 方法1：用官方工具（推荐）\n\n 1. 打开浏览器，访问 start.spring.io（Spring官方项目生成器）。\n 2. 按以下配置选择：\n    * Project：Maven（默认）\n    * Language：Java\n    * Spring Boot：选最新稳定版（如3.2.x）\n    * Group：com.example（你的包名）\n    * Artifact：demo（项目名）\n    * Dependencies：添加 Spring Web（这是写Web接口必需的）\n 3. 点击 Generate 下载一个压缩包，解压后用IDE（如IntelliJ IDEA或VS Code）打开。\n\n# 方法2：用IDE直接创建\n\n * 在IntelliJ IDEA中：\n   1. 新建项目 → 选择 Spring Initializr。\n   2. 后续步骤和方法1一致，勾选 Spring Web 依赖。\n\n----------------------------------------\n\n# 步骤 2：项目结构说明\n\n解压或创建后的项目目录长这样：\n\ndemo\n├── src\n│   ├── main\n│   │   ├── java\n│   │   │   └── com\n│   │   │       └── example\n│   │   │           └── demo\n│   │   │               └── DemoApplication.java  # 启动类\n│   │   └── resources\n│   │       ├── application.properties  # 配置文件（可选）\n│   │       └── static/  # 静态资源（如HTML）\n├── pom.xml  # Maven依赖管理文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n关键文件：\n\n * DemoApplication.java：Spring Boot的启动入口。\n * pom.xml：管理项目依赖（比如你选的Spring Web就在这里）。\n\n----------------------------------------\n\n# 步骤 3：编写代码\n\n 1. 在 src/main/java/com/example/demo 下新建一个类 HelloController.java：\n    \n    package com.example.demo;\n    \n    import org.springframework.web.bind.annotation.GetMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @RestController  // 告诉Spring这是一个HTTP接口的控制器\n    public class HelloController {\n    \n        @GetMapping("/hello")  // 定义HTTP GET请求的路径\n        public String sayHello() {\n            return "Hello, Spring Boot!";\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n    * @RestController：表示这个类是用来处理HTTP请求的。\n    * @GetMapping("/hello")：当用户访问 /hello 时，调用这个方法。\n\n 2. 确保启动类 DemoApplication.java 是这样的（一般自动生成，不用改）：\n    \n    package com.example.demo;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    \n    @SpringBootApplication  // 标记这是Spring Boot应用\n    public class DemoApplication {\n        public static void main(String[] args) {\n            SpringApplication.run(DemoApplication.class, args);  // 启动应用\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n----------------------------------------\n\n# 步骤 4：运行项目\n\n 1. 在IDE中：\n    \n    * 找到 DemoApplication.java，右键点击 Run。\n    \n    * 或直接运行命令：\n      \n      ./mvnw spring-boot:run  # 如果你是Maven项目\n      \n      \n      1\n      \n\n 2. 你会看到控制台输出类似：\n    \n    Tomcat started on port 8080  # 内嵌Tomcat服务器启动了！\n    \n    \n    1\n    \n\n----------------------------------------\n\n# 步骤 5：测试接口\n\n 1. 打开浏览器，访问：\n    \n    http://localhost:8080/hello\n    \n    \n    1\n    \n\n 2. 你会看到页面显示：\n    \n    Hello, Spring Boot!\n    \n    \n    1\n    \n\n----------------------------------------\n\n# 关键点解释\n\n 1. 为什么不用配置Tomcat？ Spring Boot内嵌了Tomcat服务器，直接运行即可，无需额外安装。\n\n 2. 为什么不用写XML？ Spring Boot默认使用约定优于配置，比如：\n    \n    * 所有HTTP接口默认在 8080 端口。\n    * @RestController 自动处理HTTP响应。\n\n 3. 如何改端口？ 在 src/main/resources/application.properties 里加一行：\n    \n    server.port=9090  # 改成9090端口\n    \n    \n    1\n    \n\n文字写于：广东',normalizedContent:'springboot早有耳闻，甚至在不知道他们的时候就已经用过，他们都是啥？🤔\n\n\n# 03.spring boot和spring、mybatis\n\n\n# 什么是mybatis的mapper层？\n\n在后端开发中，我们需要将数据库中的数据映射到java对象上，对数据进行增删查改等操作。mybatis是一个java持久层框架，它支持sql映射，允许开发者编写sql语句并与java对象进行交互。\n\n在mybatis中，mapper层通常由两个部分组成：\n\n>  1. mapper接口：定义与数据库交互的方法。\n>  2. mapper xml文件：包含sql语句的映射，定义具体的sql操作。\n\n我们创建了一个实体类user，用于表示数据库中的用户信息。\n\nusermapper接口\n\nmapper定义与数据库操作相关的方法。每个方法对应一个sql查询或更新操作。\n\n\n# 什么是spring boot和spring？\n\nspring boot 是基于spring框架的扩展工具\n\n\n# spring vs spring boot 对比\n\n特性     spring                  spring boot\n定位     基础框架，提供核心功能（ioc、aop等）   基于spring的快速开发框架\n配置     需要手动配置很多（xml/注解）        自动配置，大部分默认搞定\n服务器    需要额外部署（如tomcat）         内嵌服务器，直接运行\n依赖管理   需要自己管理依赖                提供starter，一键引入相关库\n适用场景   需要高度定制化的复杂系统            快速开发、微服务、rest api\n\n\n# 举个例子 🌰\n\n# 目标\n\n创建一个简单的http接口，访问 http://localhost:8080/hello 时返回 "hello, spring boot!"。\n\n# ①.用 spring 写一个web接口\n\n相比于spring boot的“一键式”开发，原生spring需要手动配置很多步骤，比如：\n\n * 手动配置tomcat服务器\n * 手动编写xml定义bean\n * 手动初始化spring容器\n\n# 创建maven项目\n\n# （1）新建项目\n\n 1. 在ide中选择 maven项目（不是spring boot！）。\n 2. 填写 groupid（如 com.example）和 artifactid（如 spring-demo）。\n\n# （2）添加依赖\n\n在 pom.xml 中加入spring和servlet依赖：\n\n<dependencies>\n    \x3c!-- spring core + mvc --\x3e\n    <dependency>\n        <groupid>org.springframework</groupid>\n        <artifactid>spring-webmvc</artifactid>\n        <version>5.3.30</version>  \x3c!-- 选一个稳定版本 --\x3e\n    </dependency>\n\n    \x3c!-- servlet api（tomcat需要） --\x3e\n    <dependency>\n        <groupid>javax.servlet</groupid>\n        <artifactid>javax.servlet-api</artifactid>\n        <version>4.0.1</version>\n        <scope>provided</scope>  \x3c!-- 编译时需要，运行时由tomcat提供 --\x3e\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 初始化spring\n\n# （1）创建spring配置文件\n\n在 src/main/resources 下新建 spring-config.xml：\n\n<?xml version="1.0" encoding="utf-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:mvc="http://www.springframework.org/schema/mvc"\n       xsi:schemalocation="\n           http://www.springframework.org/schema/beans\n           http://www.springframework.org/schema/beans/spring-beans.xsd\n           http://www.springframework.org/schema/context\n           http://www.springframework.org/schema/context/spring-context.xsd\n           http://www.springframework.org/schema/mvc\n           http://www.springframework.org/schema/mvc/spring-mvc.xsd">\n\n    \x3c!-- 启用注解扫描（@controller等） --\x3e\n    <context:component-scan base-package="com.example"/>\n\n    \x3c!-- 启用spring mvc注解（@getmapping等） --\x3e\n    <mvc:annotation-driven/>\n\n    \x3c!-- 配置视图解析器（虽然我们只返回字符串，但spring mvc要求配这个） --\x3e\n    <bean class="org.springframework.web.servlet.view.internalresourceviewresolver">\n        <property name="prefix" value="/web-inf/views/"/>  \x3c!-- 可忽略，因为我们不返回jsp --\x3e\n        <property name="suffix" value=".jsp"/>\n    </bean>\n</beans>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n运行 html\n\n----------------------------------------\n\n# （2）配置web应用\n\n在 src/main/webapp/web-inf 下新建 web.xml：\n\n<!doctype web-app public\n        "-//sun microsystems, inc.//dtd web application 2.3//en"\n        "http://java.sun.com/dtd/web-app_2_3.dtd">\n<web-app>\n    \x3c!-- 配置spring的dispatcherservlet（前端控制器） --\x3e\n    <servlet>\n        <servlet-name>dispatcher</servlet-name>\n        <servlet-class>org.springframework.web.servlet.dispatcherservlet</servlet-class>\n        <init-param>\n            <param-name>contextconfiglocation</param-name>\n            <param-value>classpath:spring-config.xml</param-value>  \x3c!-- 指定spring配置文件 --\x3e\n        </init-param>\n        <load-on-startup>1</load-on-startup>  \x3c!-- 容器启动时加载 --\x3e\n    </servlet>\n\n    \x3c!-- 映射所有http请求到dispatcherservlet --\x3e\n    <servlet-mapping>\n        <servlet-name>dispatcher</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n</web-app>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n需额外安装tomcat并部署war包\n\n# 部署到tomcat\n\n# （1）配置tomcat\n\n 1. 下载tomcat（如tomcat 9）并解压。\n 2. 在ide中配置tomcat服务器：\n    * 在intellij idea中：run → edit configurations → 添加tomcat server。\n    * 指定tomcat安装目录。\n\n# （2）构建并运行\n\n 1. 用maven打包项目：\n    \n    mvn clean package\n    \n    \n    1\n    \n    \n    这会生成 target/spring-demo.war 文件。\n\n 2. 将 war 文件复制到tomcat的 webapps/ 目录下。\n\n 3. 启动tomcat：\n    \n    cd tomcat/bin\n    ./startup.sh  # linux/mac\n    startup.bat    # windows\n    \n    \n    1\n    2\n    3\n    \n\n# 测试接口\n\n访问：\n\nhttp://localhost:8080/spring-demo/hello\n\n\n1\n\n\n（spring-demo是你的war包名，如果没改就是项目名）\n\n你应该看到：\n\nhello, spring!\n\n\n1\n\n\n# ②.用 spring boot 写同样的接口\n\n# 步骤 1：创建spring boot项目\n\n# 方法1：用官方工具（推荐）\n\n 1. 打开浏览器，访问 start.spring.io（spring官方项目生成器）。\n 2. 按以下配置选择：\n    * project：maven（默认）\n    * language：java\n    * spring boot：选最新稳定版（如3.2.x）\n    * group：com.example（你的包名）\n    * artifact：demo（项目名）\n    * dependencies：添加 spring web（这是写web接口必需的）\n 3. 点击 generate 下载一个压缩包，解压后用ide（如intellij idea或vs code）打开。\n\n# 方法2：用ide直接创建\n\n * 在intellij idea中：\n   1. 新建项目 → 选择 spring initializr。\n   2. 后续步骤和方法1一致，勾选 spring web 依赖。\n\n----------------------------------------\n\n# 步骤 2：项目结构说明\n\n解压或创建后的项目目录长这样：\n\ndemo\n├── src\n│   ├── main\n│   │   ├── java\n│   │   │   └── com\n│   │   │       └── example\n│   │   │           └── demo\n│   │   │               └── demoapplication.java  # 启动类\n│   │   └── resources\n│   │       ├── application.properties  # 配置文件（可选）\n│   │       └── static/  # 静态资源（如html）\n├── pom.xml  # maven依赖管理文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n关键文件：\n\n * demoapplication.java：spring boot的启动入口。\n * pom.xml：管理项目依赖（比如你选的spring web就在这里）。\n\n----------------------------------------\n\n# 步骤 3：编写代码\n\n 1. 在 src/main/java/com/example/demo 下新建一个类 hellocontroller.java：\n    \n    package com.example.demo;\n    \n    import org.springframework.web.bind.annotation.getmapping;\n    import org.springframework.web.bind.annotation.restcontroller;\n    \n    @restcontroller  // 告诉spring这是一个http接口的控制器\n    public class hellocontroller {\n    \n        @getmapping("/hello")  // 定义http get请求的路径\n        public string sayhello() {\n            return "hello, spring boot!";\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n    * @restcontroller：表示这个类是用来处理http请求的。\n    * @getmapping("/hello")：当用户访问 /hello 时，调用这个方法。\n\n 2. 确保启动类 demoapplication.java 是这样的（一般自动生成，不用改）：\n    \n    package com.example.demo;\n    \n    import org.springframework.boot.springapplication;\n    import org.springframework.boot.autoconfigure.springbootapplication;\n    \n    @springbootapplication  // 标记这是spring boot应用\n    public class demoapplication {\n        public static void main(string[] args) {\n            springapplication.run(demoapplication.class, args);  // 启动应用\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n----------------------------------------\n\n# 步骤 4：运行项目\n\n 1. 在ide中：\n    \n    * 找到 demoapplication.java，右键点击 run。\n    \n    * 或直接运行命令：\n      \n      ./mvnw spring-boot:run  # 如果你是maven项目\n      \n      \n      1\n      \n\n 2. 你会看到控制台输出类似：\n    \n    tomcat started on port 8080  # 内嵌tomcat服务器启动了！\n    \n    \n    1\n    \n\n----------------------------------------\n\n# 步骤 5：测试接口\n\n 1. 打开浏览器，访问：\n    \n    http://localhost:8080/hello\n    \n    \n    1\n    \n\n 2. 你会看到页面显示：\n    \n    hello, spring boot!\n    \n    \n    1\n    \n\n----------------------------------------\n\n# 关键点解释\n\n 1. 为什么不用配置tomcat？ spring boot内嵌了tomcat服务器，直接运行即可，无需额外安装。\n\n 2. 为什么不用写xml？ spring boot默认使用约定优于配置，比如：\n    \n    * 所有http接口默认在 8080 端口。\n    * @restcontroller 自动处理http响应。\n\n 3. 如何改端口？ 在 src/main/resources/application.properties 里加一行：\n    \n    server.port=9090  # 改成9090端口\n    \n    \n    1\n    \n\n文字写于：广东',charsets:{cjk:!0}},{title:"前端是什么",frontmatter:{title:"前端是什么",date:"2025-03-17T15:01:14.000Z",permalink:"/frontend/cb876d/",categories:["前端","前端基础"],tags:["前端"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/02.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/04.%E5%89%8D%E7%AB%AF%E6%98%AF%E4%BB%80%E4%B9%88.html",relativePath:"05.前端/02.前端基础/04.前端是什么.md",key:"v-135c0e9c",path:"/frontend/cb876d/",headers:[{level:2,title:"前端开发",slug:"前端开发",normalizedTitle:"前端开发",charIndex:23},{level:3,title:"发展历程",slug:"发展历程",normalizedTitle:"发展历程",charIndex:340},{level:4,title:"Web1.0时代",slug:"web1-0时代",normalizedTitle:"web1.0时代",charIndex:158},{level:4,title:"Web2.0时代",slug:"web2-0时代",normalizedTitle:"web2.0时代",charIndex:827},{level:2,title:"前端核心技术",slug:"前端核心技术",normalizedTitle:"前端核心技术",charIndex:1346},{level:2,title:"主流前端框架",slug:"主流前端框架",normalizedTitle:"主流前端框架",charIndex:1718},{level:3,title:"Vue",slug:"vue",normalizedTitle:"vue",charIndex:1729},{level:3,title:"Django",slug:"django",normalizedTitle:"django",charIndex:1891}],excerpt:"<p>前端是啥？</p>\n",lastUpdated:"2025/4/17 01:51:43",lastUpdatedTimestamp:1744825903e3,headersStr:"前端开发 发展历程 Web1.0时代 Web2.0时代 前端核心技术 主流前端框架 Vue Django",content:"前端是啥？\n\n\n# 04.前端是什么\n\n\n# 前端开发\n\n> 本文引用自百度百科\n> \n> 前端开发_百度百科\n\n前端开发是创建WEB页面或APP等客户端界面呈现给用户的过程，简单来说，在程序或网站的屏幕上看到的内容都属于前端\n\n前端开发从网页制作演变而来，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是Web1.0时代的产物，早期网站主要内容都是静态，以图片和文字为主，用户使用网站的行为也以浏览为主。随着互联网技术的发展和HTML5、CSS3的应用，现代网页更加美观，交互效果显著，功能更加强大。\n\n前端开发跟随移动互联网发展带来了大量高性能的移动终端设备应用。HTML5，Node.js的广泛应用，各类UI框架，JS类库层出不穷，开发难度也在逐步提升。\n\n\n# 发展历程\n\n前端技术的发展是互联网自身发展变化的一个缩影。前端技术指通过浏览器到用户端计算机的统称，存贮于服务器端的统称为后端技术。前端开发主要职能就是把网站的界面更好地呈现给用户。\n\n目前的前端技术包括4个部分：前端美工、浏览器兼容、CSS、HTML“传统”技术与Adobe AIR、Google Gears,以及概念性较强的交互式设计，艺术性较强的视觉设计等。\n\n> 浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。\n> \n> 浏览器兼容性_百度百科\n\n# Web1.0时代\n\n在Web1.0时代，由于网速和终端能力的限制，大部分网站只能呈现简单的图文信息，并不能满足用户在界面上的需求，对界面技术的要求也不高。随着硬件的完善、高性能浏览器的出现和宽带的普及，技术可以在用户体验方面实现更多种可能，前端技术领域迸发出旺盛的生命力。\n\n# Web2.0时代\n\n2005年以后，互联网进入Web2.0时代，各种类似桌面软件的Web应用大量涌现，前端由此发生了翻天覆地的变化。网页不再只是承载单一的文字和图片，各种富媒体让网页的内容更加生动，网页上软件化的交互形式为用户提供了更好的使用体验，这些都是基于前端技术实现的。\n\n> 富媒体，即Rich Media的英文直译，本身并不是一种具体的互联网媒体形式，是指具有动画、声音、视频或交互性的信息传播方法。\n> \n> 它包含流媒体、声音、Flash、Java、JavaScript、DHTML等程序设计语言的形式之一或几种组合。富媒体可应用于网站设计、电子邮件、广告等领域。\n> \n> 流媒体（streaming media），多媒体数据不断由流媒体提供商发送到客户端，而客户不需要将整个多媒体数据下载到本地，就可以开始播放的多媒体技术。\n> \n> 流媒体通过将多媒体数据压缩后分段发送，用户无需下载整个文件即可即时播放。这种技术使得数据包像流水一样传输，可传送现场影音或预存影片，用户在接收数据后立即通过特定软件播放。\n> \n> 影视飓风下架的一期视频里提到过这个技术，目前平台会把视频进行编码压缩：网络平台视频的编码压缩\n\n\n# 前端核心技术\n\nHTML是一种标记语言，能够实现Web页面并在浏览器中显示。HTML5作为HTML的最新版本，引入了多项新技术，大大增强了对于应用的支持能力，使得Web技术不再局限于呈现网页内容。\n\n随着CSS、JavaScript、Flash等技术的发展，Web对于应用的处理能力逐渐增强，用户浏览网页的体验已经有了较大的改善。不过HTML5中的几项新技术实现了质的突破，使得Web技术首次被认为能够接近于本地原生应用技术，开发Web应用真正成为开发者的一个选择。\n\n>  * HTML5引入了一系列语义化标签（如*<header>、<footer>、<nav>、<section>、<article>*等），这些标签不仅提高了代码的可读性和可维护性，还增强了搜索引擎优化（SEO）和无障碍访问（Accessibility）的能力。\n\n\n# 主流前端框架\n\n\n# Vue\n\nVue是一款用于构建用户界面的JavaScript框架。它基于标准HTML、CSS和JavaScript构建，并提供了一套声明式的、组件化的编程模型，可以高效地开发用户界面。\n\n可以直接安装在Windows或适用于Linux的Windows子系统 (WSL) 上，可使用Node包管理器 (npm) 安装\n\n\n# Django\n\n是一个开源的 Python Web 开发框架，内置用户认证、数据库操作等功能，帮助开发者节省时间。没有接触过，暂不了解;)\n\n\n# 博客技术展望\n\n希望给博客添加一个便签功能，需要引用补充的内容可以以便签的形式出现来代替过长的引用。\n\n文字写于：广东",normalizedContent:"前端是啥？\n\n\n# 04.前端是什么\n\n\n# 前端开发\n\n> 本文引用自百度百科\n> \n> 前端开发_百度百科\n\n前端开发是创建web页面或app等客户端界面呈现给用户的过程，简单来说，在程序或网站的屏幕上看到的内容都属于前端\n\n前端开发从网页制作演变而来，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是web1.0时代的产物，早期网站主要内容都是静态，以图片和文字为主，用户使用网站的行为也以浏览为主。随着互联网技术的发展和html5、css3的应用，现代网页更加美观，交互效果显著，功能更加强大。\n\n前端开发跟随移动互联网发展带来了大量高性能的移动终端设备应用。html5，node.js的广泛应用，各类ui框架，js类库层出不穷，开发难度也在逐步提升。\n\n\n# 发展历程\n\n前端技术的发展是互联网自身发展变化的一个缩影。前端技术指通过浏览器到用户端计算机的统称，存贮于服务器端的统称为后端技术。前端开发主要职能就是把网站的界面更好地呈现给用户。\n\n目前的前端技术包括4个部分：前端美工、浏览器兼容、css、html“传统”技术与adobe air、google gears,以及概念性较强的交互式设计，艺术性较强的视觉设计等。\n\n> 浏览器兼容性问题又被称为网页兼容性或网站兼容性问题，指网页在各种浏览器上的显示效果可能不一致而产生浏览器和网页间的兼容问题。在网站的设计和制作中，做好浏览器兼容，才能够让网站在不同的浏览器下都正常显示。而对于浏览器软件的开发和设计，浏览器对标准的更好兼容能够给用户更好的使用体验。\n> \n> 浏览器兼容性_百度百科\n\n# web1.0时代\n\n在web1.0时代，由于网速和终端能力的限制，大部分网站只能呈现简单的图文信息，并不能满足用户在界面上的需求，对界面技术的要求也不高。随着硬件的完善、高性能浏览器的出现和宽带的普及，技术可以在用户体验方面实现更多种可能，前端技术领域迸发出旺盛的生命力。\n\n# web2.0时代\n\n2005年以后，互联网进入web2.0时代，各种类似桌面软件的web应用大量涌现，前端由此发生了翻天覆地的变化。网页不再只是承载单一的文字和图片，各种富媒体让网页的内容更加生动，网页上软件化的交互形式为用户提供了更好的使用体验，这些都是基于前端技术实现的。\n\n> 富媒体，即rich media的英文直译，本身并不是一种具体的互联网媒体形式，是指具有动画、声音、视频或交互性的信息传播方法。\n> \n> 它包含流媒体、声音、flash、java、javascript、dhtml等程序设计语言的形式之一或几种组合。富媒体可应用于网站设计、电子邮件、广告等领域。\n> \n> 流媒体（streaming media），多媒体数据不断由流媒体提供商发送到客户端，而客户不需要将整个多媒体数据下载到本地，就可以开始播放的多媒体技术。\n> \n> 流媒体通过将多媒体数据压缩后分段发送，用户无需下载整个文件即可即时播放。这种技术使得数据包像流水一样传输，可传送现场影音或预存影片，用户在接收数据后立即通过特定软件播放。\n> \n> 影视飓风下架的一期视频里提到过这个技术，目前平台会把视频进行编码压缩：网络平台视频的编码压缩\n\n\n# 前端核心技术\n\nhtml是一种标记语言，能够实现web页面并在浏览器中显示。html5作为html的最新版本，引入了多项新技术，大大增强了对于应用的支持能力，使得web技术不再局限于呈现网页内容。\n\n随着css、javascript、flash等技术的发展，web对于应用的处理能力逐渐增强，用户浏览网页的体验已经有了较大的改善。不过html5中的几项新技术实现了质的突破，使得web技术首次被认为能够接近于本地原生应用技术，开发web应用真正成为开发者的一个选择。\n\n>  * html5引入了一系列语义化标签（如*<header>、<footer>、<nav>、<section>、<article>*等），这些标签不仅提高了代码的可读性和可维护性，还增强了搜索引擎优化（seo）和无障碍访问（accessibility）的能力。\n\n\n# 主流前端框架\n\n\n# vue\n\nvue是一款用于构建用户界面的javascript框架。它基于标准html、css和javascript构建，并提供了一套声明式的、组件化的编程模型，可以高效地开发用户界面。\n\n可以直接安装在windows或适用于linux的windows子系统 (wsl) 上，可使用node包管理器 (npm) 安装\n\n\n# django\n\n是一个开源的 python web 开发框架，内置用户认证、数据库操作等功能，帮助开发者节省时间。没有接触过，暂不了解;)\n\n\n# 博客技术展望\n\n希望给博客添加一个便签功能，需要引用补充的内容可以以便签的形式出现来代替过长的引用。\n\n文字写于：广东",charsets:{cjk:!0}},{title:"cookie是什么",frontmatter:{title:"cookie是什么",date:"2025-04-02T11:49:41.000Z",permalink:"/backend/970703/",categories:["后端","后端基础"],tags:[null],readingShow:"top"},regularPath:"/06.%E5%90%8E%E7%AB%AF/01.%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80/04.cookie%E6%98%AF%E4%BB%80%E4%B9%88.html",relativePath:"06.后端/01.后端基础/04.cookie是什么.md",key:"v-4b727136",path:"/backend/970703/",headers:[{level:2,title:"什么是Cookie?",slug:"什么是cookie",normalizedTitle:"什么是cookie?",charIndex:45},{level:2,title:"Cookie的作用",slug:"cookie的作用",normalizedTitle:"cookie的作用",charIndex:148},{level:2,title:"清理cookie",slug:"清理cookie",normalizedTitle:"清理cookie",charIndex:229}],excerpt:'<h1 id="_04-cookie是什么"><a class="header-anchor" href="#_04-cookie是什么">#</a> 04.cookie是什么</h1>\n<p>Cookie是什么？🤔</p>\n<p>你是不是小饼干？🍪</p>\n',lastUpdated:"2025/4/3 02:14:08",lastUpdatedTimestamp:1743617648e3,headersStr:"什么是Cookie? Cookie的作用 清理cookie",content:"# 04.cookie是什么\n\nCookie是什么？🤔\n\n你是不是小饼干？🍪\n\n\n# 什么是Cookie?\n\ncookie是服务端发送给客户端的一个凭证，是一个键和一个值构成的。服务端会把cookie发送给客户端，客户端浏览器会将它保存起来，以后会用同一个cookie发送给服务端端\n\n\n# Cookie的作用\n\n客户端能够使用cookie让服务端认出自己。就像是办理了学生证的学生通过证件里面的信息进入学校。\n\n一个Cookie最多只有4KB\n\n\n# 清理cookie\n\n设置-隐私设置和安全性-清除浏览数据:\n\n文字写于：广东",normalizedContent:"# 04.cookie是什么\n\ncookie是什么？🤔\n\n你是不是小饼干？🍪\n\n\n# 什么是cookie?\n\ncookie是服务端发送给客户端的一个凭证，是一个键和一个值构成的。服务端会把cookie发送给客户端，客户端浏览器会将它保存起来，以后会用同一个cookie发送给服务端端\n\n\n# cookie的作用\n\n客户端能够使用cookie让服务端认出自己。就像是办理了学生证的学生通过证件里面的信息进入学校。\n\n一个cookie最多只有4kb\n\n\n# 清理cookie\n\n设置-隐私设置和安全性-清除浏览数据:\n\n文字写于：广东",charsets:{cjk:!0}},{title:"前端开发笔试练习",frontmatter:{title:"前端开发笔试练习",date:"2025-04-19T10:10:22.000Z",permalink:"/frontend/5af018/",categories:["前端","前端基础"],tags:["前端基础"],readingShow:"top"},regularPath:"/05.%E5%89%8D%E7%AB%AF/02.%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/06.%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AF%95%E7%BB%83%E4%B9%A0.html",relativePath:"05.前端/02.前端基础/06.前端开发笔试练习.md",key:"v-1b3a7299",path:"/frontend/5af018/",headers:[{level:2,title:"📖一、前端基础题",slug:"📖一、前端基础题",normalizedTitle:"📖一、前端基础题",charIndex:35},{level:2,title:"📀二、React 框架应用",slug:"📀二、react-框架应用",normalizedTitle:"📀二、react 框架应用",charIndex:3391},{level:3,title:"一、什么是Hooks?",slug:"一、什么是hooks",normalizedTitle:"一、什么是hooks?",charIndex:3410},{level:3,title:"二、使用场景",slug:"二、使用场景",normalizedTitle:"二、使用场景",charIndex:3501},{level:3,title:"三、前端生命周期概述",slug:"三、前端生命周期概述",normalizedTitle:"三、前端生命周期概述",charIndex:3764},{level:2,title:"🥧三、React 应用实践",slug:"🥧三、react-应用实践",normalizedTitle:"🥧三、react 应用实践",charIndex:5418},{level:3,title:"典型项目结构",slug:"典型项目结构",normalizedTitle:"典型项目结构",charIndex:5437},{level:4,title:"实战一",slug:"实战一",normalizedTitle:"实战一",charIndex:6446},{level:4,title:"实战二",slug:"实战二",normalizedTitle:"实战二",charIndex:9450},{level:2,title:"Redux 术语",slug:"redux-术语",normalizedTitle:"redux 术语",charIndex:9824},{level:3,title:"Action (动作)",slug:"action-动作",normalizedTitle:"action (动作)",charIndex:9837},{level:3,title:"Reducer (缩减器)",slug:"reducer-缩减器",normalizedTitle:"reducer (缩减器)",charIndex:10033},{level:3,title:"Store (仓库)",slug:"store-仓库",normalizedTitle:"store (仓库)",charIndex:10194}],excerpt:'<h1 id="_06-前端开发笔试练习"><a class="header-anchor" href="#_06-前端开发笔试练习">#</a> 06.前端开发笔试练习</h1>\n<p>📖一次<strong>题目练习</strong>，前端的基础题</p>\n',lastUpdated:"2025/4/22 03:10:53",lastUpdatedTimestamp:1745262653e3,headersStr:"📖一、前端基础题 📀二、React 框架应用 一、什么是Hooks? 二、使用场景 三、前端生命周期概述 🥧三、React 应用实践 典型项目结构 实战一 实战二 Redux 术语 Action (动作) Reducer (缩减器) Store (仓库)",content:'# 06.前端开发笔试练习\n\n📖一次题目练习，前端的基础题\n\n\n# 📖一、前端基础题\n\n 1. Flexbox：如何使用Flexbox实现一个三栏布局，左右固定宽度100px，中间自适应？\n    \n    Flexible Box是“有弹性的盒子”，CSS布局工具有floats和positioning，后来出现了flex，任何一个容器都可以指定为Flex布局\n    \n    当为容器设置display:flex，便创建了flex容器，容器内的直系子元素，将变成flex元素。\n    \n    .box{\n      display: flex;\n    }\n    \n    \n    1\n    2\n    3\n    \n    \n    行内元素也可以使用 Flex 布局。\n    \n    .box{\n      display: inline-flex;\n    }\n    \n    \n    1\n    2\n    3\n    \n    \n    设置为Flex 布局以后，子元素的float、clear和vertical-align属性将失效\n    \n    回顾一下html的基础结构\n    \n    <!DOCTYPE html>\n     \n    <html lang="zh-CN">\n     \n    <head>\n     \n        <meta charset="utf-8">\n     \n        <title>三栏布局with Flexbox</title>\n        <style>\n            body{\n                margin: 0; /* 外边距为0 */\n            }\n            .container {\n                display:flex;/* 设定容器为flexbox */\n            }\n            .left-column{\n                width:100px;/* 左宽度 */\n                background-color: #f0f0f0;/* 增加颜色提高视觉效果 */\n            }\n            .right-column{\n                width:100px;/* 右宽度 */\n                background-color: #f0f0f0;\n            }\n            .center-column{\n                flex-grow: 1; /* 自动填满，自适应 */\n                background-color: #e0e0e0;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>示例文档</h1>\n        <div class="container">\n            <div class="left-column">Left Column</div>\n            <div class="center-column">Center Column</div>\n            <div class="right-column">Right Column</div>\n        </div>\n    </body>\n    </html>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    \n\n 2. 防抖和节流：请解释防抖和节流的区别，并用JavaScript实现一个防抖函数。\n    \n    防抖是指在事件被触发后，等待一段时间，如果这段时间里没有再次触发此事件，则执行一次该事件处理，若有再次触发的情况，则按最后一次的触发时间开始计时\n    \n    节流是让函数按照固定的时间间隔执行函数，不论事件触发频率如何，都不影响函数的按时执行。\n    \n    节流和防抖的区别在于，防抖是在最后一次触发事件后等待一段时间执行函数，节流是在一定时间内只执行一次\n    \n    function debounce(func, wait) {\n      let timeout;\n      \n      return function() {\n        clearTimeout(timeout);//清除之前的定时器\n        timeout = setTimeout(() =>{\n          func.apply(this, arguments);//在延迟后执行目标函数\n        },wait);\n      };\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    \n\n 3. 数组遍历：给定一个字符串数组，如何找出出现频率最高的单词？\n    \n    const findMostWord = sentence => {\n        if(!sentence) return; //若为空 返回\n        const article = sentence.trim().toLowerCase(); //去掉空格+转化为小写\n        const list = article.match(/[a-zA-Z]+/g);\n        const map = {};\n        const result = { maxCount: 0,words: []};//初始化记录结果\n        list.forEach(word => {\n            let count = 1;\n            if(Object.hasOwn(map,word)){\n                count += map[word];\n            }\n            map[word] = count;\n            if(count > result.maxCount){\n                result.maxCount = count;\n                result.words = [word];\n            } else if (count === result.maxCount) {\n                result.words.push(word);;\n            }\n        });\n        return result;\n    };\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    \n    \n    .match 找到所有字符 forEach 列出数组的每个元素\n\n 4. 防抖和节流：请解释防抖和节流的区别，并用JavaScript实现一个防抖函数。\n\n\n# 📀二、React 框架应用\n\n\n# 一、什么是Hooks?\n\nHook翻译过来是钩子的意思，其本质上是一组可复用的函数。\n\n简单理解：能够在不同的组件中，实现相同的代码逻辑，以达到代码复用、提高维护性的效果。\n\n\n# 二、使用场景\n\n逻辑复用：当多个组件需要共享相同的逻辑时，可以将这些逻辑封装成一个Hook，然后在需要的组件中导入并使用。可以避免代码重复，提高代码的复用性。\n\n逻辑拆分：对于复杂的组件，可以使用Hooks将组件的逻辑拆分成多个独立的函数，每个函数负责处理一部分逻辑。可以使组件的代码更加清晰、易于维护。\n\n副作用管理：Hooks中的函数可以访问组件的响应式数据，并且可以在组件的生命周期中执行副作用操作（如定时器、事件监听等）。通过使用Hooks，可以更好地管理这些副作用操作，确保它们在组件卸载时得到正确的清理。\n\n\n# 三、前端生命周期概述\n\n前端生命周期可以分为以下几个主要阶段：\n\n加载（Loading）：浏览器加载 HTML、CSS 和 JavaScript 文件。\n\n解析（Parsing）：浏览器解析 HTML 和 CSS，构建 DOM 和 CSSOM。\n\n渲染（Rendering）：浏览器将 DOM 和 CSSOM 结合，生成渲染树并绘制页面。\n\n交互（Interactivity）：用户与页面交互，JavaScript 执行。\n\n销毁（Unloading）：页面被卸载或销毁。\n\nreact中的class组件是拥有生命周期的。 生命周期分为：mounting，updating，unmounting三个阶段。\n\n 1. **useEffect/**生命周期：useEffect的作用是什么？如何模拟生命周期？\n    \n    useEffect是React中用于处理副作用的钩子(hock)。并且充当生命周期函数。副作用函数是在执行时会改变外部状态或者依赖外部可变状态的函数。react中的class组件的生命周期分为：mounting，updating，unmounting三个阶段。\n    \n    虽然useEffect不能完全替代所有生命周期方法，但它可以实现大部分常见的生命周期功能。\n    \n    使用useEffect模拟componentDidMount、componentDidUpdate、componentWillUnmount\n    \n     useEffect(() => {\n       // 这里的代码会在组件挂载后执行，类似于 componentDidMount\n       console.log(\'Component mounted or updated, count:\', count);\n     }, []); // 空数组作为依赖项，确保只在组件挂载时执行\n    \n    useEffect(() => {\n      // componentDidUpdate 逻辑\n    }, [variable1, variable2]);\n    \n    useEffect(() => {\n      // componentDidMount 逻辑\n    \n      return () => {\n        // componentWillUnmount 逻辑\n      };\n    }, []);\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 2. **组件状态/**属性：请解释 state 和 props 的区别，并举例说明它们的用途。\n    \n    state是React组件内部的数据存储，由组件本身管理，通常用于保存组建的可变数据，当state改变时，React会自动触发重新渲染。\n    \n    props是由父组件传递给子组件的数据，props是只读的，子组件不能修改他们。\n    \n    区别在于：state可变，由组件自身管理，组件内部代码可以自由修改state，并根据state变化来更新渲染，state是可变的。props是由父组件传递给子组件，子组件无法修改props，它只能接收并使用父组件传递的数据，props是只读的。\n    \n    State用于保存组件内部的动态数据，通常用于用户交互，例如创建一个计数器组件，用户点击按钮增加计数，就可以用state用于保存计数值，每次用户点击state就会更新，使得组件重新渲染\n    \n    Props用于展示数据或调用方法，假设有一个User组件，父组件通过props向子组件传递用户数据，例如用户名等等，子组件只负责接收并展示这些数据\n\n\n# 🥧三、React 应用实践\n\n\n# 典型项目结构\n\nmy-react-app/\n|-- public/\n|   |-- index.html            # 公共HTML文件\n|   |-- favicon.ico           # 网站图标\n|-- src/\n|   |-- index.js              # 入口文件\n|   |-- App.js                # 主组件\n|   |-- App.css               # 主组件的样式\n|   |-- index.css             # 全局样式\n|   |-- components/           # 存放所有组件\n|   |   |-- Button/\n|   |   |   |-- Button.js\n|   |   |   |-- Button.css\n|   |   |-- Header/\n|   |   |   |-- Header.js\n|   |   |   |-- Header.css\n|   |-- containers/           # 存放容器组件（通常与Redux或其他状态管理库结合使用）\n|   |-- actions/              # 存放action创建函数（与Redux结合使用）\n|   |-- reducers/             # 存放reducer函数（与Redux结合使用）\n|   |-- store/                # 存放store配置（与Redux结合使用）\n|   |-- styles/               # 存放全局样式或可复用的样式组件\n|   |-- utils/                # 存放工具函数或帮助函数\n|   |-- api/                  # 存放API调用相关的函数\n|-- .gitignore              # Git忽略文件配置\n|-- package.json            # 项目配置文件\n|-- README.md               # 项目说明文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# 实战一\n\n 1. **应用实践：**请使用素材中 react-timer-app 项目，实现一个计时器，具备以下功能和要求：\n\n功能：\n\n\\1. 开始计时：点击按钮后，计时器开始运行。\n\n\\2. 停止计时：点击按钮后，计时器停止运行。\n\n\\3. 实时更新：计时器每隔 1 秒更新一次显示的时间。\n\n要求：\n\n\\1. 功能逻辑完整，确保开始、停止和更新时间的功能正常运行。\n\n\\2. 完成开发后，录制一段计时器运行的演示视频，要求运行效果清晰。\n\nJavaScript setTimeout() 用法\n\nsetTimeout() 是属于 window 的方法，该方法用于在指定的毫秒数后调用函数或计算表达式。\n\n语法格式可以是以下两种：\n\n> setTimeout(要执行的代码, 等待的毫秒数) setTimeout(JavaScript 函数, 等待的毫秒数)\n\n示例一\n\nsetTimeout("alert(\'对不起, 要你久候\')", 3000 )\n\n\n1\n\n\n示例二\n\n<p id="content"> 请等三秒钟!</p>  \n<script>  \nsetTimeout("changeState()",3000 );  \nfunction changeState(){  \n    let content=document.getElementById(\'content\');  \n    content.innerHTML="<div style=\'color:red\'>我是三秒后显示的内容！</div>";  \n}  \n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// 开始计时\nconst startTimer = () => {\n    setIsActive(true);\n};\n\n\n1\n2\n3\n4\n\n\nconst App = () => {}：这是一个箭头函数（arrow function）定义。\n\nsetInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式\n\n在 React 的 useState 中，更新状态时可以传入一个函数，而不是直接传入一个值。这种方式称为 函数式更新。\n\n * 函数式更新的语法：\n   \n   JavaScript\n   \n   复制\n   \n   setState((prevState) => newState);\n   \n   \n   1\n   \n   * setState 是由 useState 返回的更新函数。\n   * prevState 是当前状态的值。\n   * newState 是基于 prevState 计算出的新状态值。\n\nimport React, { useState , useEffect } from "react";\nimport "./index.css";\n\nfunction App() {\n    const [time, setTime] = useState(0); // 初始化值为0\n    const [isActive, setIsActive] = useState(false); // 控制计时器是否在运行\n\n    // 开始计时\n    const startTimer = () => {\n        setIsActive(true);\n    };\n\n    // 停止计时\n    const stopTimer = () => {\n        setIsActive(false);\n    };\n\n    // 重置计时器\n    const resetTimer = () => {\n        setIsActive(false);\n        setTime(0);\n    };\n\n    // 使用 useEffect 来处理计时逻辑\n    useEffect(() => {\n        let interval = null;\n\n        if (isActive) {\n            interval = setInterval(() => {\n                setTime((prevTime) => prevTime + 1); //传入一个方法 每秒增加1秒\n            }, 1000);\n        } else if (!isActive && time !== 0) {\n            clearInterval(interval); // 停止计时时，清除定时器\n        }\n\n        // 清理函数，清楚定时器和时间\n        return () => clearInterval(interval);\n    }, [isActive, time]);\n\n    return (\n        <div className="App">\n            <h3>实现一个计时器，具备以下功能和要求：</h3>\n            <h4>功能：</h4>\n            <p>1. 开始计时：点击按钮后，计时器开始运行。</p>\n            <p>2. 停止计时：点击按钮后，计时器停止运行。</p>\n            <p>3. 实时更新：计时器每隔 1 秒更新一次显示的时间。</p>\n\n            <h4>要求：</h4>\n            <p>1. 功能逻辑完整，确保开始、停止和更新时间的功能正常运行。</p>\n            <p>\n                2.\n                完成开发后，录制一段计时器运行的演示视频，要求清晰展示计时器的运行效果。\n            </p>\n\n            <h4>实现：</h4>\n            <div className="timer">\n                <button onClick={startTimer}>开始计时</button>\n                <button onClick={stopTimer}>结束计时</button>\n            </div>\n            <div>\n                计时：<span className="primary">{time}</span> 秒\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n# 实战二\n\n\n\nRedux最早运用于React框架中，是一个全局状态管理器，使用叫做“action”的事件来管理和更新应用状态的模式和工具库。它以集中式Store（centralized store）的方式对整个应用中使用的状态进行集中管理，其规则确保状态只能以可预测的方式更新。\n\n为什么要用 Redux？\n\nRedux 提供的模式和工具使您更容易理解应用程序中的状态何时、何地、为什么以及如何更新，以及当这些更改发生时您的应用程序逻辑将如何表现. Redux 指导您编写可预测和可测试的代码，这有助于让您确信您的应用程序将按预期工作。\n\nRedux 在以下情况下更有用：\n\n * 在应用的大量地方，都存在大量的状态\n * 应用状态会随着时间的推移而频繁更新\n * 更新该状态的逻辑可能很复杂\n * 中型和大型代码量的应用，很多人协同开发\n\n\n# Redux 术语\n\n\n# Action (动作)\n\naction是一个具有 type 字段的普通 JavaScript 对象。你可以将 action 视为描述应用程序中发生了什么的事件.\n\n一个典型的 action 对象可能如下所示：\n\nconst addTodoAction = {\n  type: \'todos/todoAdded\',\n  payload: \'Buy milk\'\n}\n\n\n1\n2\n3\n4\n\n\n\n# Reducer (缩减器)\n\nreducer 是一个函数，接收当前的 state 和一个 action 对象，必要时决定如何更新状态，并返回新状态。函数签名是：(state, action) => newState。你可以将 reducer 视为一个事件监听器，它根据接收到的 action（事件）类型处理事件。\n\n\n# Store (仓库)\n\n当前 Redux 应用的状态存在于一个名为 store 的对象中。\n\nstore 是通过传入一个 reducer 来创建的，并且有一个名为 getState 的方法，它返回当前状态值：\n\n题目练习\n\n首先我修改了reducers里的\n\nswitch (action.type) {//data改为type，action结构type是必选的，还有error payload meta\n\n\n1\n\n\naction的属性type是必须的，且没有data\n\n然后需要实现一个状态的count原有的state.count\n\n修改了\n\n….\n\ncount: state.count + action.count //action改为state.count + action.count\n\n….\n\n//完整redux\n \n const init_state = {\n    count: 0\n }\n function reducers(state = init_state, action) {\n    switch (action.type) {//data改为type，action结构type是必选的，还有error payload meta\n    case \'count\'://这个count请不要更改\n       return {\n        ...state,\n        count: state.count + action.count //action改为state.count + action.count\n       };\n    default:\n       return state;\n    }\n }\n\n export default reducers\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n然后就是找到每个按钮所在的组件，使用\n\nconst handleAddNum = () => {\n   dispatch({type: \'count\',count: 1});\n   console.log(state);\n };\n\n\n1\n2\n3\n4\n\n\n分别是+1 +2 +3\n\n然后让total自动随着state的值更新\n\nconst total = useSelector(state => state.count);\n\n\n1\n\n\n文字写于：广东',normalizedContent:'# 06.前端开发笔试练习\n\n📖一次题目练习，前端的基础题\n\n\n# 📖一、前端基础题\n\n 1. flexbox：如何使用flexbox实现一个三栏布局，左右固定宽度100px，中间自适应？\n    \n    flexible box是“有弹性的盒子”，css布局工具有floats和positioning，后来出现了flex，任何一个容器都可以指定为flex布局\n    \n    当为容器设置display:flex，便创建了flex容器，容器内的直系子元素，将变成flex元素。\n    \n    .box{\n      display: flex;\n    }\n    \n    \n    1\n    2\n    3\n    \n    \n    行内元素也可以使用 flex 布局。\n    \n    .box{\n      display: inline-flex;\n    }\n    \n    \n    1\n    2\n    3\n    \n    \n    设置为flex 布局以后，子元素的float、clear和vertical-align属性将失效\n    \n    回顾一下html的基础结构\n    \n    <!doctype html>\n     \n    <html lang="zh-cn">\n     \n    <head>\n     \n        <meta charset="utf-8">\n     \n        <title>三栏布局with flexbox</title>\n        <style>\n            body{\n                margin: 0; /* 外边距为0 */\n            }\n            .container {\n                display:flex;/* 设定容器为flexbox */\n            }\n            .left-column{\n                width:100px;/* 左宽度 */\n                background-color: #f0f0f0;/* 增加颜色提高视觉效果 */\n            }\n            .right-column{\n                width:100px;/* 右宽度 */\n                background-color: #f0f0f0;\n            }\n            .center-column{\n                flex-grow: 1; /* 自动填满，自适应 */\n                background-color: #e0e0e0;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>示例文档</h1>\n        <div class="container">\n            <div class="left-column">left column</div>\n            <div class="center-column">center column</div>\n            <div class="right-column">right column</div>\n        </div>\n    </body>\n    </html>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    \n\n 2. 防抖和节流：请解释防抖和节流的区别，并用javascript实现一个防抖函数。\n    \n    防抖是指在事件被触发后，等待一段时间，如果这段时间里没有再次触发此事件，则执行一次该事件处理，若有再次触发的情况，则按最后一次的触发时间开始计时\n    \n    节流是让函数按照固定的时间间隔执行函数，不论事件触发频率如何，都不影响函数的按时执行。\n    \n    节流和防抖的区别在于，防抖是在最后一次触发事件后等待一段时间执行函数，节流是在一定时间内只执行一次\n    \n    function debounce(func, wait) {\n      let timeout;\n      \n      return function() {\n        cleartimeout(timeout);//清除之前的定时器\n        timeout = settimeout(() =>{\n          func.apply(this, arguments);//在延迟后执行目标函数\n        },wait);\n      };\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    \n\n 3. 数组遍历：给定一个字符串数组，如何找出出现频率最高的单词？\n    \n    const findmostword = sentence => {\n        if(!sentence) return; //若为空 返回\n        const article = sentence.trim().tolowercase(); //去掉空格+转化为小写\n        const list = article.match(/[a-za-z]+/g);\n        const map = {};\n        const result = { maxcount: 0,words: []};//初始化记录结果\n        list.foreach(word => {\n            let count = 1;\n            if(object.hasown(map,word)){\n                count += map[word];\n            }\n            map[word] = count;\n            if(count > result.maxcount){\n                result.maxcount = count;\n                result.words = [word];\n            } else if (count === result.maxcount) {\n                result.words.push(word);;\n            }\n        });\n        return result;\n    };\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    \n    \n    .match 找到所有字符 foreach 列出数组的每个元素\n\n 4. 防抖和节流：请解释防抖和节流的区别，并用javascript实现一个防抖函数。\n\n\n# 📀二、react 框架应用\n\n\n# 一、什么是hooks?\n\nhook翻译过来是钩子的意思，其本质上是一组可复用的函数。\n\n简单理解：能够在不同的组件中，实现相同的代码逻辑，以达到代码复用、提高维护性的效果。\n\n\n# 二、使用场景\n\n逻辑复用：当多个组件需要共享相同的逻辑时，可以将这些逻辑封装成一个hook，然后在需要的组件中导入并使用。可以避免代码重复，提高代码的复用性。\n\n逻辑拆分：对于复杂的组件，可以使用hooks将组件的逻辑拆分成多个独立的函数，每个函数负责处理一部分逻辑。可以使组件的代码更加清晰、易于维护。\n\n副作用管理：hooks中的函数可以访问组件的响应式数据，并且可以在组件的生命周期中执行副作用操作（如定时器、事件监听等）。通过使用hooks，可以更好地管理这些副作用操作，确保它们在组件卸载时得到正确的清理。\n\n\n# 三、前端生命周期概述\n\n前端生命周期可以分为以下几个主要阶段：\n\n加载（loading）：浏览器加载 html、css 和 javascript 文件。\n\n解析（parsing）：浏览器解析 html 和 css，构建 dom 和 cssom。\n\n渲染（rendering）：浏览器将 dom 和 cssom 结合，生成渲染树并绘制页面。\n\n交互（interactivity）：用户与页面交互，javascript 执行。\n\n销毁（unloading）：页面被卸载或销毁。\n\nreact中的class组件是拥有生命周期的。 生命周期分为：mounting，updating，unmounting三个阶段。\n\n 1. **useeffect/**生命周期：useeffect的作用是什么？如何模拟生命周期？\n    \n    useeffect是react中用于处理副作用的钩子(hock)。并且充当生命周期函数。副作用函数是在执行时会改变外部状态或者依赖外部可变状态的函数。react中的class组件的生命周期分为：mounting，updating，unmounting三个阶段。\n    \n    虽然useeffect不能完全替代所有生命周期方法，但它可以实现大部分常见的生命周期功能。\n    \n    使用useeffect模拟componentdidmount、componentdidupdate、componentwillunmount\n    \n     useeffect(() => {\n       // 这里的代码会在组件挂载后执行，类似于 componentdidmount\n       console.log(\'component mounted or updated, count:\', count);\n     }, []); // 空数组作为依赖项，确保只在组件挂载时执行\n    \n    useeffect(() => {\n      // componentdidupdate 逻辑\n    }, [variable1, variable2]);\n    \n    useeffect(() => {\n      // componentdidmount 逻辑\n    \n      return () => {\n        // componentwillunmount 逻辑\n      };\n    }, []);\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 2. **组件状态/**属性：请解释 state 和 props 的区别，并举例说明它们的用途。\n    \n    state是react组件内部的数据存储，由组件本身管理，通常用于保存组建的可变数据，当state改变时，react会自动触发重新渲染。\n    \n    props是由父组件传递给子组件的数据，props是只读的，子组件不能修改他们。\n    \n    区别在于：state可变，由组件自身管理，组件内部代码可以自由修改state，并根据state变化来更新渲染，state是可变的。props是由父组件传递给子组件，子组件无法修改props，它只能接收并使用父组件传递的数据，props是只读的。\n    \n    state用于保存组件内部的动态数据，通常用于用户交互，例如创建一个计数器组件，用户点击按钮增加计数，就可以用state用于保存计数值，每次用户点击state就会更新，使得组件重新渲染\n    \n    props用于展示数据或调用方法，假设有一个user组件，父组件通过props向子组件传递用户数据，例如用户名等等，子组件只负责接收并展示这些数据\n\n\n# 🥧三、react 应用实践\n\n\n# 典型项目结构\n\nmy-react-app/\n|-- public/\n|   |-- index.html            # 公共html文件\n|   |-- favicon.ico           # 网站图标\n|-- src/\n|   |-- index.js              # 入口文件\n|   |-- app.js                # 主组件\n|   |-- app.css               # 主组件的样式\n|   |-- index.css             # 全局样式\n|   |-- components/           # 存放所有组件\n|   |   |-- button/\n|   |   |   |-- button.js\n|   |   |   |-- button.css\n|   |   |-- header/\n|   |   |   |-- header.js\n|   |   |   |-- header.css\n|   |-- containers/           # 存放容器组件（通常与redux或其他状态管理库结合使用）\n|   |-- actions/              # 存放action创建函数（与redux结合使用）\n|   |-- reducers/             # 存放reducer函数（与redux结合使用）\n|   |-- store/                # 存放store配置（与redux结合使用）\n|   |-- styles/               # 存放全局样式或可复用的样式组件\n|   |-- utils/                # 存放工具函数或帮助函数\n|   |-- api/                  # 存放api调用相关的函数\n|-- .gitignore              # git忽略文件配置\n|-- package.json            # 项目配置文件\n|-- readme.md               # 项目说明文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n# 实战一\n\n 1. **应用实践：**请使用素材中 react-timer-app 项目，实现一个计时器，具备以下功能和要求：\n\n功能：\n\n\\1. 开始计时：点击按钮后，计时器开始运行。\n\n\\2. 停止计时：点击按钮后，计时器停止运行。\n\n\\3. 实时更新：计时器每隔 1 秒更新一次显示的时间。\n\n要求：\n\n\\1. 功能逻辑完整，确保开始、停止和更新时间的功能正常运行。\n\n\\2. 完成开发后，录制一段计时器运行的演示视频，要求运行效果清晰。\n\njavascript settimeout() 用法\n\nsettimeout() 是属于 window 的方法，该方法用于在指定的毫秒数后调用函数或计算表达式。\n\n语法格式可以是以下两种：\n\n> settimeout(要执行的代码, 等待的毫秒数) settimeout(javascript 函数, 等待的毫秒数)\n\n示例一\n\nsettimeout("alert(\'对不起, 要你久候\')", 3000 )\n\n\n1\n\n\n示例二\n\n<p id="content"> 请等三秒钟!</p>  \n<script>  \nsettimeout("changestate()",3000 );  \nfunction changestate(){  \n    let content=document.getelementbyid(\'content\');  \n    content.innerhtml="<div style=\'color:red\'>我是三秒后显示的内容！</div>";  \n}  \n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// 开始计时\nconst starttimer = () => {\n    setisactive(true);\n};\n\n\n1\n2\n3\n4\n\n\nconst app = () => {}：这是一个箭头函数（arrow function）定义。\n\nsetinterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式\n\n在 react 的 usestate 中，更新状态时可以传入一个函数，而不是直接传入一个值。这种方式称为 函数式更新。\n\n * 函数式更新的语法：\n   \n   javascript\n   \n   复制\n   \n   setstate((prevstate) => newstate);\n   \n   \n   1\n   \n   * setstate 是由 usestate 返回的更新函数。\n   * prevstate 是当前状态的值。\n   * newstate 是基于 prevstate 计算出的新状态值。\n\nimport react, { usestate , useeffect } from "react";\nimport "./index.css";\n\nfunction app() {\n    const [time, settime] = usestate(0); // 初始化值为0\n    const [isactive, setisactive] = usestate(false); // 控制计时器是否在运行\n\n    // 开始计时\n    const starttimer = () => {\n        setisactive(true);\n    };\n\n    // 停止计时\n    const stoptimer = () => {\n        setisactive(false);\n    };\n\n    // 重置计时器\n    const resettimer = () => {\n        setisactive(false);\n        settime(0);\n    };\n\n    // 使用 useeffect 来处理计时逻辑\n    useeffect(() => {\n        let interval = null;\n\n        if (isactive) {\n            interval = setinterval(() => {\n                settime((prevtime) => prevtime + 1); //传入一个方法 每秒增加1秒\n            }, 1000);\n        } else if (!isactive && time !== 0) {\n            clearinterval(interval); // 停止计时时，清除定时器\n        }\n\n        // 清理函数，清楚定时器和时间\n        return () => clearinterval(interval);\n    }, [isactive, time]);\n\n    return (\n        <div classname="app">\n            <h3>实现一个计时器，具备以下功能和要求：</h3>\n            <h4>功能：</h4>\n            <p>1. 开始计时：点击按钮后，计时器开始运行。</p>\n            <p>2. 停止计时：点击按钮后，计时器停止运行。</p>\n            <p>3. 实时更新：计时器每隔 1 秒更新一次显示的时间。</p>\n\n            <h4>要求：</h4>\n            <p>1. 功能逻辑完整，确保开始、停止和更新时间的功能正常运行。</p>\n            <p>\n                2.\n                完成开发后，录制一段计时器运行的演示视频，要求清晰展示计时器的运行效果。\n            </p>\n\n            <h4>实现：</h4>\n            <div classname="timer">\n                <button onclick={starttimer}>开始计时</button>\n                <button onclick={stoptimer}>结束计时</button>\n            </div>\n            <div>\n                计时：<span classname="primary">{time}</span> 秒\n            </div>\n        </div>\n    );\n}\n\n\nexport default app;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n# 实战二\n\n\n\nredux最早运用于react框架中，是一个全局状态管理器，使用叫做“action”的事件来管理和更新应用状态的模式和工具库。它以集中式store（centralized store）的方式对整个应用中使用的状态进行集中管理，其规则确保状态只能以可预测的方式更新。\n\n为什么要用 redux？\n\nredux 提供的模式和工具使您更容易理解应用程序中的状态何时、何地、为什么以及如何更新，以及当这些更改发生时您的应用程序逻辑将如何表现. redux 指导您编写可预测和可测试的代码，这有助于让您确信您的应用程序将按预期工作。\n\nredux 在以下情况下更有用：\n\n * 在应用的大量地方，都存在大量的状态\n * 应用状态会随着时间的推移而频繁更新\n * 更新该状态的逻辑可能很复杂\n * 中型和大型代码量的应用，很多人协同开发\n\n\n# redux 术语\n\n\n# action (动作)\n\naction是一个具有 type 字段的普通 javascript 对象。你可以将 action 视为描述应用程序中发生了什么的事件.\n\n一个典型的 action 对象可能如下所示：\n\nconst addtodoaction = {\n  type: \'todos/todoadded\',\n  payload: \'buy milk\'\n}\n\n\n1\n2\n3\n4\n\n\n\n# reducer (缩减器)\n\nreducer 是一个函数，接收当前的 state 和一个 action 对象，必要时决定如何更新状态，并返回新状态。函数签名是：(state, action) => newstate。你可以将 reducer 视为一个事件监听器，它根据接收到的 action（事件）类型处理事件。\n\n\n# store (仓库)\n\n当前 redux 应用的状态存在于一个名为 store 的对象中。\n\nstore 是通过传入一个 reducer 来创建的，并且有一个名为 getstate 的方法，它返回当前状态值：\n\n题目练习\n\n首先我修改了reducers里的\n\nswitch (action.type) {//data改为type，action结构type是必选的，还有error payload meta\n\n\n1\n\n\naction的属性type是必须的，且没有data\n\n然后需要实现一个状态的count原有的state.count\n\n修改了\n\n….\n\ncount: state.count + action.count //action改为state.count + action.count\n\n….\n\n//完整redux\n \n const init_state = {\n    count: 0\n }\n function reducers(state = init_state, action) {\n    switch (action.type) {//data改为type，action结构type是必选的，还有error payload meta\n    case \'count\'://这个count请不要更改\n       return {\n        ...state,\n        count: state.count + action.count //action改为state.count + action.count\n       };\n    default:\n       return state;\n    }\n }\n\n export default reducers\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n然后就是找到每个按钮所在的组件，使用\n\nconst handleaddnum = () => {\n   dispatch({type: \'count\',count: 1});\n   console.log(state);\n };\n\n\n1\n2\n3\n4\n\n\n分别是+1 +2 +3\n\n然后让total自动随着state的值更新\n\nconst total = useselector(state => state.count);\n\n\n1\n\n\n文字写于：广东',charsets:{cjk:!0}},{title:"随机游走",frontmatter:{title:"随机游走",date:"2025-03-20T21:06:10.000Z",permalink:"/science/1157cf/",categories:["科学","网络科学"],tags:["随机游走","网络科学"],readingShow:"top"},regularPath:"/07.%E7%A7%91%E5%AD%A6/01.%E7%BD%91%E7%BB%9C%E7%A7%91%E5%AD%A6/01.%E9%9A%8F%E6%9C%BA%E6%B8%B8%E8%B5%B0.html",relativePath:"07.科学/01.网络科学/01.随机游走.md",key:"v-ec9ecf1c",path:"/science/1157cf/",headers:[{level:3,title:"定义",slug:"定义",normalizedTitle:"定义",charIndex:48},{level:3,title:"性质",slug:"性质",normalizedTitle:"性质",charIndex:204},{level:3,title:"应用领域",slug:"应用领域",normalizedTitle:"应用领域",charIndex:472},{level:3,title:"项目背景",slug:"项目背景",normalizedTitle:"项目背景",charIndex:1058},{level:3,title:"实现步骤",slug:"实现步骤",normalizedTitle:"实现步骤",charIndex:1144},{level:3,title:"代码示例（Python）",slug:"代码示例-python",normalizedTitle:"代码示例（python）",charIndex:1508}],excerpt:"<p>新建了科学目录，收录论文的阅读和科学写作，今天要写的是<strong>随机游走</strong></p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:"定义 性质 应用领域 项目背景 实现步骤 代码示例（Python）",content:"新建了科学目录，收录论文的阅读和科学写作，今天要写的是随机游走\n\n\n# 01.随机游走\n\n\n# 定义\n\n随机游走（Random Walk）是一种数学统计模型。它描述了一个在某种空间（如一维直线、二维平面或更高维空间）中随机移动的过程。在每次移动中，移动的方向和距离都是随机决定的。例如，在一维随机游走中，一个粒子在数轴上每次可以向左或向右移动一个单位，向左或向右的概率通常是相等的（假设为1/2）。\n\n\n# 性质\n\n * 无记忆性：随机游走的下一步移动只依赖于当前位置，而与之前走过的路径无关。这体现了马尔可夫性质，即未来的状态仅与当前状态有关，而与过去状态无关。\n * 扩散性：随着时间的推移，随机游走的粒子会扩散到更广阔的空间区域。在一维随机游走中，粒子的平均位移的平方与时间成正比，即\n\nx2∝t\n\n其中x是粒子的位移，t是时间。\n\n * 遍历性：在无限的时间内，随机游走的粒子会以概率1遍历空间中的每一个点（对于一些简单规则的格点空间）。不过，这并不意味着粒子会均匀地访问每个点，有些点可能被频繁访问，而有些点可能很少被访问。\n\n\n# 应用领域\n\n * 金融领域：股票价格的变化可以看作是一种随机游走。虽然股票价格受到众多因素（如公司业绩、宏观经济环境等）的影响，但从短期来看，其价格波动在一定程度上具有随机性。有效市场假说认为，在理想情况下，股票价格的变动是随机游走的，因为所有可用信息都已经反映在当前价格中，新的价格变动只能由新的随机信息引起。\n   \n   \n\n * 物理学领域：布朗运动是随机游走的一个经典物理模型。微观粒子（如悬浮在液体中的花粉颗粒）在液体分子的碰撞下，会进行无规则的运动。这种运动可以用随机游走来描述，帮助人们理解物质的扩散、热传导等物理现象。\n\n\n * 计算机科学领域：在网页排序算法（如Google的PageRank算法）中，随机游走的思想被用来模拟网页之间的链接关系。一个“随机游走者”在网页之间随机点击链接，网页被点击的频率越高，其重要性就越高。此外，在网络爬虫中，也可以利用随机游走策略来探索网络中的网页。\n\n> 假设互联网由A、B、C三个节点组成，其互相链接的关系由图中的有向边表示。节点A只有一个出链指向B，B只有一个指向到C，而C有两个指向，到A和到B，转向任意一个节点的概率都为1/2\n> \n> 假设在时刻1，用户浏览页面A，之后经由链接进入页面B，然后进入页面C，此时面临两种可能选择，跳转进入页面A 或者页面B 皆可，两者概率相同，都为1/2。\n\n\n\n\n# 项目背景\n\n这个项目旨在通过计算机模拟一维随机游走过程，帮助理解随机游走的基本特性和规律。在一维随机游走中，粒子在数轴上移动，每次随机选择向左或向右移动一个单位。\n\n\n# 实现步骤\n\n 1. 初始化参数\n    * 设定初始位置为x=0。\n    * 设定步数N，例如100步。\n    * 设定向左或向右移动的概率，这里假设都是p=0.5。\n 2. 模拟过程\n    * 使用随机数生成器来决定每次移动的方向。例如，在Python中可以使用random.choice([-1, 1])来随机选择-1（向下）或1（向上）。\n    * 对于每一步，将当前的位置与随机选择的移动方向相加，得到新的位置。\n    * 记录每一步的位置。\n 3. 结果分析\n    * 绘制粒子位置随步数变化的图像。可以看到粒子位置在数轴上随机波动。\n    * 计算粒子在不同步数下的平均位置和方差。理论上，平均位置应该接近0（因为向左和向右的概率相等），而方差会随着步数的增加而增大，符合 x2∝t 的规律。\n\n\n# 代码示例（Python）\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\n\n# 设置字体（解决中文和数学符号问题）\nplt.rcParams['font.sans-serif'] = ['Microsoft YaHei']  # 使用支持数学符号的字体\nplt.rcParams['axes.unicode_minus'] = False\n\n# 参数设置\nn_steps = 1000\nn_paths = 100\nstep_var = 1\n\n# 生成随机游走路径\nsteps = np.random.normal(0, np.sqrt(step_var), (n_paths, n_steps))\npaths = np.cumsum(steps, axis=1)\n\n# 计算方差\ntime = np.arange(1, n_steps + 1)\nvariance = np.var(paths, axis=0)\n\n# 绘图\nplt.figure(figsize=(12, 8))\n\n# 子图1：路径示例\nplt.subplot(2, 1, 1)\nfor i in range(min(10, n_paths)):\n    plt.plot(time, paths[i], lw=1, alpha=0.6)\nplt.title('随机游走路径示例 (10条)')\nplt.xlabel('时间 t')\nplt.ylabel('位置 X_t')\n\n# 子图2：方差与时间关系（用σ^2代替σ²）\nplt.subplot(2, 1, 2)\nplt.plot(time, variance, label='模拟方差')\nplt.plot(time, time * step_var, 'r--', label='理论方差 (σ^2 t)')  # 修改这里\nplt.title('随机游走的方差与时间关系')\nplt.xlabel('时间 t')\nplt.ylabel('方差 Var(X_t)')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n\n可以直观地观察到一维随机游走的轨迹。从图像中可以看到粒子位置的随机波动，同时通过对多次模拟结果的统计分析，可以验证随机游走的数学性质，如平均位置和方差的变化规律。\n\n随机游走的平均位置是0，并不意味着粒子在每一步都必须回到0位置。粒子的位置会随机波动，但随着时间的推移，这些波动的平均值会趋近于0。这种波动的幅度可以用方差来描述，方差随时间增加而增大，具体来说，方差与时间成正比\n\n这种模拟方法也可以扩展到更高维度的随机游走研究，为理解复杂随机过程提供基础。\n\n文字写于：广东",normalizedContent:"新建了科学目录，收录论文的阅读和科学写作，今天要写的是随机游走\n\n\n# 01.随机游走\n\n\n# 定义\n\n随机游走（random walk）是一种数学统计模型。它描述了一个在某种空间（如一维直线、二维平面或更高维空间）中随机移动的过程。在每次移动中，移动的方向和距离都是随机决定的。例如，在一维随机游走中，一个粒子在数轴上每次可以向左或向右移动一个单位，向左或向右的概率通常是相等的（假设为1/2）。\n\n\n# 性质\n\n * 无记忆性：随机游走的下一步移动只依赖于当前位置，而与之前走过的路径无关。这体现了马尔可夫性质，即未来的状态仅与当前状态有关，而与过去状态无关。\n * 扩散性：随着时间的推移，随机游走的粒子会扩散到更广阔的空间区域。在一维随机游走中，粒子的平均位移的平方与时间成正比，即\n\nx2∝t\n\n其中x是粒子的位移，t是时间。\n\n * 遍历性：在无限的时间内，随机游走的粒子会以概率1遍历空间中的每一个点（对于一些简单规则的格点空间）。不过，这并不意味着粒子会均匀地访问每个点，有些点可能被频繁访问，而有些点可能很少被访问。\n\n\n# 应用领域\n\n * 金融领域：股票价格的变化可以看作是一种随机游走。虽然股票价格受到众多因素（如公司业绩、宏观经济环境等）的影响，但从短期来看，其价格波动在一定程度上具有随机性。有效市场假说认为，在理想情况下，股票价格的变动是随机游走的，因为所有可用信息都已经反映在当前价格中，新的价格变动只能由新的随机信息引起。\n   \n   \n\n * 物理学领域：布朗运动是随机游走的一个经典物理模型。微观粒子（如悬浮在液体中的花粉颗粒）在液体分子的碰撞下，会进行无规则的运动。这种运动可以用随机游走来描述，帮助人们理解物质的扩散、热传导等物理现象。\n\n\n * 计算机科学领域：在网页排序算法（如google的pagerank算法）中，随机游走的思想被用来模拟网页之间的链接关系。一个“随机游走者”在网页之间随机点击链接，网页被点击的频率越高，其重要性就越高。此外，在网络爬虫中，也可以利用随机游走策略来探索网络中的网页。\n\n> 假设互联网由a、b、c三个节点组成，其互相链接的关系由图中的有向边表示。节点a只有一个出链指向b，b只有一个指向到c，而c有两个指向，到a和到b，转向任意一个节点的概率都为1/2\n> \n> 假设在时刻1，用户浏览页面a，之后经由链接进入页面b，然后进入页面c，此时面临两种可能选择，跳转进入页面a 或者页面b 皆可，两者概率相同，都为1/2。\n\n\n\n\n# 项目背景\n\n这个项目旨在通过计算机模拟一维随机游走过程，帮助理解随机游走的基本特性和规律。在一维随机游走中，粒子在数轴上移动，每次随机选择向左或向右移动一个单位。\n\n\n# 实现步骤\n\n 1. 初始化参数\n    * 设定初始位置为x=0。\n    * 设定步数n，例如100步。\n    * 设定向左或向右移动的概率，这里假设都是p=0.5。\n 2. 模拟过程\n    * 使用随机数生成器来决定每次移动的方向。例如，在python中可以使用random.choice([-1, 1])来随机选择-1（向下）或1（向上）。\n    * 对于每一步，将当前的位置与随机选择的移动方向相加，得到新的位置。\n    * 记录每一步的位置。\n 3. 结果分析\n    * 绘制粒子位置随步数变化的图像。可以看到粒子位置在数轴上随机波动。\n    * 计算粒子在不同步数下的平均位置和方差。理论上，平均位置应该接近0（因为向左和向右的概率相等），而方差会随着步数的增加而增大，符合 x2∝t 的规律。\n\n\n# 代码示例（python）\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager as fm\n\n# 设置字体（解决中文和数学符号问题）\nplt.rcparams['font.sans-serif'] = ['microsoft yahei']  # 使用支持数学符号的字体\nplt.rcparams['axes.unicode_minus'] = false\n\n# 参数设置\nn_steps = 1000\nn_paths = 100\nstep_var = 1\n\n# 生成随机游走路径\nsteps = np.random.normal(0, np.sqrt(step_var), (n_paths, n_steps))\npaths = np.cumsum(steps, axis=1)\n\n# 计算方差\ntime = np.arange(1, n_steps + 1)\nvariance = np.var(paths, axis=0)\n\n# 绘图\nplt.figure(figsize=(12, 8))\n\n# 子图1：路径示例\nplt.subplot(2, 1, 1)\nfor i in range(min(10, n_paths)):\n    plt.plot(time, paths[i], lw=1, alpha=0.6)\nplt.title('随机游走路径示例 (10条)')\nplt.xlabel('时间 t')\nplt.ylabel('位置 x_t')\n\n# 子图2：方差与时间关系（用σ^2代替σ²）\nplt.subplot(2, 1, 2)\nplt.plot(time, variance, label='模拟方差')\nplt.plot(time, time * step_var, 'r--', label='理论方差 (σ^2 t)')  # 修改这里\nplt.title('随机游走的方差与时间关系')\nplt.xlabel('时间 t')\nplt.ylabel('方差 var(x_t)')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n\n可以直观地观察到一维随机游走的轨迹。从图像中可以看到粒子位置的随机波动，同时通过对多次模拟结果的统计分析，可以验证随机游走的数学性质，如平均位置和方差的变化规律。\n\n随机游走的平均位置是0，并不意味着粒子在每一步都必须回到0位置。粒子的位置会随机波动，但随着时间的推移，这些波动的平均值会趋近于0。这种波动的幅度可以用方差来描述，方差随时间增加而增大，具体来说，方差与时间成正比\n\n这种模拟方法也可以扩展到更高维度的随机游走研究，为理解复杂随机过程提供基础。\n\n文字写于：广东",charsets:{cjk:!0}},{title:"素材网站",frontmatter:{title:"素材网站",date:"2025-03-05T22:15:38.000Z",permalink:"/more/43561f/",categories:["更多"],tags:[null],readingShow:"top"},regularPath:"/08.%E6%9B%B4%E5%A4%9A/01.%E7%B4%A0%E6%9D%90%E7%BD%91%E7%AB%99.html",relativePath:"08.更多/01.素材网站.md",key:"v-56f6029c",path:"/more/43561f/",excerpt:"<p>一些好用的素材网站</p>\n",lastUpdated:"2025/3/30 23:24:54",lastUpdatedTimestamp:1743348294e3,headersStr:null,content:"一些好用的素材网站\n\n\n# 壁纸网站\n\nPixiv-可直接访问的pixiv站\n\nwallpaperscraft-Free\n\n4kwallpapers-Free\n\nwallhere-Free\n\n\n# emoji\n\nEmoji 词典,复制,图像,排行榜...EMOJIALL.com\n\n\n# icon\n\niconfont-阿里巴巴矢量图标库\n\nIllustrations | unDraw\n\nByteDance IconPark\n\n文字写于：广东",normalizedContent:"一些好用的素材网站\n\n\n# 壁纸网站\n\npixiv-可直接访问的pixiv站\n\nwallpaperscraft-free\n\n4kwallpapers-free\n\nwallhere-free\n\n\n# emoji\n\nemoji 词典,复制,图像,排行榜...emojiall.com\n\n\n# icon\n\niconfont-阿里巴巴矢量图标库\n\nillustrations | undraw\n\nbytedance iconpark\n\n文字写于：广东",charsets:{cjk:!0}},{title:"关于",frontmatter:{title:"关于",date:"2025-03-05T22:14:51.000Z",permalink:"/about/",categories:["关于"],tags:["关于"],author:{name:"msingbai",link:"https://github.com/msingbai"},readingShow:"top"},regularPath:"/09.%E5%85%B3%E4%BA%8E/01.%E5%85%B3%E4%BA%8E.html",relativePath:"09.关于/01.关于.md",key:"v-59c7b2f8",path:"/about/",headers:[{level:2,title:"关于",slug:"关于",normalizedTitle:"关于",charIndex:2},{level:3,title:"📚 关于本站",slug:"📚-关于本站",normalizedTitle:"📚 关于本站",charIndex:17},{level:3,title:"👨‍💻 关于我",slug:"👨‍💻-关于我",normalizedTitle:"👨‍💻 关于我",charIndex:75},{level:3,title:"⛹ 兴趣爱好",slug:"⛹-兴趣爱好",normalizedTitle:"⛹ 兴趣爱好",charIndex:106},{level:3,title:"分享过",slug:"分享过",normalizedTitle:"分享过",charIndex:157},{level:2,title:"✉️ 联系",slug:"联系",normalizedTitle:"✉️ 联系",charIndex:172}],excerpt:'<h2 id="关于"><a class="header-anchor" href="#关于">#</a> 关于</h2>\n<blockquote>\n<p>愿你平安</p>\n</blockquote>\n',lastUpdated:"2025/4/1 23:21:06",lastUpdatedTimestamp:1743520866e3,headersStr:"关于 📚 关于本站 👨‍💻 关于我 ⛹ 兴趣爱好 分享过 ✉️ 联系",content:"# 关于\n\n> 愿你平安\n\n\n# 📚 关于本站\n\n> 2022年建了简单的博客，2025开始想从这里练习前端开发，会记录技术博客和生活博客\n\n\n# 👨‍💻 关于我\n\n23岁应该是人生刚刚开始的年纪\n\n\n# ⛹ 兴趣爱好\n\n * 📖 阅读\n * 📝 写作\n * 🧳 旅行\n * 🎮︎ 电子游戏\n\n\n# 分享过\n\n * 待续\n\n\n# ✉️ 联系\n\n * GitHub: msingbai",normalizedContent:"# 关于\n\n> 愿你平安\n\n\n# 📚 关于本站\n\n> 2022年建了简单的博客，2025开始想从这里练习前端开发，会记录技术博客和生活博客\n\n\n# 👨‍💻 关于我\n\n23岁应该是人生刚刚开始的年纪\n\n\n# ⛹ 兴趣爱好\n\n * 📖 阅读\n * 📝 写作\n * 🧳 旅行\n * 🎮︎ 电子游戏\n\n\n# 分享过\n\n * 待续\n\n\n# ✉️ 联系\n\n * github: msingbai",charsets:{cjk:!0}},{title:"友情链接",frontmatter:{title:"友情链接",date:"2022-01-27T11:47:06.000Z",permalink:"/more/friend/8e1a3d/",categories:["更多"],tags:[null],article:!1,readingShow:"top"},regularPath:"/08.%E6%9B%B4%E5%A4%9A/99.%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5.html",relativePath:"08.更多/99.友情链接.md",key:"v-089d559a",path:"/more/friend/8e1a3d/",headers:[{level:3,title:"友链申请",slug:"友链申请",normalizedTitle:"友链申请",charIndex:260}],lastUpdated:"2025/3/25 10:21:04",lastUpdatedTimestamp:1742869264e3,headersStr:"友链申请",content:'小麋鹿\n\n人生的“鹿”，也是心里的“鹿”\n\n- name: 小麋鹿\n  desc: 人生的“鹿”，也是心里的“鹿”\n  avatar: https://thelu.life/thelupic.png # 可选\n  link: https://thelu.life/ # 可选\n  bgColor: "#CBEAFA" # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: "#6854A1" # 可选，默认var(--textColor)\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 友链申请\n\n与我 联系 或者 在本页面评论区留言您的友链信息，格式：(点击代码块右上角一键复制)\n\n- name: 迷新白的Blog # 昵称\n  desc: 「愿你平安」 # 介绍\n  avatar: https://avatars.githubusercontent.com/u/18241922?v=4 # 头像\n  link: https://msingbai.com/ # 链接\n\n\n1\n2\n3\n4\n\n\n申请前记得先添加本站哦~',normalizedContent:'小麋鹿\n\n人生的“鹿”，也是心里的“鹿”\n\n- name: 小麋鹿\n  desc: 人生的“鹿”，也是心里的“鹿”\n  avatar: https://thelu.life/thelupic.png # 可选\n  link: https://thelu.life/ # 可选\n  bgcolor: "#cbeafa" # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: "#6854a1" # 可选，默认var(--textcolor)\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 友链申请\n\n与我 联系 或者 在本页面评论区留言您的友链信息，格式：(点击代码块右上角一键复制)\n\n- name: 迷新白的blog # 昵称\n  desc: 「愿你平安」 # 介绍\n  avatar: https://avatars.githubusercontent.com/u/18241922?v=4 # 头像\n  link: https://msingbai.com/ # 链接\n\n\n1\n2\n3\n4\n\n\n申请前记得先添加本站哦~',charsets:{cjk:!0}},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1,readingShow:"top"},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-33f3a64c",path:"/categories/",lastUpdated:"2022/6/5 18:23:14",lastUpdatedTimestamp:1654424594e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1,readingShow:"top"},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-0c95180c",path:"/archives/",lastUpdated:"2022/6/5 18:23:14",lastUpdatedTimestamp:1654424594e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1,readingShow:"top"},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-ab5dc30c",path:"/tags/",lastUpdated:"2022/6/5 18:23:14",lastUpdatedTimestamp:1654424594e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Home",frontmatter:{home:!0,heroText:"迷新白",tagline:"“无论发生了什么，所发生的都是一切可能中对我最好的那一种”",pageClass:"vdoing-index-class",bannerBg:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/TheGleaners.jpg",features:[{title:"笔记",details:"Vue框架等技术笔记",link:"/frontend/",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/record.png",imgStyle:"width: 35% ;height: 35%"},{title:"项目",details:"一些前端和后端的项目记录",link:"/projects/",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/app.png",imgStyle:"width: 35% ;height: 35%"},{title:"阅读",details:"一些阅读轨迹",link:"/read/",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/read.png",imgStyle:"width: 35% ;height: 35%"}],postList:"detailed",readingShow:"top"},regularPath:"/",relativePath:"index.md",key:"v-69d810e6",path:"/",lastUpdated:"2025/4/25 20:22:48",lastUpdatedTimestamp:1745583768e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Infomap算法",frontmatter:{title:"Infomap算法",date:"2025-03-25T16:11:01.000Z",permalink:"/pages/d30ed8/",categories:["科学","网络科学"],tags:[null],readingShow:"top"},regularPath:"/07.%E7%A7%91%E5%AD%A6/01.%E7%BD%91%E7%BB%9C%E7%A7%91%E5%AD%A6/02.Infomap%E7%AE%97%E6%B3%95.html",relativePath:"07.科学/01.网络科学/02.Infomap算法.md",key:"v-9632e184",path:"/pages/d30ed8/",headers:[{level:3,title:"核心思想",slug:"核心思想",normalizedTitle:"核心思想",charIndex:226},{level:3,title:"数学原理",slug:"数学原理",normalizedTitle:"数学原理",charIndex:424},{level:3,title:"算法步骤",slug:"算法步骤",normalizedTitle:"算法步骤",charIndex:565}],excerpt:"<p>社区发现算法的一种，基于信息论的Infomap算法</p>\n",lastUpdated:"2025/4/1 17:40:18",lastUpdatedTimestamp:1743500418e3,headersStr:"核心思想 数学原理 算法步骤",content:"社区发现算法的一种，基于信息论的Infomap算法\n\n\n# 02.Infomap算法\n\nInfomap是一款实现于Map Equation理论上的网络聚类算法，它能够高效地识别复杂网络中的信息流模式，由Martin Rosvall和Carl T. Bergstrom于2008年提出。它通过优化信息流来描述网络中的社区结构，被认为是当前最有效的社区发现算法之一。\n\n目前作者仍有维护这个算法的官网 mapequation.org - code\n\n\n# 核心思想\n\nInfomap将网络中的社区发现问题转化为信息编码问题，其基本思想是：\n\n 1. 随机游走模型：将网络看作信息流动的通道，假设信息（或随机游走者）在网络中流动。\n 2. 两级编码：使用Huffman编码的思想，为频繁访问的节点（社区内部）分配短编码，为不频繁访问的节点（社区间转移）分配长编码。\n 3. 最小化描述长度：寻找社区划分，使得描述随机游走路径的平均编码长度最小。\n\n\n# 数学原理\n\nInfomap试图最小化的目标函数是Map方程：\n\nL(M)=qH(Q)+Σi=1mpiH(Pi)\n\n其中：\n\n * M表示网络划分\n * q是社区间转移的概率\n * H(Q)是社区间转移的熵\n * p^i是社区i内的访问概率\n * H(P^i)是社区i内的熵\n\n\n# 算法步骤\n\n 1. 初始化：将每个节点视为一个独立社区\n 2. 计算当前划分的编码长度\n 3. 尝试不同的节点移动或社区合并\n 4. 接受能最大程度减少编码长度的改变\n 5. 重复直到编码长度不再显著减少\n\n文字写于：广东",normalizedContent:"社区发现算法的一种，基于信息论的infomap算法\n\n\n# 02.infomap算法\n\ninfomap是一款实现于map equation理论上的网络聚类算法，它能够高效地识别复杂网络中的信息流模式，由martin rosvall和carl t. bergstrom于2008年提出。它通过优化信息流来描述网络中的社区结构，被认为是当前最有效的社区发现算法之一。\n\n目前作者仍有维护这个算法的官网 mapequation.org - code\n\n\n# 核心思想\n\ninfomap将网络中的社区发现问题转化为信息编码问题，其基本思想是：\n\n 1. 随机游走模型：将网络看作信息流动的通道，假设信息（或随机游走者）在网络中流动。\n 2. 两级编码：使用huffman编码的思想，为频繁访问的节点（社区内部）分配短编码，为不频繁访问的节点（社区间转移）分配长编码。\n 3. 最小化描述长度：寻找社区划分，使得描述随机游走路径的平均编码长度最小。\n\n\n# 数学原理\n\ninfomap试图最小化的目标函数是map方程：\n\nl(m)=qh(q)+σi=1mpih(pi)\n\n其中：\n\n * m表示网络划分\n * q是社区间转移的概率\n * h(q)是社区间转移的熵\n * p^i是社区i内的访问概率\n * h(p^i)是社区i内的熵\n\n\n# 算法步骤\n\n 1. 初始化：将每个节点视为一个独立社区\n 2. 计算当前划分的编码长度\n 3. 尝试不同的节点移动或社区合并\n 4. 接受能最大程度减少编码长度的改变\n 5. 重复直到编码长度不再显著减少\n\n文字写于：广东",charsets:{cjk:!0}},{title:"论文阅读-1",frontmatter:{title:"论文阅读-1",date:"2025-03-30T14:54:16.000Z",permalink:"/science/6350d5/",categories:["科学","网络科学"],tags:["社区发现","论文阅读"],readingShow:"top"},regularPath:"/07.%E7%A7%91%E5%AD%A6/01.%E7%BD%91%E7%BB%9C%E7%A7%91%E5%AD%A6/03.%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-1.html",relativePath:"07.科学/01.网络科学/03.论文阅读-1.md",key:"v-6085ef4c",path:"/science/6350d5/",headers:[{level:2,title:"摘要阅读",slug:"摘要阅读",normalizedTitle:"摘要阅读",charIndex:144},{level:2,title:"列举的七篇社区检测算法 [1-7]",slug:"列举的七篇社区检测算法-1-7",normalizedTitle:"列举的七篇社区检测算法 [1-7]",charIndex:522}],excerpt:"<p>这次阅读的论文是</p>\n<p><strong>Estimating the resolution limit of the map equation in community detection</strong></p>\n<p>有关社区发现算法分辨率极限的估算，涉及到Infomap和模块度两种社区发现方法</p>\n",lastUpdated:"2025/4/1 17:40:18",lastUpdatedTimestamp:1743500418e3,headersStr:"摘要阅读 列举的七篇社区检测算法 [1-7]",content:"这次阅读的论文是\n\nEstimating the resolution limit of the map equation in community detection\n\n有关社区发现算法分辨率极限的估算，涉及到Infomap和模块度两种社区发现方法\n\n\n# 03.论文阅读-1\n\n\n# 摘要阅读\n\n分辨率限制：若一个社区发现算法在遇到一个最小模块的规模后无法准确识别，算法会被认为具有分辨率限制\n\n有一种方法是两层级分配方法，即给一个节点簇划分为一个社区，节点簇中的若干节点为第一级，这个节点簇视作一个抽象的第二级节点。目前这种方法的函数都被视为具有分辨率限制和影响它分辨率的某种参数。\n\nEstimating探讨的是分辨率限制是如何影响map方程的（即Infomap算法），文章给出的结论是Infomap算法的分辨率限制由模块之间的总链接数决定，而不是像基于模块度评价的算法那样，后者的分辨率限制取决于整个网络中的总链接数。\n\n文章的结论是地图方程的分辨率限制要宽松得多，会宽松多个数量级，并且认为分辨率限制是由于将多个层次的模块结构生硬的纳入了两个层级的划分方法。\n\n多层级的地图方程有效消除了嵌套多层次模块结构的网络分辨率限制\n\n\n# 列举的七篇社区检测算法 [1-7]\n\n> [1]《Finding and evaluating community structure in networks》\n> \n> Girvan 和 Newman 在 2004 年发表的一篇关于网络社区结构发现与评估的论文,首次提出了模块度的社区发现算法\n> \n> [2]《Uncovering the overlapping community structure of complex networks in nature and society》\n> \n> 由 Palla 等人于 2005 年发表在《Nature》上的一篇关于复杂网络中重叠社区结构的研究论文。\n> \n> [3]《Stability of graph communities across time scales》\n> \n> [4]《Maps of random walks on complex networks reveal community structure》\n> \n> [5]《Community Structure in Time-Dependent, Multiscale, and Multiplex Networks》\n> \n> [6]《Finding and evaluating community structure in networks》\n> \n> [7]《A tutorial on spectral clustering》\n\nInfomap是一款实现于Map Equation理论上的网络聚类算法，它能够高效地识别复杂网络中的信息流模式，并据此进行多层次的社区划分。此项目由mapequation团队维护，提供了一个强大的工具来解析和理解网络结构。\n\n文字写于：广东",normalizedContent:"这次阅读的论文是\n\nestimating the resolution limit of the map equation in community detection\n\n有关社区发现算法分辨率极限的估算，涉及到infomap和模块度两种社区发现方法\n\n\n# 03.论文阅读-1\n\n\n# 摘要阅读\n\n分辨率限制：若一个社区发现算法在遇到一个最小模块的规模后无法准确识别，算法会被认为具有分辨率限制\n\n有一种方法是两层级分配方法，即给一个节点簇划分为一个社区，节点簇中的若干节点为第一级，这个节点簇视作一个抽象的第二级节点。目前这种方法的函数都被视为具有分辨率限制和影响它分辨率的某种参数。\n\nestimating探讨的是分辨率限制是如何影响map方程的（即infomap算法），文章给出的结论是infomap算法的分辨率限制由模块之间的总链接数决定，而不是像基于模块度评价的算法那样，后者的分辨率限制取决于整个网络中的总链接数。\n\n文章的结论是地图方程的分辨率限制要宽松得多，会宽松多个数量级，并且认为分辨率限制是由于将多个层次的模块结构生硬的纳入了两个层级的划分方法。\n\n多层级的地图方程有效消除了嵌套多层次模块结构的网络分辨率限制\n\n\n# 列举的七篇社区检测算法 [1-7]\n\n> [1]《finding and evaluating community structure in networks》\n> \n> girvan 和 newman 在 2004 年发表的一篇关于网络社区结构发现与评估的论文,首次提出了模块度的社区发现算法\n> \n> [2]《uncovering the overlapping community structure of complex networks in nature and society》\n> \n> 由 palla 等人于 2005 年发表在《nature》上的一篇关于复杂网络中重叠社区结构的研究论文。\n> \n> [3]《stability of graph communities across time scales》\n> \n> [4]《maps of random walks on complex networks reveal community structure》\n> \n> [5]《community structure in time-dependent, multiscale, and multiplex networks》\n> \n> [6]《finding and evaluating community structure in networks》\n> \n> [7]《a tutorial on spectral clustering》\n\ninfomap是一款实现于map equation理论上的网络聚类算法，它能够高效地识别复杂网络中的信息流模式，并据此进行多层次的社区划分。此项目由mapequation团队维护，提供了一个强大的工具来解析和理解网络结构。\n\n文字写于：广东",charsets:{cjk:!0}}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"随笔",link:"/speak/"},{text:"前端",link:"/frontend/",items:[{text:"Vuepress",link:"/vuepress/"}]},{text:"后端",link:"/backend/",items:[{text:"Springboot",link:"/springboot/"},{}]},{text:"工具",link:"/tools/",items:[{text:"开发工具",link:"/dev/"},{text:"系统工具",link:"/sys/"}]},{text:"读吧",link:"/read/"},{text:"项目",link:"/projects/",items:[{text:"智能浇花系统",link:"https://blog.csdn.net/Spark217/article/details/145481497?spm=1001.2014.3001.5502"},{text:"用户中心系统",link:"https://msingbai.top/projects/#%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E7%B3%BB%E7%BB%9F"}]},{text:"更多",link:"/more/",items:[{text:"关于",link:"/about/"},{text:"友情链接",link:"/more/friend/8e1a3d/"}]}],sidebarDepth:2,logo:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/candle.png",repo:"https://github.com/msingbai",searchMaxSuggestions:10,lastUpdated:"更新时间",docsDir:"docs",editLinks:!1,editLinkText:"编辑此页",categoryText:"随笔",bodyBgImg:["https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/TheGleaners.jpg"],bodyBgImgOpacity:1,contentBgStyle:1,updateBar:{showToArticle:!0,moreArticle:"/archives"},sidebar:{"/00.目录页/":[{title:"导航栏-目录页",collapsable:!0,children:[["00.导航栏-目录页/01.随笔.md","随意写写","/speak"],["00.导航栏-目录页/02.工具.md","工具 - 工欲善其事必先利其器","/tools/"],["00.导航栏-目录页/03.读吧.md","一些值得看看的内容","/read"],["00.导航栏-目录页/04.项目.md","项目","/projects/"],["00.导航栏-目录页/05.前端.md","前端","/frontend/"],["00.导航栏-目录页/06.后端.md","后端","/backend/"],["00.导航栏-目录页/07.科学.md","科学","/science/"],["00.导航栏-目录页/08.更多.md","更多","/more/"]]},{title:"工具-目录页",collapsable:!0,children:[]},{title:"前端-目录页",collapsable:!0,children:[]},{title:"后端-目录页",collapsable:!0,children:[]},{title:"更多-目录页",collapsable:!0,children:[]}],catalogue:{"随笔":"/speak","工具":"/tools/","读吧":"/read","项目":"/projects/","前端":"/frontend/","后端":"/backend/","科学":"/science/","更多":"/more/"},"/01.随笔/":[{title:"2025",collapsable:!0,children:[["01.2025/01.爱在我和离开我的人之间流动.md","爱在我和离开我的人之间流动","/speak/0cfc6a/"],["01.2025/02.发了消息没有得到回复.md","发了消息没有得到回复","/speak/abe993/"],["01.2025/03.闭门造车.md","闭门造车","/speak/e7004c/"],["01.2025/04.学习如何不带要求的请求（祈祷）.md","学习如何不带要求的请求（祈祷）","/speak/d49cd9/"],["01.2025/05.威慑教育-读书后的思考和笔记.md","威慑教育-读书后的思考和笔记","/speak/33bb4e/"],["01.2025/06.做计划.md","做计划","/speak/f369be/"]]}],"/03.读吧/":[{title:"阅读轨迹",collapsable:!0,children:[["01.阅读轨迹/01.网络平台视频的编码压缩.md","网络平台视频的编码压缩","/read/ab0020/"],["01.阅读轨迹/02.基础乐理知识.md","基础乐理知识","/read/f7013e/"]]}],"/04.项目/":[{title:"用户中心系统",collapsable:!0,children:[["01.用户中心系统/01.前端初始化.md","前端初始化","/projects/58146f/"],["01.用户中心系统/02.后端初始化-需求分析.md","用户中心后端-1","/projects/39691d/"],["01.用户中心系统/03.数据库表初始化-MyBatis.md","用户中心后端-2","/projects/8eef80/"],["01.用户中心系统/05.注册模块（后端）.md","注册模块（后端）","/projects/ea56cb/"],["01.用户中心系统/06.登录模块（后端）.md","登录模块（后端）","/projects/df37ab/"],["01.用户中心系统/07.管理模块（后端）.md","管理模块（后端）","/projects/6d7d3b/"],["01.用户中心系统/08.Ant Design Pro前端初始化.md","Ant Design Pro前端初始化","/projects/659246/"],["01.用户中心系统/09.登录+注册模块（前端）.md","登录+注册模块（前端）","/projects/32822d/"],["01.用户中心系统/10.管理模块+登录状态（前端）.md","管理模块+登录状态（前端）","/projects/b75478/"],["01.用户中心系统/11.注销模块+校验模块（前后端）.md","注销模块+校验模块（前后端）","/projects/253f15/"],["01.用户中心系统/12.异常处理器（后端优化）.md","异常处理器（后端优化）","/projects/042bc4/"],["01.用户中心系统/13.请求响应处理器（前端）.md","请求响应处理器（前端）","/projects/21a0e3/"]]},{title:"仿Deepseek官网AI聊天网站",collapsable:!0,children:[["02.仿Deepseek官网AI聊天网站/01.需求分析.md","需求分析","/projects/272e22/"],["02.仿Deepseek官网AI聊天网站/02.首页&聊天页开发.md","首页&聊天页开发","/projects/42cbd8/"],["02.仿Deepseek官网AI聊天网站/03.接入deepseek.md","接入deepseek","/projects/38148f/"],["02.仿Deepseek官网AI聊天网站/04.数据库搭建.md","数据库搭建","/projects/55f22c/"],["02.仿Deepseek官网AI聊天网站/05.首页完善（前端）.md","首页完善（前端）","/projects/482be9/"],["02.仿Deepseek官网AI聊天网站/06.登陆系统-clerk.md","登陆系统-clerk","/projects/97c25a/"],["02.仿Deepseek官网AI聊天网站/07.首页完善（后端）.md","首页完善（后端）","/projects/8bb9c5/"],["02.仿Deepseek官网AI聊天网站/08.保留上下文对话.md","保留上下文对话","/projects/b6c8ea/"],["02.仿Deepseek官网AI聊天网站/09.第一次对话完善.md","第一次对话完善","/projects/0d846d/"]]},{title:"尤克里里音月-Flutter（需求分析阶段）",collapsable:!0,children:[["03.尤克里里音月-Flutter（需求分析阶段）/01.尤克里里音月.md","尤克里里音月","/projects/8113ff/"]]}],"/05.前端/":[{title:"Vuepress",collapsable:!0,children:[["01.Vuepress/01.博客建设记录.md","博客建设记录","/frontend/791d80/"],["01.Vuepress/02.vuepress添加百度统计记录访客量.md","vuepress添加百度统计记录访客量","/frontend/1e42d2/"],["01.Vuepress/03.首页优化.md","首页优化","/frontend/643c6f/"],["01.Vuepress/04.购买了域名.md","购买了域名","/frontend/a7583a/"]]},{title:"前端基础",collapsable:!0,children:[["02.前端基础/01.HTML基础.md","HTML基础","/frontend/13ea93/"],["02.前端基础/02.CSS基础.md","CSS基础","/frontend/a85fdc/"],["02.前端基础/03.JavaScript基础.md","JavaScript基础","/frontend/f4d1ca/"],["02.前端基础/04.前端是什么.md","前端是什么","/frontend/cb876d/"],["02.前端基础/05.过渡.md","过渡","/frontend/917b7b/"],["02.前端基础/06.前端开发笔试练习.md","前端开发笔试练习","/frontend/5af018/"]]},{title:"Vue",collapsable:!0,children:[["03.Vue/01.组合式api&选项式api.md","组合式api&选项式api","/pages/306fc0/"]]}],"/06.后端/":[{title:"后端基础",collapsable:!0,children:[["01.后端基础/01.后端基础.md","后端基础","/backend/e7f78e/"],["01.后端基础/02.后端的四层架构.md","后端的四层架构","/backend/55d0d1/"],["01.后端基础/03.Spring Boot和Spring、MyBatis.md","Spring Boot和Spring、MyBatis","/backend/e63710/"],["01.后端基础/04.cookie是什么.md","cookie是什么","/backend/970703/"]]}],"/07.科学/":[{title:"网络科学",collapsable:!0,children:[["01.网络科学/01.随机游走.md","随机游走","/science/1157cf/"],["01.网络科学/02.Infomap算法.md","Infomap算法","/pages/d30ed8/"],["01.网络科学/03.论文阅读-1.md","论文阅读-1","/science/6350d5/"]]},{title:"计算机网络",collapsable:!0,children:[]}],"/08.更多/":[["01.素材网站.md","素材网站","/more/43561f/"],["99.友情链接.md","友情链接","/more/friend/8e1a3d/"]],"/09.关于/":[["01.关于.md","关于","/about/"]]},blogInfo:{blogCreate:"2025-03-02",indexView:!0,pageView:!0,readingTime:!0,eachFileWords:[{name:"随笔",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\01.随笔.md",wordsCount:44,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"01.随笔",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/speak_tucao.png",description:null}},title:"随意写写",date:"2022-09-15T15:40:00.000Z",permalink:"/speak",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"工具",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\02.工具.md",wordsCount:93,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"02.工具",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/tools.png",description:"一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的特殊软件"}},title:"工具 - 工欲善其事必先利其器",date:"2022-06-08T14:32:32.000Z",permalink:"/tools/",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"读吧",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\03.读吧.md",wordsCount:57,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"03.读吧",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/read.png",description:"读书笔记，书籍推荐"}},title:"一些值得看看的内容",date:"2022-06-06T15:40:00.000Z",permalink:"/read",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"项目",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\04.项目.md",wordsCount:48,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"04.项目",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/app.png",description:"个人项目分享"}},title:"项目",date:"2022-06-09T15:40:00.000Z",permalink:"/projects/",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"前端",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\05.前端.md",wordsCount:101,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"05.前端",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/frontend.png",description:"前端开发是将设计转化为用户可以直接在浏览器中交互的界面，注重用户体验和视觉效果，让网站或应用具有良好的操作性和美观性的技术。"}},title:"前端",date:"2025-03-06T03:27:27.000Z",permalink:"/frontend/",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"后端",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\06.后端.md",wordsCount:110,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"06.后端",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/backend.png",description:"后端开发是构建和维护服务器端应用程序的过程，主要涉及业务逻辑处理、数据存储与管理、为前端提供接口设计以及与外部系统的交互，是整个应用的“大脑”和“中枢”。"}},title:"后端",date:"2025-03-18T09:39:30.000Z",permalink:"/backend/",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"科学",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\07.科学.md",wordsCount:54,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"07.科学",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/science.png",description:"分享探索科学的神奇和美好~"}},title:"科学",date:"2025-03-20T21:02:03.000Z",permalink:"/science/",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"更多",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\00.目录页\\00.导航栏-目录页\\08.更多.md",wordsCount:49,readingTime:"1",pageComponent:{name:"Catalogue",data:{key:"08.更多",imgUrl:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/more.png",description:"其他内容，待更新"}},title:"更多",date:"2022-06-27T11:44:08.000Z",permalink:"/more/",sidebar:!1,article:!1,comment:!1,editLink:!1},{name:"爱在我和离开我的人之间流动",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\01.随笔\\01.2025\\01.爱在我和离开我的人之间流动.md",wordsCount:"1.2k",readingTime:"4.2m",title:"爱在我和离开我的人之间流动",date:"2025-02-16T00:36:36.000Z",permalink:"/speak/0cfc6a/",categories:["随笔",2025],tags:["爱","生命教育"]},{name:"发了消息没有得到回复",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\01.随笔\\01.2025\\02.发了消息没有得到回复.md",wordsCount:686,readingTime:"2.3m",title:"发了消息没有得到回复",date:"2025-03-05T19:13:32.000Z",permalink:"/speak/abe993/",categories:["随笔",2025],tags:["补强"]},{name:"闭门造车",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\01.随笔\\01.2025\\03.闭门造车.md",wordsCount:286,readingTime:"1m",title:"闭门造车",date:"2025-03-14T18:17:07.000Z",permalink:"/speak/e7004c/",categories:["随笔",2025],tags:["找工作"]},{name:"学习如何不带要求的请求（祈祷）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\01.随笔\\01.2025\\04.学习如何不带要求的请求（祈祷）.md",wordsCount:"1.8k",readingTime:"6.2m",title:"学习如何不带要求的请求（祈祷）",date:"2025-04-05T23:46:27.000Z",permalink:"/speak/d49cd9/",categories:["随笔",2025],tags:[null]},{name:"威慑教育-读书后的思考和笔记",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\01.随笔\\01.2025\\05.威慑教育-读书后的思考和笔记.md",wordsCount:828,readingTime:"2.8m",title:"威慑教育-读书后的思考和笔记",date:"2025-04-08T21:29:46.000Z",permalink:"/speak/33bb4e/",categories:["随笔",2025],tags:[null]},{name:"做计划",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\01.随笔\\01.2025\\06.做计划.md",wordsCount:109,readingTime:"1",title:"做计划",date:"2025-04-22T03:08:02.000Z",permalink:"/speak/f369be/",categories:["随笔",2025],tags:[null]},{name:"网络平台视频的编码压缩",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\03.读吧\\01.阅读轨迹\\01.网络平台视频的编码压缩.md",wordsCount:"1.1k",readingTime:"3.7m",title:"网络平台视频的编码压缩",date:"2025-03-17T21:54:23.000Z",permalink:"/read/ab0020/",categories:["读吧","阅读轨迹"],tags:["视频编码"]},{name:"基础乐理知识",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\03.读吧\\01.阅读轨迹\\02.基础乐理知识.md",wordsCount:877,readingTime:"3.5m",title:"基础乐理知识",date:"2025-04-17T01:09:20.000Z",permalink:"/read/f7013e/",categories:["读吧","阅读轨迹"],tags:["乐理知识"]},{name:"前端初始化",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\01.前端初始化.md",wordsCount:"2k",readingTime:"8m",title:"前端初始化",date:"2025-03-06T14:31:04.000Z",permalink:"/projects/58146f/",categories:["项目","用户中心系统"],tags:["前端","Vue"]},{name:"后端初始化-需求分析",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\02.后端初始化-需求分析.md",wordsCount:"1.5k",readingTime:"6.5m",title:"用户中心后端-1",date:"2025-03-07T15:25:44.000Z",permalink:"/projects/39691d/",categories:["项目","用户中心系统"],tags:["后端"]},{name:"数据库表初始化-MyBatis",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\03.数据库表初始化-MyBatis.md",wordsCount:964,readingTime:"4.1m",title:"用户中心后端-2",date:"2025-03-26T18:51:59.000Z",permalink:"/projects/8eef80/",categories:["项目","用户中心系统"],tags:[null]},{name:"注册模块（后端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\05.注册模块（后端）.md",wordsCount:"2.2k",readingTime:"9.8m",title:"注册模块（后端）",date:"2025-04-02T12:30:05.000Z",permalink:"/projects/ea56cb/",categories:["项目","用户中心系统"],tags:["用户中心系统"]},{name:"登录模块（后端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\06.登录模块（后端）.md",wordsCount:"3.2k",readingTime:"13.1m",title:"登录模块（后端）",date:"2025-04-03T11:25:50.000Z",permalink:"/projects/df37ab/",categories:["项目","用户中心系统"],tags:["用户中心系统"]},{name:"管理模块（后端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\07.管理模块（后端）.md",wordsCount:905,readingTime:"4.2m",title:"管理模块（后端）",date:"2025-04-05T11:46:54.000Z",permalink:"/projects/6d7d3b/",categories:["项目","用户中心系统"],tags:["用户中心系统"]},{name:"Ant Design Pro前端初始化",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\08.Ant Design Pro前端初始化.md",wordsCount:"3k",readingTime:"12.9m",title:"Ant Design Pro前端初始化",date:"2025-04-07T15:13:51.000Z",permalink:"/projects/659246/",categories:["项目","用户中心系统"],tags:[null]},{name:"登录+注册模块（前端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\09.登录+注册模块（前端）.md",wordsCount:"2k",readingTime:"9.5m",title:"登录+注册模块（前端）",date:"2025-04-07T18:03:50.000Z",permalink:"/projects/32822d/",categories:["项目","用户中心系统"],tags:["用户中心系统","前端"]},{name:"管理模块+登录状态（前端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\10.管理模块+登录状态（前端）.md",wordsCount:"2.3k",readingTime:"10.9m",title:"管理模块+登录状态（前端）",date:"2025-04-08T16:05:04.000Z",permalink:"/projects/b75478/",categories:["项目","用户中心系统"],tags:["用户中心系统"]},{name:"注销模块+校验模块（前后端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\11.注销模块+校验模块（前后端）.md",wordsCount:"1.7k",readingTime:"7.8m",title:"注销模块+校验模块（前后端）",date:"2025-04-11T20:59:25.000Z",permalink:"/projects/253f15/",categories:["项目","用户中心系统"],tags:["用户中心系统"]},{name:"异常处理器（后端优化）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\12.异常处理器（后端优化）.md",wordsCount:"1.1k",readingTime:"5.6m",title:"异常处理器（后端优化）",date:"2025-04-12T11:18:56.000Z",permalink:"/projects/042bc4/",categories:["项目","用户中心系统"],tags:["用户中心系统"]},{name:"请求响应处理器（前端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\01.用户中心系统\\13.请求响应处理器（前端）.md",wordsCount:"1.2k",readingTime:"5.7m",title:"请求响应处理器（前端）",date:"2025-04-22T15:35:50.000Z",permalink:"/projects/21a0e3/",categories:["项目","用户中心系统"],tags:[null]},{name:"需求分析",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\01.需求分析.md",wordsCount:719,readingTime:"2.8m",title:"需求分析",date:"2025-04-24T15:07:40.000Z",permalink:"/projects/272e22/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"首页&聊天页开发",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\02.首页&聊天页开发.md",wordsCount:"2.2k",readingTime:"10.8m",title:"首页&聊天页开发",date:"2025-04-25T16:37:08.000Z",permalink:"/projects/42cbd8/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"接入deepseek",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\03.接入deepseek.md",wordsCount:524,readingTime:"2.4m",title:"接入deepseek",date:"2025-04-25T19:59:40.000Z",permalink:"/projects/38148f/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"数据库搭建",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\04.数据库搭建.md",wordsCount:"1.9k",readingTime:"8.4m",title:"数据库搭建",date:"2025-04-24T23:37:33.000Z",permalink:"/projects/55f22c/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"首页完善（前端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\05.首页完善（前端）.md",wordsCount:753,readingTime:"3.8m",title:"首页完善（前端）",date:"2025-04-26T05:02:41.000Z",permalink:"/projects/482be9/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"登陆系统-clerk",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\06.登陆系统-clerk.md",wordsCount:414,readingTime:"2m",title:"登陆系统-clerk",date:"2025-04-27T03:33:36.000Z",permalink:"/projects/97c25a/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"首页完善（后端）",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\07.首页完善（后端）.md",wordsCount:690,readingTime:"3.3m",title:"首页完善（后端）",date:"2025-04-27T08:14:54.000Z",permalink:"/projects/8bb9c5/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"保留上下文对话",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\08.保留上下文对话.md",wordsCount:785,readingTime:"3.6m",title:"保留上下文对话",date:"2025-04-27T20:29:06.000Z",permalink:"/projects/b6c8ea/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:[null]},{name:"第一次对话完善",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\02.仿Deepseek官网AI聊天网站\\09.第一次对话完善.md",wordsCount:354,readingTime:"1.5m",title:"第一次对话完善",date:"2025-04-27T22:36:02.000Z",permalink:"/projects/0d846d/",categories:["项目","仿Deepseek官网AI聊天网站"],tags:["仿Deepseek官网AI聊天网站"]},{name:"尤克里里音月",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\04.项目\\03.尤克里里音月-Flutter（需求分析阶段）\\01.尤克里里音月.md",wordsCount:515,readingTime:"2.1m",title:"尤克里里音月",date:"2025-03-19T18:02:09.000Z",permalink:"/projects/8113ff/",categories:["项目","尤克里里音月-Flutter"],tags:["尤克里里","Flutter"]},{name:"博客建设记录",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\01.Vuepress\\01.博客建设记录.md",wordsCount:"1.2k",readingTime:"4.8m",title:"博客建设记录",date:"2025-03-06T03:27:36.000Z",permalink:"/frontend/791d80/",categories:["前端"],tags:["前端","Vuepress"]},{name:"vuepress添加百度统计记录访客量",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\01.Vuepress\\02.vuepress添加百度统计记录访客量.md",wordsCount:101,readingTime:"1",title:"vuepress添加百度统计记录访客量",date:"2025-03-31T15:00:24.000Z",permalink:"/frontend/1e42d2/",categories:["前端","Vuepress"],tags:["Vuepress"]},{name:"首页优化",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\01.Vuepress\\03.首页优化.md",wordsCount:257,readingTime:"1.1m",title:"首页优化",date:"2025-04-01T21:25:58.000Z",permalink:"/frontend/643c6f/",categories:["前端","Vuepress"],tags:[null]},{name:"购买了域名",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\01.Vuepress\\04.购买了域名.md",wordsCount:340,readingTime:"1.4m",title:"购买了域名",date:"2025-04-15T05:40:35.000Z",permalink:"/frontend/a7583a/",categories:["前端","Vuepress"],tags:["Vuepress"]},{name:"HTML基础",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\02.前端基础\\01.HTML基础.md",wordsCount:"1.8k",readingTime:"6.8m",title:"HTML基础",date:"2025-03-12T13:54:15.000Z",permalink:"/frontend/13ea93/",categories:["前端","前端基础"],tags:["HTML","MARKDOWN"]},{name:"CSS基础",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\02.前端基础\\02.CSS基础.md",wordsCount:"1.6k",readingTime:"5.9m",title:"CSS基础",date:"2025-03-13T05:43:23.000Z",permalink:"/frontend/a85fdc/",categories:["前端","前端基础"],tags:["CSS"]},{name:"JavaScript基础",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\02.前端基础\\03.JavaScript基础.md",wordsCount:"1.1k",readingTime:"4.5m",title:"JavaScript基础",date:"2025-03-15T23:37:22.000Z",permalink:"/frontend/f4d1ca/",categories:["前端","前端基础"],tags:["JavaScript"]},{name:"前端是什么",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\02.前端基础\\04.前端是什么.md",wordsCount:"1.5k",readingTime:"5.3m",title:"前端是什么",date:"2025-03-17T15:01:14.000Z",permalink:"/frontend/cb876d/",categories:["前端","前端基础"],tags:["前端"]},{name:"过渡",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\02.前端基础\\05.过渡.md",wordsCount:96,readingTime:"1",title:"过渡",date:"2025-03-20T20:04:32.000Z",permalink:"/frontend/917b7b/",categories:["前端","前端基础"],tags:[null]},{name:"前端开发笔试练习",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\02.前端基础\\06.前端开发笔试练习.md",wordsCount:"3.3k",readingTime:"12.9m",title:"前端开发笔试练习",date:"2025-04-19T10:10:22.000Z",permalink:"/frontend/5af018/",categories:["前端","前端基础"],tags:["前端基础"]},{name:"组合式api&选项式api",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\05.前端\\03.Vue\\01.组合式api&选项式api.md",wordsCount:832,readingTime:"3.5m",title:"组合式api&选项式api",date:"2025-04-23T08:54:36.000Z",permalink:"/pages/306fc0/",categories:["前端","Vue"],tags:[null]},{name:"后端基础",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\06.后端\\01.后端基础\\01.后端基础.md",wordsCount:"2.1k",readingTime:"7.8m",title:"后端基础",date:"2025-03-18T15:16:14.000Z",permalink:"/backend/e7f78e/",categories:["后端","后端基础"],tags:["后端"]},{name:"后端的四层架构",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\06.后端\\01.后端基础\\02.后端的四层架构.md",wordsCount:"2.2k",readingTime:"7.9m",title:"后端的四层架构",date:"2025-03-25T09:48:04.000Z",permalink:"/backend/55d0d1/",categories:["后端","后端基础"],tags:[null]},{name:"Spring Boot和Spring、MyBatis",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\06.后端\\01.后端基础\\03.Spring Boot和Spring、MyBatis.md",wordsCount:"1.7k",readingTime:"7.5m",title:"Spring Boot和Spring、MyBatis",date:"2025-03-26T10:38:51.000Z",permalink:"/backend/e63710/",categories:["后端","后端基础"],tags:["Spring"]},{name:"cookie是什么",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\06.后端\\01.后端基础\\04.cookie是什么.md",wordsCount:188,readingTime:"1",title:"cookie是什么",date:"2025-04-02T11:49:41.000Z",permalink:"/backend/970703/",categories:["后端","后端基础"],tags:[null]},{name:"随机游走",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\07.科学\\01.网络科学\\01.随机游走.md",wordsCount:"1.7k",readingTime:"6.4m",title:"随机游走",date:"2025-03-20T21:06:10.000Z",permalink:"/science/1157cf/",categories:["科学","网络科学"],tags:["随机游走","网络科学"]},{name:"Infomap算法",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\07.科学\\01.网络科学\\02.Infomap算法.md",wordsCount:469,readingTime:"1.7m",title:"Infomap算法",date:"2025-03-25T16:11:01.000Z",permalink:"/pages/d30ed8/",categories:["科学","网络科学"],tags:[null]},{name:"论文阅读-1",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\07.科学\\01.网络科学\\03.论文阅读-1.md",wordsCount:650,readingTime:"2.4m",title:"论文阅读-1",date:"2025-03-30T14:54:16.000Z",permalink:"/science/6350d5/",categories:["科学","网络科学"],tags:["社区发现","论文阅读"]},{name:"素材网站",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\08.更多\\01.素材网站.md",wordsCount:120,readingTime:"1",title:"素材网站",date:"2025-03-05T22:15:38.000Z",permalink:"/more/43561f/",categories:["更多"],tags:[null]},{name:"友情链接",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\08.更多\\99.友情链接.md",wordsCount:179,readingTime:"1",title:"友情链接",date:"2022-01-27T11:47:06.000Z",permalink:"/more/friend/8e1a3d/",categories:["更多"],tags:[null],article:!1},{name:"关于",filePath:"E:\\VueCode\\Blog\\msingbai.github.io\\docs\\09.关于\\01.关于.md",wordsCount:131,readingTime:"1",title:"关于",date:"2025-03-05T22:14:51.000Z",permalink:"/about/",categories:["关于"],tags:["关于"],author:{name:"msingbai",link:"https://github.com/msingbai"}}],mdFileCountType:"archives",totalWords:"archives",moutedEvent:".tags-wrapper",indexIteration:2500,pageIteration:2500},indexImg:{navColor:1,switchNavColor:!1,bgTimeColor:!1,bgTimeColorArray:["transparent","rgba(255, 148, 48, .2)","rgba(0, 0, 0, .3)","rgba(0, 0, 0, .5)"],descFade:!0,desc:["到点就做事，时间表比效果更重要","你没有自己想的那样不好","there is a better way for everything,always","一切自有天意，不要总往坏处想","天赋的核心是坚持，确切的说，是'无限地找到下一个坚持的理由的能力'","无论考第几名、无论学得是快是慢,学会一样就有多一分的快乐","即使对手是天下第一的剑客，也敢于亮剑"],descFontSize:"1.4rem",descFadeInTime:200,descFadeOutTime:1e4,descNextTime:1e3,bubble:!1,bubblePosition:0,bubbleNum:200},author:{name:"迷新白",link:"https://msingbai.github.io/"},blogger:{avatar:"https://avatars.githubusercontent.com/u/18241922?v=4",name:"迷新白",slogan:"愿你平安"},social:{iconfontCssFile:"//at.alicdn.com/t/c/font_4876126_srsadj2r7pg.css",icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:SparkLast@163.com"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/msingbai"},{iconClass:"icon-zhihu",title:"知乎",link:"https://www.zhihu.com/people/mi-xin-bai"}]},footer:{createYear:2022,copyrightInfo:'迷新白 | 的博客<br> <a href="/sitemap.xml">sitemap</a> icon by <a target="_blank" href="https://icons8.com">Icons8</a><br/><a href="https://www.foreverblog.cn/go.html" target="_blank"> <img src="https://img.foreverblog.cn/wormhole_3_tp.gif" alt="" style="width:auto;height:32px;" title="穿梭虫洞-随机访问十年之约友链博客"></a>'},htmlModules:{}},locales:{"/":{lang:"zh-CN",title:"迷新白的博客",description:"标签页标题",path:"/"}}};var pl=t(65),dl=(t(280),t(127)),ml=t(128),hl=t(20);var fl={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:r}}=n;return!(e||!1===t||!0===r)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(hl.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(hl.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(hl.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let r=0,s=n.length;r<s;r++){const{frontmatter:{categories:s,tags:o}}=n[r];"array"===Object(hl.n)(s)&&s.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[r]))}),"array"===Object(hl.n)(o)&&o.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[r]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Jt.component(dl.default),Jt.component(ml.default);function gl(n){return n.toString().padStart(2,"0")}t(284);Jt.component("Aplayer",()=>t.e(81).then(t.bind(null,805))),Jt.component("BlockToggle",()=>Promise.all([t.e(0),t.e(50)]).then(t.bind(null,806))),Jt.component("Bubble",()=>Promise.all([t.e(0),t.e(51)]).then(t.bind(null,807))),Jt.component("Card",()=>Promise.all([t.e(0),t.e(52)]).then(t.bind(null,808))),Jt.component("demo",()=>t.e(83).then(t.bind(null,877))),Jt.component("Fantasy",()=>Promise.all([t.e(0),t.e(53)]).then(t.bind(null,809))),Jt.component("GlobalTip",()=>Promise.all([t.e(0),t.e(54)]).then(t.bind(null,810))),Jt.component("IndexBigImg",()=>Promise.all([t.e(0),t.e(55)]).then(t.bind(null,811))),Jt.component("LastReadingPopup",()=>Promise.resolve().then(t.bind(null,65))),Jt.component("SidebarReverse",()=>t.e(82).then(t.bind(null,812))),Jt.component("WebInfo",()=>Promise.all([t.e(0),t.e(41)]).then(t.bind(null,801))),Jt.component("Badge",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,813))),Jt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,127))),Jt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,128)));t(285);var vl=t(125),bl=t.n(vl),yl=t(30);let xl,wl,kl;var El;"valine"===(El="gitalk")?t.e(117).then(t.t.bind(null,792,7)).then(n=>wl=n.default):"gitalk"===El?Promise.all([t.e(0),t.e(115)]).then(t.t.bind(null,793,7)).then(()=>t.e(112).then(t.t.bind(null,794,7))).then(n=>xl=n.default):"artalk"===El&&Promise.all([t.e(0),t.e(114)]).then(t.t.bind(null,795,7)).then(()=>Promise.all([t.e(0),t.e(116)]).then(t.t.bind(null,796,7))).then(()=>t.e(80).then(t.bind(null,797))).then(n=>kl=n.default);function Sl(n,e){const t={};return Reflect.ownKeys(n).forEach(r=>{if("string"==typeof n[r])try{t[r]=bl.a.render(n[r],e)}catch(e){console.warn(`Comment config option error at key named "${r}"`),console.warn("More info: "+e.message),t[r]=n[r]}else t[r]=n[r]}),t}function _l(n,e){const t=document.querySelector(n);n&&t.classList.add(e)}console.log(`Current frontend version is ${yl.dependencies.artalk} , plugin version is ${yl.name}@v${yl.version} , more details:`,yl.homepage);const Tl={gitalk:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t);new xl(Sl({clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"},{frontmatter:n})).render(e)},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}},valine:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t),new wl({...Sl({clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"},{frontmatter:n}),el:"#"+e})},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}},artalk:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t),new kl({el:"#"+e,pageKey:"",pageTitle:"",server:{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.server,site:{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.site}),function(){const n=setInterval((function(){const e=document.querySelectorAll(".atk-plug-btn");e&&e.length>0&&(3===e.length?(console.log("Artalk自带图片已开启"),{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disableEmotion&&_l(".atk-plug-btn:nth-child(1)","atk-plug-btn-emo-hidden"),{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disablePicture&&_l(".atk-plug-btn:nth-child(2)","atk-plug-btn-pic-hidden"),{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disablePreview&&_l(".atk-plug-btn:nth-child(3)","atk-plug-btn-pre-hidden")):(console.log("Artalk自带图片已关闭"),{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disableEmotion&&_l(".atk-plug-btn:nth-child(1)","atk-plug-btn-emo-hidden"),{clientID:"Ov23liNj2adE8JXoJCi9",clientSecret:"5b1cdc691d330d03083a5a5e77a6b701f42ebbd9",repo:"msingbai.github.io",owner:"msingbai",admin:["msingbai"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],proxy:"https://strong-caramel-969805.netlify.app/github_access_token",body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disablePreview&&_l(".atk-plug-btn:nth-child(2)","atk-plug-btn-pre-hidden")),clearInterval(n))}),500)}()},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}}},Al="vuepress-plugin-vdoing-comment";let Cl=null;function jl(n){return Tl.gitalk.clear(Al)}function Il(n){return!1!==n.comment&&!1!==n.comments}function Pl(n){clearTimeout(Cl);if(document.querySelector("main.page"))return Tl.gitalk.render(n,Al);Cl=setTimeout(()=>Pl(n),200)}var Bl={mounted(){Cl=setTimeout(()=>{const n={to:{},from:{},...this.$frontmatter};jl()&&Il(n)&&Pl(n)},1e3),this.$router.afterEach((n,e)=>{if(n&&e&&n.path===e.path)return;const t={to:n,from:e,...this.$frontmatter};jl()&&Il(t)&&Pl(t)})}},Ol=Object(al.a)(Bl,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports,ql={props:{color:{required:!1,default:"rgb(66, 185, 131)"}}},Ll=(t(290),Object(al.a)(ql,(function(){return(0,this._self._c)("div",{staticClass:"spinner",style:{background:this.color}})}),[],!1,null,"1bbcb91a",null).exports);const Rl={name:"Mermaid",props:{id:{type:String,required:!1,default:()=>"diagram_"+Date.now()},graph:{type:String,required:!1}},data:()=>({svg:void 0}),computed:{graphData(){return this.graph?this.graph:this.$slots.default[0].text}},render(n){return void 0===this.svg?n("Loading"):n("div",{class:["mermaid-diagram"],domProps:{innerHTML:this.svg,style:"width: 100%"}})},mounted(){t.e(113).then(t.t.bind(null,798,7)).then(n=>{n.initialize({startOnLoad:!0}),n.render(this.id,this.graphData,n=>{this.svg=n})})},components:{Loading:Ll}};var Ml={name:"ReadingProgress",data:()=>({readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}),watch:{$readingShow(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:()=>Math.max(document.body.scrollHeight,document.body.offsetHeight,0),getScreenHeight:()=>Math.max(window.innerHeight,document.documentElement.clientHeight,0),getReadingTop:()=>Math.max(window.pageYOffset,document.documentElement.scrollTop,0),getTransform(){const n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find(e=>e in n.style)||void 0},getProgressStyle(){const n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?`${this.transform}: scaleX(${n})`:`width: ${100*n}%`;case"left":case"right":return this.transform?`${this.transform}: scaleY(${n})`:`height: ${100*n}%`;default:return null}}}},Ul=(t(291),Object(al.a)(Ml,(function(){var n=this._self._c;return n("ClientOnly",[this.$readingShow?n("div",{staticClass:"reading-progress",class:this.$readingShow},[n("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),zl={name:"DynamicTitle",data:()=>({originTitle:"",recoverTimeout:null,config:{showIcon:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/candle-withback.png",showText:"",hideIcon:"https://cdn.jsdelivr.net/gh/msingbai/blog_img@main/blog/basic/candle-withback.png",hideText:"迷新白的Blog",recoverTime:2e3}}),mounted(){this.originTitle=document.title,""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.addEventListener("visibilitychange",()=>{document.hidden?this.hidden():this.visible()})},methods:{hidden(){""!==this.config.hideIcon&&this.getIconElm().setAttribute("href",this.config.hideIcon),document.title=this.config.hideText,clearTimeout(this.recoverTimeout)},visible(){""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.title=this.config.showText+this.originTitle,this.recoverTimeout=setTimeout(()=>{document.title=this.originTitle},this.config.recoverTime)},getIconElm(){let n=document.querySelector("link[rel=icon]");return null===n&&(n=document.createElement("link"),n.setAttribute("rel","icon"),document.head.appendChild(n)),n}},watch:{$route(n,e){n.path!==e.path&&(this.originTitle=document.title,clearTimeout(this.recoverTimeout))}}},Dl=Object(al.a)(zl,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports,$l=t(126),Fl=t.n($l),Nl=[({Vue:n,options:e,router:r,siteData:s,isServer:o})=>{"undefined"!=typeof window&&t.e(118).then(t.bind(null,791)).then(e=>{const r=e.default;n.use(t(281)),n.use(r.Adsense),n.use(r.InArticleAdsense),n.use(r.InFeedAdsense)}).catch(n=>{console.log(n)});let i=!1;n.component(pl.default.name,pl.default),n.mixin({mounted(){i||(window.addEventListener("unload",this.saveLastReading),i=!0)},methods:{saveLastReading(){localStorage.setItem("lastReading",JSON.stringify({path:this.$route.path,scrollTop:document.documentElement.scrollTop,timestamp:(new Date).getTime()}))}}})},({Vue:n,options:e,router:t,siteData:r})=>{r.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${gl(n.getUTCMonth()+1)}-${gl(n.getUTCDate())} ${gl(n.getUTCHours())}:${gl(n.getUTCMinutes())}:${gl(n.getUTCSeconds())}`}(e)),t?n.author=t:r.themeConfig.author&&(n.author=r.themeConfig.author)}),n.mixin(fl)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:n})=>{n.component("Comment",Ol)},({Vue:n})=>{n.component(Rl.name,Rl)},({router:n})=>{var e,t,r,s,o,i;"undefined"!=typeof window&&(e=window,t=document,r="script",s="ga",e.GoogleAnalyticsObject=s,e.ga=e.ga||function(){(e.ga.q=e.ga.q||[]).push(arguments)},e.ga.l=1*new Date,o=t.createElement(r),i=t.getElementsByTagName(r)[0],o.async=1,o.src="https://www.google-analytics.com/analytics.js",i.parentNode.insertBefore(o,i),ga("create","UA-98291551-1","auto"),ga("set","anonymizeIp",!0),n.afterEach((function(e){ga("set","page",n.app.$withBase(e.fullPath)),ga("send","pageview")})))},({router:n})=>{"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},({router:n})=>{"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?6278805df8085230968e4b768fb072b5";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),n.afterEach((function(n){_hmt.push(["_trackPageview",n.fullPath])})))},({Vue:n})=>{n.component(Ul.name,Ul),n.mixin({computed:{$readingShow(){return this.$page.frontmatter.readingShow}}})},({Vue:n})=>{n.component("DynamicTitle",Dl)},({Vue:n})=>n.use(Fl.a)],Hl=["Comment","ReadingProgress","DynamicTitle"];class Vl extends class{constructor(){this.store=new Jt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Jt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Vl.prototype,{getPageAsyncComponent:aa,getLayoutAsyncComponent:la,getAsyncComponent:ca,getVueComponent:ua});var Wl={install(n){const e=new Vl;n.$vuepress=e,n.prototype.$vuepress=e}};function Jl(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Gl={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return da("pageKey",e),Jt.component(e)||Jt.component(e,aa(e)),Jt.component(e)?n(e):n("")}},Zl={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Ql={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Kl=(t(292),t(293),Object(al.a)(Ql,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Xl={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Jt.config.productionTip=!1,Jt.use(Vi),Jt.use(Wl),Jt.mixin(function(n,e,t=Jt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const r=new(n(t.$vuepress.$get("siteData"))),s=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),o={};return Object.keys(s).reduce((n,e)=>(e.startsWith("$")&&(n[e]=s[e].get),n),o),{computed:o}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const r in n)"/"===r?t=n[r]:0===this.$page.path.indexOf(r)&&(e=n[r]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},ul)),Jt.component("Content",Gl),Jt.component("ContentSlotsDistributor",Zl),Jt.component("OutboundLink",Kl),Jt.component("ClientOnly",Xl),Jt.component("Layout",la("Layout")),Jt.component("NotFound",la("NotFound")),Jt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.10",hash:"3376568"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:ul.routerBase||ul.base,t=new Vi({base:e,mode:"history",fallback:!1,routes:cl,scrollBehavior:(n,e,t)=>t||(n.hash?!Jt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,r)=>{if(Jl(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Jl(n,t)?r(t):r()}else r();else{const t=e.path+"/",s=e.path+".html";Jl(n,s)?r(s):Jl(n,t)?r(t):r()}})}(t);const r={};try{await Promise.all(Nl.filter(n=>"function"==typeof n).map(e=>e({Vue:Jt,options:r,router:t,siteData:ul,isServer:n})))}catch(n){console.error(n)}return{app:new Jt(Object.assign(r,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Hl.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);