name: CI

#on: [push]

# 在master分支发生push事件时触发。
on:
  push:
    branches:
      - master

env: # 设置环境变量
  TZ: Asia/Shanghai # 时区（设置时区可使页面中的`最近更新时间`使用时区时间）

jobs:
  build: # 自定义名称
    runs-on: ubuntu-latest # 运行在虚拟机环境ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout # 步骤1
        uses: actions/checkout@v1 # 使用的动作。格式：userName/repoName。作用：检出仓库，获取源码。 官方actions库：https://github.com/actions
      - name: Use Node.js ${{ matrix.node-version }} # 步骤2
        uses: actions/setup-node@v1 # 作用：安装nodejs
        with:
          node-version: ${{ matrix.node-version }} # 版本
      - name: run deploy.sh # 步骤3
        env: # 设置环境变量
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: npm install && npm run deploy

      # 如只提交到github pages可以使用github-pages-deploy-action，详见: https://github.com/JamesIves/github-pages-deploy-action


#未测试
#      - name: Deploy to GitHub Pages 🚀 # 步骤 4
#        uses: JamesIves/github-pages-deploy-action@v4
#        with:
#          branch: gh-pages # 部署到的分支
#          folder: dist # 部署的文件夹路径，根据你的项目构建输出调整
#          clean: true # 清理目标分支中不再存在的文件
#          clean-exclude: |
#            .nojekyll
#            CNAME
#          token: ${{ secrets.ACCESS_TOKEN }} # 使用 GitHub Token